// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_GetSecuritySnapshot.proto

#include "Qot_GetSecuritySnapshot.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Qot_GetSecuritySnapshot {
class C2SDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<C2S>
      _instance;
} _C2S_default_instance_;
class EquitySnapshotExDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EquitySnapshotExData>
      _instance;
} _EquitySnapshotExData_default_instance_;
class WarrantSnapshotExDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WarrantSnapshotExData>
      _instance;
} _WarrantSnapshotExData_default_instance_;
class SnapshotBasicDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapshotBasicData>
      _instance;
} _SnapshotBasicData_default_instance_;
class SnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Snapshot>
      _instance;
} _Snapshot_default_instance_;
class S2CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2C>
      _instance;
} _S2C_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
}  // namespace Qot_GetSecuritySnapshot
namespace protobuf_Qot_5fGetSecuritySnapshot_2eproto {
void InitDefaultsC2SImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  {
    void* ptr = &::Qot_GetSecuritySnapshot::_C2S_default_instance_;
    new (ptr) ::Qot_GetSecuritySnapshot::C2S();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetSecuritySnapshot::C2S::InitAsDefaultInstance();
}

void InitDefaultsC2S() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsC2SImpl);
}

void InitDefaultsEquitySnapshotExDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_GetSecuritySnapshot::_EquitySnapshotExData_default_instance_;
    new (ptr) ::Qot_GetSecuritySnapshot::EquitySnapshotExData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetSecuritySnapshot::EquitySnapshotExData::InitAsDefaultInstance();
}

void InitDefaultsEquitySnapshotExData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEquitySnapshotExDataImpl);
}

void InitDefaultsWarrantSnapshotExDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  {
    void* ptr = &::Qot_GetSecuritySnapshot::_WarrantSnapshotExData_default_instance_;
    new (ptr) ::Qot_GetSecuritySnapshot::WarrantSnapshotExData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetSecuritySnapshot::WarrantSnapshotExData::InitAsDefaultInstance();
}

void InitDefaultsWarrantSnapshotExData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWarrantSnapshotExDataImpl);
}

void InitDefaultsSnapshotBasicDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  {
    void* ptr = &::Qot_GetSecuritySnapshot::_SnapshotBasicData_default_instance_;
    new (ptr) ::Qot_GetSecuritySnapshot::SnapshotBasicData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetSecuritySnapshot::SnapshotBasicData::InitAsDefaultInstance();
}

void InitDefaultsSnapshotBasicData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSnapshotBasicDataImpl);
}

void InitDefaultsSnapshotImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsSnapshotBasicData();
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsEquitySnapshotExData();
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsWarrantSnapshotExData();
  {
    void* ptr = &::Qot_GetSecuritySnapshot::_Snapshot_default_instance_;
    new (ptr) ::Qot_GetSecuritySnapshot::Snapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetSecuritySnapshot::Snapshot::InitAsDefaultInstance();
}

void InitDefaultsSnapshot() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSnapshotImpl);
}

void InitDefaultsS2CImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsSnapshot();
  {
    void* ptr = &::Qot_GetSecuritySnapshot::_S2C_default_instance_;
    new (ptr) ::Qot_GetSecuritySnapshot::S2C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetSecuritySnapshot::S2C::InitAsDefaultInstance();
}

void InitDefaultsS2C() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsS2CImpl);
}

void InitDefaultsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsC2S();
  {
    void* ptr = &::Qot_GetSecuritySnapshot::_Request_default_instance_;
    new (ptr) ::Qot_GetSecuritySnapshot::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetSecuritySnapshot::Request::InitAsDefaultInstance();
}

void InitDefaultsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestImpl);
}

void InitDefaultsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsS2C();
  {
    void* ptr = &::Qot_GetSecuritySnapshot::_Response_default_instance_;
    new (ptr) ::Qot_GetSecuritySnapshot::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_GetSecuritySnapshot::Response::InitAsDefaultInstance();
}

void InitDefaultsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::C2S, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::C2S, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::C2S, securitylist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, issuedshares_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, issuedmarketval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, netasset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, netprofit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, earningspershare_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, outstandingshares_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, outstandingmarketval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, netassetpershare_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, eyrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, perate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::EquitySnapshotExData, pbrate_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, conversionrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, warranttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, strikeprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, maturitytime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, endtradetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, recoveryprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, streetvolumn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, issuevolumn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, streetrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, impliedvolatility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::WarrantSnapshotExData, premium_),
  3,
  12,
  4,
  0,
  1,
  2,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, security_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, issuspend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, listtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, lotsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, pricespread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, highprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, openprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, lowprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, lastcloseprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, curprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::SnapshotBasicData, turnoverrate_),
  2,
  3,
  4,
  0,
  14,
  5,
  1,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Snapshot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Snapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Snapshot, basic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Snapshot, equityexdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Snapshot, warrantexdata_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::S2C, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::S2C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::S2C, snapshotlist_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Request, c2s_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Response, rettype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Response, retmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Response, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_GetSecuritySnapshot::Response, s2c_),
  3,
  0,
  2,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::Qot_GetSecuritySnapshot::C2S)},
  { 7, 23, sizeof(::Qot_GetSecuritySnapshot::EquitySnapshotExData)},
  { 34, 52, sizeof(::Qot_GetSecuritySnapshot::WarrantSnapshotExData)},
  { 65, 85, sizeof(::Qot_GetSecuritySnapshot::SnapshotBasicData)},
  { 100, 108, sizeof(::Qot_GetSecuritySnapshot::Snapshot)},
  { 111, 117, sizeof(::Qot_GetSecuritySnapshot::S2C)},
  { 118, 124, sizeof(::Qot_GetSecuritySnapshot::Request)},
  { 125, 134, sizeof(::Qot_GetSecuritySnapshot::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetSecuritySnapshot::_C2S_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetSecuritySnapshot::_EquitySnapshotExData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetSecuritySnapshot::_WarrantSnapshotExData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetSecuritySnapshot::_SnapshotBasicData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetSecuritySnapshot::_Snapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetSecuritySnapshot::_S2C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetSecuritySnapshot::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_GetSecuritySnapshot::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Qot_GetSecuritySnapshot.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035Qot_GetSecuritySnapshot.proto\022\027Qot_Get"
      "SecuritySnapshot\032\014Common.proto\032\020Qot_Comm"
      "on.proto\"1\n\003C2S\022*\n\014securityList\030\001 \003(\0132\024."
      "Qot_Common.Security\"\207\002\n\024EquitySnapshotEx"
      "Data\022\024\n\014issuedShares\030\001 \002(\003\022\027\n\017issuedMark"
      "etVal\030\002 \002(\001\022\020\n\010netAsset\030\003 \002(\001\022\021\n\tnetProf"
      "it\030\004 \002(\001\022\030\n\020earningsPershare\030\005 \002(\001\022\031\n\021ou"
      "tstandingShares\030\006 \002(\003\022\034\n\024outstandingMark"
      "etVal\030\007 \002(\001\022\030\n\020netAssetPershare\030\010 \002(\001\022\016\n"
      "\006eyRate\030\t \002(\001\022\016\n\006peRate\030\n \002(\001\022\016\n\006pbRate\030"
      "\013 \002(\001\"\273\002\n\025WarrantSnapshotExData\022\026\n\016conve"
      "rsionRate\030\001 \002(\001\022\023\n\013warrantType\030\002 \002(\005\022\023\n\013"
      "strikePrice\030\003 \002(\001\022\024\n\014maturityTime\030\004 \002(\t\022"
      "\024\n\014endTradeTime\030\005 \002(\t\022#\n\005owner\030\006 \002(\0132\024.Q"
      "ot_Common.Security\022\025\n\rrecoveryPrice\030\007 \002("
      "\001\022\024\n\014streetVolumn\030\010 \002(\003\022\023\n\013issueVolumn\030\t"
      " \002(\003\022\022\n\nstreetRate\030\n \002(\001\022\r\n\005delta\030\013 \002(\001\022"
      "\031\n\021impliedVolatility\030\014 \002(\001\022\017\n\007premium\030\r "
      "\002(\001\"\302\002\n\021SnapshotBasicData\022&\n\010security\030\001 "
      "\002(\0132\024.Qot_Common.Security\022\014\n\004type\030\002 \002(\005\022"
      "\021\n\tisSuspend\030\003 \002(\010\022\020\n\010listTime\030\004 \002(\t\022\017\n\007"
      "lotSize\030\005 \002(\005\022\023\n\013priceSpread\030\006 \002(\001\022\022\n\nup"
      "dateTime\030\007 \002(\t\022\021\n\thighPrice\030\010 \002(\001\022\021\n\tope"
      "nPrice\030\t \002(\001\022\020\n\010lowPrice\030\n \002(\001\022\026\n\016lastCl"
      "osePrice\030\013 \002(\001\022\020\n\010curPrice\030\014 \002(\001\022\016\n\006volu"
      "me\030\r \002(\003\022\020\n\010turnover\030\016 \002(\001\022\024\n\014turnoverRa"
      "te\030\017 \002(\001\"\321\001\n\010Snapshot\0229\n\005basic\030\001 \002(\0132*.Q"
      "ot_GetSecuritySnapshot.SnapshotBasicData"
      "\022C\n\014equityExData\030\002 \001(\0132-.Qot_GetSecurity"
      "Snapshot.EquitySnapshotExData\022E\n\rwarrant"
      "ExData\030\003 \001(\0132..Qot_GetSecuritySnapshot.W"
      "arrantSnapshotExData\">\n\003S2C\0227\n\014snapshotL"
      "ist\030\001 \003(\0132!.Qot_GetSecuritySnapshot.Snap"
      "shot\"4\n\007Request\022)\n\003c2s\030\001 \002(\0132\034.Qot_GetSe"
      "curitySnapshot.C2S\"m\n\010Response\022\025\n\007retTyp"
      "e\030\001 \002(\005:\004-400\022\016\n\006retMsg\030\002 \001(\t\022\017\n\007errCode"
      "\030\003 \001(\005\022)\n\003s2c\030\004 \001(\0132\034.Qot_GetSecuritySna"
      "pshot.S2C"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1489);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Qot_GetSecuritySnapshot.proto", &protobuf_RegisterTypes);
  ::protobuf_Common_2eproto::AddDescriptors();
  ::protobuf_Qot_5fCommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Qot_5fGetSecuritySnapshot_2eproto
namespace Qot_GetSecuritySnapshot {

// ===================================================================

void C2S::InitAsDefaultInstance() {
}
void C2S::clear_securitylist() {
  securitylist_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int C2S::kSecurityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

C2S::C2S()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsC2S();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetSecuritySnapshot.C2S)
}
C2S::C2S(const C2S& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      securitylist_(from.securitylist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Qot_GetSecuritySnapshot.C2S)
}

void C2S::SharedCtor() {
  _cached_size_ = 0;
}

C2S::~C2S() {
  // @@protoc_insertion_point(destructor:Qot_GetSecuritySnapshot.C2S)
  SharedDtor();
}

void C2S::SharedDtor() {
}

void C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* C2S::descriptor() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const C2S& C2S::default_instance() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsC2S();
  return *internal_default_instance();
}

C2S* C2S::New(::google::protobuf::Arena* arena) const {
  C2S* n = new C2S;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void C2S::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetSecuritySnapshot.C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  securitylist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetSecuritySnapshot.C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Qot_Common.Security securityList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_securitylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetSecuritySnapshot.C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetSecuritySnapshot.C2S)
  return false;
#undef DO_
}

void C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetSecuritySnapshot.C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Qot_Common.Security securityList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->securitylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->securitylist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetSecuritySnapshot.C2S)
}

::google::protobuf::uint8* C2S::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetSecuritySnapshot.C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Qot_Common.Security securityList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->securitylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->securitylist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetSecuritySnapshot.C2S)
  return target;
}

size_t C2S::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetSecuritySnapshot.C2S)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .Qot_Common.Security securityList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->securitylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->securitylist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void C2S::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetSecuritySnapshot.C2S)
  GOOGLE_DCHECK_NE(&from, this);
  const C2S* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const C2S>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetSecuritySnapshot.C2S)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetSecuritySnapshot.C2S)
    MergeFrom(*source);
  }
}

void C2S::MergeFrom(const C2S& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetSecuritySnapshot.C2S)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  securitylist_.MergeFrom(from.securitylist_);
}

void C2S::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetSecuritySnapshot.C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2S::CopyFrom(const C2S& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetSecuritySnapshot.C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2S::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->securitylist())) return false;
  return true;
}

void C2S::Swap(C2S* other) {
  if (other == this) return;
  InternalSwap(other);
}
void C2S::InternalSwap(C2S* other) {
  using std::swap;
  securitylist_.InternalSwap(&other->securitylist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata C2S::GetMetadata() const {
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EquitySnapshotExData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquitySnapshotExData::kIssuedSharesFieldNumber;
const int EquitySnapshotExData::kIssuedMarketValFieldNumber;
const int EquitySnapshotExData::kNetAssetFieldNumber;
const int EquitySnapshotExData::kNetProfitFieldNumber;
const int EquitySnapshotExData::kEarningsPershareFieldNumber;
const int EquitySnapshotExData::kOutstandingSharesFieldNumber;
const int EquitySnapshotExData::kOutstandingMarketValFieldNumber;
const int EquitySnapshotExData::kNetAssetPershareFieldNumber;
const int EquitySnapshotExData::kEyRateFieldNumber;
const int EquitySnapshotExData::kPeRateFieldNumber;
const int EquitySnapshotExData::kPbRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquitySnapshotExData::EquitySnapshotExData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsEquitySnapshotExData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetSecuritySnapshot.EquitySnapshotExData)
}
EquitySnapshotExData::EquitySnapshotExData(const EquitySnapshotExData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&issuedshares_, &from.issuedshares_,
    static_cast<size_t>(reinterpret_cast<char*>(&pbrate_) -
    reinterpret_cast<char*>(&issuedshares_)) + sizeof(pbrate_));
  // @@protoc_insertion_point(copy_constructor:Qot_GetSecuritySnapshot.EquitySnapshotExData)
}

void EquitySnapshotExData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&issuedshares_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pbrate_) -
      reinterpret_cast<char*>(&issuedshares_)) + sizeof(pbrate_));
}

EquitySnapshotExData::~EquitySnapshotExData() {
  // @@protoc_insertion_point(destructor:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  SharedDtor();
}

void EquitySnapshotExData::SharedDtor() {
}

void EquitySnapshotExData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquitySnapshotExData::descriptor() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquitySnapshotExData& EquitySnapshotExData::default_instance() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsEquitySnapshotExData();
  return *internal_default_instance();
}

EquitySnapshotExData* EquitySnapshotExData::New(::google::protobuf::Arena* arena) const {
  EquitySnapshotExData* n = new EquitySnapshotExData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquitySnapshotExData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&issuedshares_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&netassetpershare_) -
        reinterpret_cast<char*>(&issuedshares_)) + sizeof(netassetpershare_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&eyrate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pbrate_) -
        reinterpret_cast<char*>(&eyrate_)) + sizeof(pbrate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EquitySnapshotExData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 issuedShares = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_issuedshares();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &issuedshares_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double issuedMarketVal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_issuedmarketval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &issuedmarketval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double netAsset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_netasset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &netasset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double netProfit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_netprofit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &netprofit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double earningsPershare = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_earningspershare();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &earningspershare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 outstandingShares = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_outstandingshares();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &outstandingshares_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double outstandingMarketVal = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_outstandingmarketval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &outstandingmarketval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double netAssetPershare = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_netassetpershare();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &netassetpershare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double eyRate = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_eyrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &eyrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double peRate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_perate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &perate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double pbRate = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_pbrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pbrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  return false;
#undef DO_
}

void EquitySnapshotExData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 issuedShares = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->issuedshares(), output);
  }

  // required double issuedMarketVal = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->issuedmarketval(), output);
  }

  // required double netAsset = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->netasset(), output);
  }

  // required double netProfit = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->netprofit(), output);
  }

  // required double earningsPershare = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->earningspershare(), output);
  }

  // required int64 outstandingShares = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->outstandingshares(), output);
  }

  // required double outstandingMarketVal = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->outstandingmarketval(), output);
  }

  // required double netAssetPershare = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->netassetpershare(), output);
  }

  // required double eyRate = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->eyrate(), output);
  }

  // required double peRate = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->perate(), output);
  }

  // required double pbRate = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->pbrate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetSecuritySnapshot.EquitySnapshotExData)
}

::google::protobuf::uint8* EquitySnapshotExData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 issuedShares = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->issuedshares(), target);
  }

  // required double issuedMarketVal = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->issuedmarketval(), target);
  }

  // required double netAsset = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->netasset(), target);
  }

  // required double netProfit = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->netprofit(), target);
  }

  // required double earningsPershare = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->earningspershare(), target);
  }

  // required int64 outstandingShares = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->outstandingshares(), target);
  }

  // required double outstandingMarketVal = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->outstandingmarketval(), target);
  }

  // required double netAssetPershare = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->netassetpershare(), target);
  }

  // required double eyRate = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->eyrate(), target);
  }

  // required double peRate = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->perate(), target);
  }

  // required double pbRate = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->pbrate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  return target;
}

size_t EquitySnapshotExData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  size_t total_size = 0;

  if (has_issuedshares()) {
    // required int64 issuedShares = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issuedshares());
  }

  if (has_issuedmarketval()) {
    // required double issuedMarketVal = 2;
    total_size += 1 + 8;
  }

  if (has_netasset()) {
    // required double netAsset = 3;
    total_size += 1 + 8;
  }

  if (has_netprofit()) {
    // required double netProfit = 4;
    total_size += 1 + 8;
  }

  if (has_earningspershare()) {
    // required double earningsPershare = 5;
    total_size += 1 + 8;
  }

  if (has_outstandingshares()) {
    // required int64 outstandingShares = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->outstandingshares());
  }

  if (has_outstandingmarketval()) {
    // required double outstandingMarketVal = 7;
    total_size += 1 + 8;
  }

  if (has_netassetpershare()) {
    // required double netAssetPershare = 8;
    total_size += 1 + 8;
  }

  if (has_eyrate()) {
    // required double eyRate = 9;
    total_size += 1 + 8;
  }

  if (has_perate()) {
    // required double peRate = 10;
    total_size += 1 + 8;
  }

  if (has_pbrate()) {
    // required double pbRate = 11;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t EquitySnapshotExData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000007ff) ^ 0x000007ff) == 0) {  // All required fields are present.
    // required int64 issuedShares = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issuedshares());

    // required double issuedMarketVal = 2;
    total_size += 1 + 8;

    // required double netAsset = 3;
    total_size += 1 + 8;

    // required double netProfit = 4;
    total_size += 1 + 8;

    // required double earningsPershare = 5;
    total_size += 1 + 8;

    // required int64 outstandingShares = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->outstandingshares());

    // required double outstandingMarketVal = 7;
    total_size += 1 + 8;

    // required double netAssetPershare = 8;
    total_size += 1 + 8;

    // required double eyRate = 9;
    total_size += 1 + 8;

    // required double peRate = 10;
    total_size += 1 + 8;

    // required double pbRate = 11;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquitySnapshotExData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  GOOGLE_DCHECK_NE(&from, this);
  const EquitySnapshotExData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquitySnapshotExData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetSecuritySnapshot.EquitySnapshotExData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetSecuritySnapshot.EquitySnapshotExData)
    MergeFrom(*source);
  }
}

void EquitySnapshotExData::MergeFrom(const EquitySnapshotExData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      issuedshares_ = from.issuedshares_;
    }
    if (cached_has_bits & 0x00000002u) {
      issuedmarketval_ = from.issuedmarketval_;
    }
    if (cached_has_bits & 0x00000004u) {
      netasset_ = from.netasset_;
    }
    if (cached_has_bits & 0x00000008u) {
      netprofit_ = from.netprofit_;
    }
    if (cached_has_bits & 0x00000010u) {
      earningspershare_ = from.earningspershare_;
    }
    if (cached_has_bits & 0x00000020u) {
      outstandingshares_ = from.outstandingshares_;
    }
    if (cached_has_bits & 0x00000040u) {
      outstandingmarketval_ = from.outstandingmarketval_;
    }
    if (cached_has_bits & 0x00000080u) {
      netassetpershare_ = from.netassetpershare_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      eyrate_ = from.eyrate_;
    }
    if (cached_has_bits & 0x00000200u) {
      perate_ = from.perate_;
    }
    if (cached_has_bits & 0x00000400u) {
      pbrate_ = from.pbrate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EquitySnapshotExData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquitySnapshotExData::CopyFrom(const EquitySnapshotExData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetSecuritySnapshot.EquitySnapshotExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquitySnapshotExData::IsInitialized() const {
  if ((_has_bits_[0] & 0x000007ff) != 0x000007ff) return false;
  return true;
}

void EquitySnapshotExData::Swap(EquitySnapshotExData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquitySnapshotExData::InternalSwap(EquitySnapshotExData* other) {
  using std::swap;
  swap(issuedshares_, other->issuedshares_);
  swap(issuedmarketval_, other->issuedmarketval_);
  swap(netasset_, other->netasset_);
  swap(netprofit_, other->netprofit_);
  swap(earningspershare_, other->earningspershare_);
  swap(outstandingshares_, other->outstandingshares_);
  swap(outstandingmarketval_, other->outstandingmarketval_);
  swap(netassetpershare_, other->netassetpershare_);
  swap(eyrate_, other->eyrate_);
  swap(perate_, other->perate_);
  swap(pbrate_, other->pbrate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquitySnapshotExData::GetMetadata() const {
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WarrantSnapshotExData::InitAsDefaultInstance() {
  ::Qot_GetSecuritySnapshot::_WarrantSnapshotExData_default_instance_._instance.get_mutable()->owner_ = const_cast< ::Qot_Common::Security*>(
      ::Qot_Common::Security::internal_default_instance());
}
void WarrantSnapshotExData::clear_owner() {
  if (owner_ != NULL) owner_->Clear();
  clear_has_owner();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WarrantSnapshotExData::kConversionRateFieldNumber;
const int WarrantSnapshotExData::kWarrantTypeFieldNumber;
const int WarrantSnapshotExData::kStrikePriceFieldNumber;
const int WarrantSnapshotExData::kMaturityTimeFieldNumber;
const int WarrantSnapshotExData::kEndTradeTimeFieldNumber;
const int WarrantSnapshotExData::kOwnerFieldNumber;
const int WarrantSnapshotExData::kRecoveryPriceFieldNumber;
const int WarrantSnapshotExData::kStreetVolumnFieldNumber;
const int WarrantSnapshotExData::kIssueVolumnFieldNumber;
const int WarrantSnapshotExData::kStreetRateFieldNumber;
const int WarrantSnapshotExData::kDeltaFieldNumber;
const int WarrantSnapshotExData::kImpliedVolatilityFieldNumber;
const int WarrantSnapshotExData::kPremiumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WarrantSnapshotExData::WarrantSnapshotExData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsWarrantSnapshotExData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
}
WarrantSnapshotExData::WarrantSnapshotExData(const WarrantSnapshotExData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  maturitytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_maturitytime()) {
    maturitytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maturitytime_);
  }
  endtradetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_endtradetime()) {
    endtradetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endtradetime_);
  }
  if (from.has_owner()) {
    owner_ = new ::Qot_Common::Security(*from.owner_);
  } else {
    owner_ = NULL;
  }
  ::memcpy(&conversionrate_, &from.conversionrate_,
    static_cast<size_t>(reinterpret_cast<char*>(&warranttype_) -
    reinterpret_cast<char*>(&conversionrate_)) + sizeof(warranttype_));
  // @@protoc_insertion_point(copy_constructor:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
}

void WarrantSnapshotExData::SharedCtor() {
  _cached_size_ = 0;
  maturitytime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endtradetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&owner_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&warranttype_) -
      reinterpret_cast<char*>(&owner_)) + sizeof(warranttype_));
}

WarrantSnapshotExData::~WarrantSnapshotExData() {
  // @@protoc_insertion_point(destructor:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  SharedDtor();
}

void WarrantSnapshotExData::SharedDtor() {
  maturitytime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endtradetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete owner_;
}

void WarrantSnapshotExData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WarrantSnapshotExData::descriptor() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WarrantSnapshotExData& WarrantSnapshotExData::default_instance() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsWarrantSnapshotExData();
  return *internal_default_instance();
}

WarrantSnapshotExData* WarrantSnapshotExData::New(::google::protobuf::Arena* arena) const {
  WarrantSnapshotExData* n = new WarrantSnapshotExData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WarrantSnapshotExData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!maturitytime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*maturitytime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!endtradetime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*endtradetime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(owner_ != NULL);
      owner_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&conversionrate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&issuevolumn_) -
        reinterpret_cast<char*>(&conversionrate_)) + sizeof(issuevolumn_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&streetrate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&warranttype_) -
        reinterpret_cast<char*>(&streetrate_)) + sizeof(warranttype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WarrantSnapshotExData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double conversionRate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_conversionrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &conversionrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 warrantType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_warranttype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &warranttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double strikePrice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_strikeprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strikeprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string maturityTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_maturitytime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->maturitytime().data(), static_cast<int>(this->maturitytime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string endTradeTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endtradetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endtradetime().data(), static_cast<int>(this->endtradetime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Qot_Common.Security owner = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double recoveryPrice = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_recoveryprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &recoveryprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 streetVolumn = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_streetvolumn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &streetvolumn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 issueVolumn = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_issuevolumn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &issuevolumn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double streetRate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_streetrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &streetrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double delta = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double impliedVolatility = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_impliedvolatility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &impliedvolatility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double premium = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_premium();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &premium_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  return false;
#undef DO_
}

void WarrantSnapshotExData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double conversionRate = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->conversionrate(), output);
  }

  // required int32 warrantType = 2;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->warranttype(), output);
  }

  // required double strikePrice = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->strikeprice(), output);
  }

  // required string maturityTime = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maturitytime().data(), static_cast<int>(this->maturitytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->maturitytime(), output);
  }

  // required string endTradeTime = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endtradetime().data(), static_cast<int>(this->endtradetime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->endtradetime(), output);
  }

  // required .Qot_Common.Security owner = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->owner_, output);
  }

  // required double recoveryPrice = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->recoveryprice(), output);
  }

  // required int64 streetVolumn = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->streetvolumn(), output);
  }

  // required int64 issueVolumn = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->issuevolumn(), output);
  }

  // required double streetRate = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->streetrate(), output);
  }

  // required double delta = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->delta(), output);
  }

  // required double impliedVolatility = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->impliedvolatility(), output);
  }

  // required double premium = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->premium(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
}

::google::protobuf::uint8* WarrantSnapshotExData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double conversionRate = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->conversionrate(), target);
  }

  // required int32 warrantType = 2;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->warranttype(), target);
  }

  // required double strikePrice = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->strikeprice(), target);
  }

  // required string maturityTime = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->maturitytime().data(), static_cast<int>(this->maturitytime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.WarrantSnapshotExData.maturityTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->maturitytime(), target);
  }

  // required string endTradeTime = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endtradetime().data(), static_cast<int>(this->endtradetime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.WarrantSnapshotExData.endTradeTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->endtradetime(), target);
  }

  // required .Qot_Common.Security owner = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->owner_, deterministic, target);
  }

  // required double recoveryPrice = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->recoveryprice(), target);
  }

  // required int64 streetVolumn = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->streetvolumn(), target);
  }

  // required int64 issueVolumn = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->issuevolumn(), target);
  }

  // required double streetRate = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->streetrate(), target);
  }

  // required double delta = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->delta(), target);
  }

  // required double impliedVolatility = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->impliedvolatility(), target);
  }

  // required double premium = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->premium(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  return target;
}

size_t WarrantSnapshotExData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  size_t total_size = 0;

  if (has_maturitytime()) {
    // required string maturityTime = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->maturitytime());
  }

  if (has_endtradetime()) {
    // required string endTradeTime = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endtradetime());
  }

  if (has_owner()) {
    // required .Qot_Common.Security owner = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->owner_);
  }

  if (has_conversionrate()) {
    // required double conversionRate = 1;
    total_size += 1 + 8;
  }

  if (has_strikeprice()) {
    // required double strikePrice = 3;
    total_size += 1 + 8;
  }

  if (has_recoveryprice()) {
    // required double recoveryPrice = 7;
    total_size += 1 + 8;
  }

  if (has_streetvolumn()) {
    // required int64 streetVolumn = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->streetvolumn());
  }

  if (has_issuevolumn()) {
    // required int64 issueVolumn = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issuevolumn());
  }

  if (has_streetrate()) {
    // required double streetRate = 10;
    total_size += 1 + 8;
  }

  if (has_delta()) {
    // required double delta = 11;
    total_size += 1 + 8;
  }

  if (has_impliedvolatility()) {
    // required double impliedVolatility = 12;
    total_size += 1 + 8;
  }

  if (has_premium()) {
    // required double premium = 13;
    total_size += 1 + 8;
  }

  if (has_warranttype()) {
    // required int32 warrantType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->warranttype());
  }

  return total_size;
}
size_t WarrantSnapshotExData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001fff) ^ 0x00001fff) == 0) {  // All required fields are present.
    // required string maturityTime = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->maturitytime());

    // required string endTradeTime = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endtradetime());

    // required .Qot_Common.Security owner = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->owner_);

    // required double conversionRate = 1;
    total_size += 1 + 8;

    // required double strikePrice = 3;
    total_size += 1 + 8;

    // required double recoveryPrice = 7;
    total_size += 1 + 8;

    // required int64 streetVolumn = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->streetvolumn());

    // required int64 issueVolumn = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issuevolumn());

    // required double streetRate = 10;
    total_size += 1 + 8;

    // required double delta = 11;
    total_size += 1 + 8;

    // required double impliedVolatility = 12;
    total_size += 1 + 8;

    // required double premium = 13;
    total_size += 1 + 8;

    // required int32 warrantType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->warranttype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WarrantSnapshotExData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  GOOGLE_DCHECK_NE(&from, this);
  const WarrantSnapshotExData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WarrantSnapshotExData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
    MergeFrom(*source);
  }
}

void WarrantSnapshotExData::MergeFrom(const WarrantSnapshotExData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_maturitytime();
      maturitytime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.maturitytime_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_endtradetime();
      endtradetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endtradetime_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_owner()->::Qot_Common::Security::MergeFrom(from.owner());
    }
    if (cached_has_bits & 0x00000008u) {
      conversionrate_ = from.conversionrate_;
    }
    if (cached_has_bits & 0x00000010u) {
      strikeprice_ = from.strikeprice_;
    }
    if (cached_has_bits & 0x00000020u) {
      recoveryprice_ = from.recoveryprice_;
    }
    if (cached_has_bits & 0x00000040u) {
      streetvolumn_ = from.streetvolumn_;
    }
    if (cached_has_bits & 0x00000080u) {
      issuevolumn_ = from.issuevolumn_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      streetrate_ = from.streetrate_;
    }
    if (cached_has_bits & 0x00000200u) {
      delta_ = from.delta_;
    }
    if (cached_has_bits & 0x00000400u) {
      impliedvolatility_ = from.impliedvolatility_;
    }
    if (cached_has_bits & 0x00000800u) {
      premium_ = from.premium_;
    }
    if (cached_has_bits & 0x00001000u) {
      warranttype_ = from.warranttype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WarrantSnapshotExData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarrantSnapshotExData::CopyFrom(const WarrantSnapshotExData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetSecuritySnapshot.WarrantSnapshotExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarrantSnapshotExData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001fff) != 0x00001fff) return false;
  if (has_owner()) {
    if (!this->owner_->IsInitialized()) return false;
  }
  return true;
}

void WarrantSnapshotExData::Swap(WarrantSnapshotExData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WarrantSnapshotExData::InternalSwap(WarrantSnapshotExData* other) {
  using std::swap;
  maturitytime_.Swap(&other->maturitytime_);
  endtradetime_.Swap(&other->endtradetime_);
  swap(owner_, other->owner_);
  swap(conversionrate_, other->conversionrate_);
  swap(strikeprice_, other->strikeprice_);
  swap(recoveryprice_, other->recoveryprice_);
  swap(streetvolumn_, other->streetvolumn_);
  swap(issuevolumn_, other->issuevolumn_);
  swap(streetrate_, other->streetrate_);
  swap(delta_, other->delta_);
  swap(impliedvolatility_, other->impliedvolatility_);
  swap(premium_, other->premium_);
  swap(warranttype_, other->warranttype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WarrantSnapshotExData::GetMetadata() const {
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapshotBasicData::InitAsDefaultInstance() {
  ::Qot_GetSecuritySnapshot::_SnapshotBasicData_default_instance_._instance.get_mutable()->security_ = const_cast< ::Qot_Common::Security*>(
      ::Qot_Common::Security::internal_default_instance());
}
void SnapshotBasicData::clear_security() {
  if (security_ != NULL) security_->Clear();
  clear_has_security();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapshotBasicData::kSecurityFieldNumber;
const int SnapshotBasicData::kTypeFieldNumber;
const int SnapshotBasicData::kIsSuspendFieldNumber;
const int SnapshotBasicData::kListTimeFieldNumber;
const int SnapshotBasicData::kLotSizeFieldNumber;
const int SnapshotBasicData::kPriceSpreadFieldNumber;
const int SnapshotBasicData::kUpdateTimeFieldNumber;
const int SnapshotBasicData::kHighPriceFieldNumber;
const int SnapshotBasicData::kOpenPriceFieldNumber;
const int SnapshotBasicData::kLowPriceFieldNumber;
const int SnapshotBasicData::kLastClosePriceFieldNumber;
const int SnapshotBasicData::kCurPriceFieldNumber;
const int SnapshotBasicData::kVolumeFieldNumber;
const int SnapshotBasicData::kTurnoverFieldNumber;
const int SnapshotBasicData::kTurnoverRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapshotBasicData::SnapshotBasicData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsSnapshotBasicData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetSecuritySnapshot.SnapshotBasicData)
}
SnapshotBasicData::SnapshotBasicData(const SnapshotBasicData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  listtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_listtime()) {
    listtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listtime_);
  }
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_updatetime()) {
    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  if (from.has_security()) {
    security_ = new ::Qot_Common::Security(*from.security_);
  } else {
    security_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&lotsize_) -
    reinterpret_cast<char*>(&type_)) + sizeof(lotsize_));
  // @@protoc_insertion_point(copy_constructor:Qot_GetSecuritySnapshot.SnapshotBasicData)
}

void SnapshotBasicData::SharedCtor() {
  _cached_size_ = 0;
  listtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&security_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lotsize_) -
      reinterpret_cast<char*>(&security_)) + sizeof(lotsize_));
}

SnapshotBasicData::~SnapshotBasicData() {
  // @@protoc_insertion_point(destructor:Qot_GetSecuritySnapshot.SnapshotBasicData)
  SharedDtor();
}

void SnapshotBasicData::SharedDtor() {
  listtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete security_;
}

void SnapshotBasicData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnapshotBasicData::descriptor() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapshotBasicData& SnapshotBasicData::default_instance() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsSnapshotBasicData();
  return *internal_default_instance();
}

SnapshotBasicData* SnapshotBasicData::New(::google::protobuf::Arena* arena) const {
  SnapshotBasicData* n = new SnapshotBasicData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SnapshotBasicData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!listtime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*listtime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!updatetime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*updatetime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(security_ != NULL);
      security_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&openprice_) -
        reinterpret_cast<char*>(&type_)) + sizeof(openprice_));
  }
  if (cached_has_bits & 32512u) {
    ::memset(&lowprice_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lotsize_) -
        reinterpret_cast<char*>(&lowprice_)) + sizeof(lotsize_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SnapshotBasicData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_Common.Security security = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_security()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isSuspend = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_issuspend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuspend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string listTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->listtime().data(), static_cast<int>(this->listtime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetSecuritySnapshot.SnapshotBasicData.listTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lotSize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_lotsize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lotsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double priceSpread = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_pricespread();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricespread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string updateTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->updatetime().data(), static_cast<int>(this->updatetime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double highPrice = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_highprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double openPrice = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_openprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lowPrice = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_lowprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lastClosePrice = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_lastcloseprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastcloseprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double curPrice = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_curprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &curprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 volume = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_volume();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double turnover = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_turnover();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double turnoverRate = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {
          set_has_turnoverrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnoverrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetSecuritySnapshot.SnapshotBasicData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetSecuritySnapshot.SnapshotBasicData)
  return false;
#undef DO_
}

void SnapshotBasicData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security security = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->security_, output);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // required bool isSuspend = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->issuspend(), output);
  }

  // required string listTime = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listtime().data(), static_cast<int>(this->listtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.SnapshotBasicData.listTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->listtime(), output);
  }

  // required int32 lotSize = 5;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lotsize(), output);
  }

  // required double priceSpread = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->pricespread(), output);
  }

  // required string updateTime = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->updatetime(), output);
  }

  // required double highPrice = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->highprice(), output);
  }

  // required double openPrice = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->openprice(), output);
  }

  // required double lowPrice = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->lowprice(), output);
  }

  // required double lastClosePrice = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->lastcloseprice(), output);
  }

  // required double curPrice = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->curprice(), output);
  }

  // required int64 volume = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->volume(), output);
  }

  // required double turnover = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->turnover(), output);
  }

  // required double turnoverRate = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->turnoverrate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetSecuritySnapshot.SnapshotBasicData)
}

::google::protobuf::uint8* SnapshotBasicData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security security = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->security_, deterministic, target);
  }

  // required int32 type = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // required bool isSuspend = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->issuspend(), target);
  }

  // required string listTime = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listtime().data(), static_cast<int>(this->listtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.SnapshotBasicData.listTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->listtime(), target);
  }

  // required int32 lotSize = 5;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lotsize(), target);
  }

  // required double priceSpread = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->pricespread(), target);
  }

  // required string updateTime = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.SnapshotBasicData.updateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->updatetime(), target);
  }

  // required double highPrice = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->highprice(), target);
  }

  // required double openPrice = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->openprice(), target);
  }

  // required double lowPrice = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->lowprice(), target);
  }

  // required double lastClosePrice = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->lastcloseprice(), target);
  }

  // required double curPrice = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->curprice(), target);
  }

  // required int64 volume = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->volume(), target);
  }

  // required double turnover = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->turnover(), target);
  }

  // required double turnoverRate = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->turnoverrate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetSecuritySnapshot.SnapshotBasicData)
  return target;
}

size_t SnapshotBasicData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  size_t total_size = 0;

  if (has_listtime()) {
    // required string listTime = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listtime());
  }

  if (has_updatetime()) {
    // required string updateTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());
  }

  if (has_security()) {
    // required .Qot_Common.Security security = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_);
  }

  if (has_type()) {
    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_issuspend()) {
    // required bool isSuspend = 3;
    total_size += 1 + 1;
  }

  if (has_pricespread()) {
    // required double priceSpread = 6;
    total_size += 1 + 8;
  }

  if (has_highprice()) {
    // required double highPrice = 8;
    total_size += 1 + 8;
  }

  if (has_openprice()) {
    // required double openPrice = 9;
    total_size += 1 + 8;
  }

  if (has_lowprice()) {
    // required double lowPrice = 10;
    total_size += 1 + 8;
  }

  if (has_lastcloseprice()) {
    // required double lastClosePrice = 11;
    total_size += 1 + 8;
  }

  if (has_curprice()) {
    // required double curPrice = 12;
    total_size += 1 + 8;
  }

  if (has_volume()) {
    // required int64 volume = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());
  }

  if (has_turnover()) {
    // required double turnover = 14;
    total_size += 1 + 8;
  }

  if (has_turnoverrate()) {
    // required double turnoverRate = 15;
    total_size += 1 + 8;
  }

  if (has_lotsize()) {
    // required int32 lotSize = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lotsize());
  }

  return total_size;
}
size_t SnapshotBasicData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00007fff) ^ 0x00007fff) == 0) {  // All required fields are present.
    // required string listTime = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listtime());

    // required string updateTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());

    // required .Qot_Common.Security security = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_);

    // required int32 type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required bool isSuspend = 3;
    total_size += 1 + 1;

    // required double priceSpread = 6;
    total_size += 1 + 8;

    // required double highPrice = 8;
    total_size += 1 + 8;

    // required double openPrice = 9;
    total_size += 1 + 8;

    // required double lowPrice = 10;
    total_size += 1 + 8;

    // required double lastClosePrice = 11;
    total_size += 1 + 8;

    // required double curPrice = 12;
    total_size += 1 + 8;

    // required int64 volume = 13;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());

    // required double turnover = 14;
    total_size += 1 + 8;

    // required double turnoverRate = 15;
    total_size += 1 + 8;

    // required int32 lotSize = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lotsize());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnapshotBasicData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapshotBasicData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapshotBasicData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetSecuritySnapshot.SnapshotBasicData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetSecuritySnapshot.SnapshotBasicData)
    MergeFrom(*source);
  }
}

void SnapshotBasicData::MergeFrom(const SnapshotBasicData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_listtime();
      listtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listtime_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_updatetime();
      updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_security()->::Qot_Common::Security::MergeFrom(from.security());
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      issuspend_ = from.issuspend_;
    }
    if (cached_has_bits & 0x00000020u) {
      pricespread_ = from.pricespread_;
    }
    if (cached_has_bits & 0x00000040u) {
      highprice_ = from.highprice_;
    }
    if (cached_has_bits & 0x00000080u) {
      openprice_ = from.openprice_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      lowprice_ = from.lowprice_;
    }
    if (cached_has_bits & 0x00000200u) {
      lastcloseprice_ = from.lastcloseprice_;
    }
    if (cached_has_bits & 0x00000400u) {
      curprice_ = from.curprice_;
    }
    if (cached_has_bits & 0x00000800u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00001000u) {
      turnover_ = from.turnover_;
    }
    if (cached_has_bits & 0x00002000u) {
      turnoverrate_ = from.turnoverrate_;
    }
    if (cached_has_bits & 0x00004000u) {
      lotsize_ = from.lotsize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SnapshotBasicData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapshotBasicData::CopyFrom(const SnapshotBasicData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetSecuritySnapshot.SnapshotBasicData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapshotBasicData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00007fff) != 0x00007fff) return false;
  if (has_security()) {
    if (!this->security_->IsInitialized()) return false;
  }
  return true;
}

void SnapshotBasicData::Swap(SnapshotBasicData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapshotBasicData::InternalSwap(SnapshotBasicData* other) {
  using std::swap;
  listtime_.Swap(&other->listtime_);
  updatetime_.Swap(&other->updatetime_);
  swap(security_, other->security_);
  swap(type_, other->type_);
  swap(issuspend_, other->issuspend_);
  swap(pricespread_, other->pricespread_);
  swap(highprice_, other->highprice_);
  swap(openprice_, other->openprice_);
  swap(lowprice_, other->lowprice_);
  swap(lastcloseprice_, other->lastcloseprice_);
  swap(curprice_, other->curprice_);
  swap(volume_, other->volume_);
  swap(turnover_, other->turnover_);
  swap(turnoverrate_, other->turnoverrate_);
  swap(lotsize_, other->lotsize_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnapshotBasicData::GetMetadata() const {
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Snapshot::InitAsDefaultInstance() {
  ::Qot_GetSecuritySnapshot::_Snapshot_default_instance_._instance.get_mutable()->basic_ = const_cast< ::Qot_GetSecuritySnapshot::SnapshotBasicData*>(
      ::Qot_GetSecuritySnapshot::SnapshotBasicData::internal_default_instance());
  ::Qot_GetSecuritySnapshot::_Snapshot_default_instance_._instance.get_mutable()->equityexdata_ = const_cast< ::Qot_GetSecuritySnapshot::EquitySnapshotExData*>(
      ::Qot_GetSecuritySnapshot::EquitySnapshotExData::internal_default_instance());
  ::Qot_GetSecuritySnapshot::_Snapshot_default_instance_._instance.get_mutable()->warrantexdata_ = const_cast< ::Qot_GetSecuritySnapshot::WarrantSnapshotExData*>(
      ::Qot_GetSecuritySnapshot::WarrantSnapshotExData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Snapshot::kBasicFieldNumber;
const int Snapshot::kEquityExDataFieldNumber;
const int Snapshot::kWarrantExDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Snapshot::Snapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsSnapshot();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetSecuritySnapshot.Snapshot)
}
Snapshot::Snapshot(const Snapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::Qot_GetSecuritySnapshot::SnapshotBasicData(*from.basic_);
  } else {
    basic_ = NULL;
  }
  if (from.has_equityexdata()) {
    equityexdata_ = new ::Qot_GetSecuritySnapshot::EquitySnapshotExData(*from.equityexdata_);
  } else {
    equityexdata_ = NULL;
  }
  if (from.has_warrantexdata()) {
    warrantexdata_ = new ::Qot_GetSecuritySnapshot::WarrantSnapshotExData(*from.warrantexdata_);
  } else {
    warrantexdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Qot_GetSecuritySnapshot.Snapshot)
}

void Snapshot::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&warrantexdata_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(warrantexdata_));
}

Snapshot::~Snapshot() {
  // @@protoc_insertion_point(destructor:Qot_GetSecuritySnapshot.Snapshot)
  SharedDtor();
}

void Snapshot::SharedDtor() {
  if (this != internal_default_instance()) delete basic_;
  if (this != internal_default_instance()) delete equityexdata_;
  if (this != internal_default_instance()) delete warrantexdata_;
}

void Snapshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Snapshot::descriptor() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Snapshot& Snapshot::default_instance() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsSnapshot();
  return *internal_default_instance();
}

Snapshot* Snapshot::New(::google::protobuf::Arena* arena) const {
  Snapshot* n = new Snapshot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Snapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetSecuritySnapshot.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(basic_ != NULL);
      basic_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(equityexdata_ != NULL);
      equityexdata_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(warrantexdata_ != NULL);
      warrantexdata_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Snapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetSecuritySnapshot.Snapshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_GetSecuritySnapshot.SnapshotBasicData basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_GetSecuritySnapshot.EquitySnapshotExData equityExData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_equityexdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_GetSecuritySnapshot.WarrantSnapshotExData warrantExData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_warrantexdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetSecuritySnapshot.Snapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetSecuritySnapshot.Snapshot)
  return false;
#undef DO_
}

void Snapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetSecuritySnapshot.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_GetSecuritySnapshot.SnapshotBasicData basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_, output);
  }

  // optional .Qot_GetSecuritySnapshot.EquitySnapshotExData equityExData = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->equityexdata_, output);
  }

  // optional .Qot_GetSecuritySnapshot.WarrantSnapshotExData warrantExData = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->warrantexdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetSecuritySnapshot.Snapshot)
}

::google::protobuf::uint8* Snapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetSecuritySnapshot.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_GetSecuritySnapshot.SnapshotBasicData basic = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->basic_, deterministic, target);
  }

  // optional .Qot_GetSecuritySnapshot.EquitySnapshotExData equityExData = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->equityexdata_, deterministic, target);
  }

  // optional .Qot_GetSecuritySnapshot.WarrantSnapshotExData warrantExData = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->warrantexdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetSecuritySnapshot.Snapshot)
  return target;
}

size_t Snapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetSecuritySnapshot.Snapshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Qot_GetSecuritySnapshot.SnapshotBasicData basic = 1;
  if (has_basic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->basic_);
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional .Qot_GetSecuritySnapshot.EquitySnapshotExData equityExData = 2;
    if (has_equityexdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->equityexdata_);
    }

    // optional .Qot_GetSecuritySnapshot.WarrantSnapshotExData warrantExData = 3;
    if (has_warrantexdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->warrantexdata_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Snapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetSecuritySnapshot.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const Snapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Snapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetSecuritySnapshot.Snapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetSecuritySnapshot.Snapshot)
    MergeFrom(*source);
  }
}

void Snapshot::MergeFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetSecuritySnapshot.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::Qot_GetSecuritySnapshot::SnapshotBasicData::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_equityexdata()->::Qot_GetSecuritySnapshot::EquitySnapshotExData::MergeFrom(from.equityexdata());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_warrantexdata()->::Qot_GetSecuritySnapshot::WarrantSnapshotExData::MergeFrom(from.warrantexdata());
    }
  }
}

void Snapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetSecuritySnapshot.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Snapshot::CopyFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetSecuritySnapshot.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Snapshot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_basic()) {
    if (!this->basic_->IsInitialized()) return false;
  }
  if (has_equityexdata()) {
    if (!this->equityexdata_->IsInitialized()) return false;
  }
  if (has_warrantexdata()) {
    if (!this->warrantexdata_->IsInitialized()) return false;
  }
  return true;
}

void Snapshot::Swap(Snapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Snapshot::InternalSwap(Snapshot* other) {
  using std::swap;
  swap(basic_, other->basic_);
  swap(equityexdata_, other->equityexdata_);
  swap(warrantexdata_, other->warrantexdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Snapshot::GetMetadata() const {
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2C::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2C::kSnapshotListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2C::S2C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsS2C();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetSecuritySnapshot.S2C)
}
S2C::S2C(const S2C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      snapshotlist_(from.snapshotlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Qot_GetSecuritySnapshot.S2C)
}

void S2C::SharedCtor() {
  _cached_size_ = 0;
}

S2C::~S2C() {
  // @@protoc_insertion_point(destructor:Qot_GetSecuritySnapshot.S2C)
  SharedDtor();
}

void S2C::SharedDtor() {
}

void S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* S2C::descriptor() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2C& S2C::default_instance() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsS2C();
  return *internal_default_instance();
}

S2C* S2C::New(::google::protobuf::Arena* arena) const {
  S2C* n = new S2C;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void S2C::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetSecuritySnapshot.S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  snapshotlist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetSecuritySnapshot.S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Qot_GetSecuritySnapshot.Snapshot snapshotList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_snapshotlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetSecuritySnapshot.S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetSecuritySnapshot.S2C)
  return false;
#undef DO_
}

void S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetSecuritySnapshot.S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Qot_GetSecuritySnapshot.Snapshot snapshotList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snapshotlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->snapshotlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetSecuritySnapshot.S2C)
}

::google::protobuf::uint8* S2C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetSecuritySnapshot.S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Qot_GetSecuritySnapshot.Snapshot snapshotList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->snapshotlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->snapshotlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetSecuritySnapshot.S2C)
  return target;
}

size_t S2C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetSecuritySnapshot.S2C)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .Qot_GetSecuritySnapshot.Snapshot snapshotList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->snapshotlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->snapshotlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void S2C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetSecuritySnapshot.S2C)
  GOOGLE_DCHECK_NE(&from, this);
  const S2C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetSecuritySnapshot.S2C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetSecuritySnapshot.S2C)
    MergeFrom(*source);
  }
}

void S2C::MergeFrom(const S2C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetSecuritySnapshot.S2C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  snapshotlist_.MergeFrom(from.snapshotlist_);
}

void S2C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetSecuritySnapshot.S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2C::CopyFrom(const S2C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetSecuritySnapshot.S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2C::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->snapshotlist())) return false;
  return true;
}

void S2C::Swap(S2C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2C::InternalSwap(S2C* other) {
  using std::swap;
  snapshotlist_.InternalSwap(&other->snapshotlist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata S2C::GetMetadata() const {
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::Qot_GetSecuritySnapshot::_Request_default_instance_._instance.get_mutable()->c2s_ = const_cast< ::Qot_GetSecuritySnapshot::C2S*>(
      ::Qot_GetSecuritySnapshot::C2S::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kC2SFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetSecuritySnapshot.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_c2s()) {
    c2s_ = new ::Qot_GetSecuritySnapshot::C2S(*from.c2s_);
  } else {
    c2s_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Qot_GetSecuritySnapshot.Request)
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  c2s_ = NULL;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:Qot_GetSecuritySnapshot.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != internal_default_instance()) delete c2s_;
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsRequest();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetSecuritySnapshot.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(c2s_ != NULL);
    c2s_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetSecuritySnapshot.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_GetSecuritySnapshot.C2S c2s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_c2s()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetSecuritySnapshot.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetSecuritySnapshot.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetSecuritySnapshot.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_GetSecuritySnapshot.C2S c2s = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->c2s_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetSecuritySnapshot.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetSecuritySnapshot.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_GetSecuritySnapshot.C2S c2s = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->c2s_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetSecuritySnapshot.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetSecuritySnapshot.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Qot_GetSecuritySnapshot.C2S c2s = 1;
  if (has_c2s()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->c2s_);
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetSecuritySnapshot.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetSecuritySnapshot.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetSecuritySnapshot.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetSecuritySnapshot.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_c2s()) {
    mutable_c2s()->::Qot_GetSecuritySnapshot::C2S::MergeFrom(from.c2s());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetSecuritySnapshot.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetSecuritySnapshot.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_c2s()) {
    if (!this->c2s_->IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(c2s_, other->c2s_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::Qot_GetSecuritySnapshot::_Response_default_instance_._instance.get_mutable()->s2c_ = const_cast< ::Qot_GetSecuritySnapshot::S2C*>(
      ::Qot_GetSecuritySnapshot::S2C::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kRetTypeFieldNumber;
const int Response::kRetMsgFieldNumber;
const int Response::kErrCodeFieldNumber;
const int Response::kS2CFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_GetSecuritySnapshot.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_s2c()) {
    s2c_ = new ::Qot_GetSecuritySnapshot::S2C(*from.s2c_);
  } else {
    s2c_ = NULL;
  }
  ::memcpy(&errcode_, &from.errcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&rettype_) -
    reinterpret_cast<char*>(&errcode_)) + sizeof(rettype_));
  // @@protoc_insertion_point(copy_constructor:Qot_GetSecuritySnapshot.Response)
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&s2c_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&errcode_) -
      reinterpret_cast<char*>(&s2c_)) + sizeof(errcode_));
  rettype_ = -400;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Qot_GetSecuritySnapshot.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete s2c_;
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::InitDefaultsResponse();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_GetSecuritySnapshot.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(s2c_ != NULL);
      s2c_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    errcode_ = 0;
    rettype_ = -400;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_GetSecuritySnapshot.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 retType = 1 [default = -400];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_rettype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rettype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string retMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), static_cast<int>(this->retmsg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_GetSecuritySnapshot.Response.retMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 errCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_GetSecuritySnapshot.S2C s2c = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_s2c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_GetSecuritySnapshot.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_GetSecuritySnapshot.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_GetSecuritySnapshot.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 retType = 1 [default = -400];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rettype(), output);
  }

  // optional string retMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.Response.retMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retmsg(), output);
  }

  // optional int32 errCode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->errcode(), output);
  }

  // optional .Qot_GetSecuritySnapshot.S2C s2c = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->s2c_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_GetSecuritySnapshot.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_GetSecuritySnapshot.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 retType = 1 [default = -400];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rettype(), target);
  }

  // optional string retMsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_GetSecuritySnapshot.Response.retMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retmsg(), target);
  }

  // optional int32 errCode = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->errcode(), target);
  }

  // optional .Qot_GetSecuritySnapshot.S2C s2c = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->s2c_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_GetSecuritySnapshot.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_GetSecuritySnapshot.Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 retType = 1 [default = -400];
  if (has_rettype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rettype());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string retMsg = 2;
    if (has_retmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

    // optional .Qot_GetSecuritySnapshot.S2C s2c = 4;
    if (has_s2c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->s2c_);
    }

    // optional int32 errCode = 3;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errcode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_GetSecuritySnapshot.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_GetSecuritySnapshot.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_GetSecuritySnapshot.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_GetSecuritySnapshot.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_s2c()->::Qot_GetSecuritySnapshot::S2C::MergeFrom(from.s2c());
    }
    if (cached_has_bits & 0x00000004u) {
      errcode_ = from.errcode_;
    }
    if (cached_has_bits & 0x00000008u) {
      rettype_ = from.rettype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_GetSecuritySnapshot.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_GetSecuritySnapshot.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_s2c()) {
    if (!this->s2c_->IsInitialized()) return false;
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  retmsg_.Swap(&other->retmsg_);
  swap(s2c_, other->s2c_);
  swap(errcode_, other->errcode_);
  swap(rettype_, other->rettype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_Qot_5fGetSecuritySnapshot_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fGetSecuritySnapshot_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Qot_GetSecuritySnapshot

// @@protoc_insertion_point(global_scope)
