// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_GetRehab.proto

#ifndef PROTOBUF_Qot_5fGetRehab_2eproto__INCLUDED
#define PROTOBUF_Qot_5fGetRehab_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
#include "Qot_Common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_Qot_5fGetRehab_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsC2SImpl();
void InitDefaultsC2S();
void InitDefaultsRehabImpl();
void InitDefaultsRehab();
void InitDefaultsSecurityRehabImpl();
void InitDefaultsSecurityRehab();
void InitDefaultsS2CImpl();
void InitDefaultsS2C();
void InitDefaultsRequestImpl();
void InitDefaultsRequest();
void InitDefaultsResponseImpl();
void InitDefaultsResponse();
inline void InitDefaults() {
  InitDefaultsC2S();
  InitDefaultsRehab();
  InitDefaultsSecurityRehab();
  InitDefaultsS2C();
  InitDefaultsRequest();
  InitDefaultsResponse();
}
}  // namespace protobuf_Qot_5fGetRehab_2eproto
namespace Qot_GetRehab {
class C2S;
class C2SDefaultTypeInternal;
extern C2SDefaultTypeInternal _C2S_default_instance_;
class Rehab;
class RehabDefaultTypeInternal;
extern RehabDefaultTypeInternal _Rehab_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class S2C;
class S2CDefaultTypeInternal;
extern S2CDefaultTypeInternal _S2C_default_instance_;
class SecurityRehab;
class SecurityRehabDefaultTypeInternal;
extern SecurityRehabDefaultTypeInternal _SecurityRehab_default_instance_;
}  // namespace Qot_GetRehab
namespace Qot_GetRehab {

enum CompanyAct {
  CompanyAct_None = 0,
  CompanyAct_Split = 1,
  CompanyAct_Join = 2,
  CompanyAct_Bonus = 4,
  CompanyAct_Transfer = 8,
  CompanyAct_Allot = 16,
  CompanyAct_Add = 32,
  CompanyAct_Dividend = 64,
  CompanyAct_SPDividend = 128
};
bool CompanyAct_IsValid(int value);
const CompanyAct CompanyAct_MIN = CompanyAct_None;
const CompanyAct CompanyAct_MAX = CompanyAct_SPDividend;
const int CompanyAct_ARRAYSIZE = CompanyAct_MAX + 1;

const ::google::protobuf::EnumDescriptor* CompanyAct_descriptor();
inline const ::std::string& CompanyAct_Name(CompanyAct value) {
  return ::google::protobuf::internal::NameOfEnum(
    CompanyAct_descriptor(), value);
}
inline bool CompanyAct_Parse(
    const ::std::string& name, CompanyAct* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompanyAct>(
    CompanyAct_descriptor(), name, value);
}
// ===================================================================

class C2S : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetRehab.C2S) */ {
 public:
  C2S();
  virtual ~C2S();

  C2S(const C2S& from);

  inline C2S& operator=(const C2S& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  C2S(C2S&& from) noexcept
    : C2S() {
    *this = ::std::move(from);
  }

  inline C2S& operator=(C2S&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const C2S* internal_default_instance() {
    return reinterpret_cast<const C2S*>(
               &_C2S_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(C2S* other);
  friend void swap(C2S& a, C2S& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline C2S* New() const PROTOBUF_FINAL { return New(NULL); }

  C2S* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const C2S& from);
  void MergeFrom(const C2S& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(C2S* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_Common.Security securityList = 1;
  int securitylist_size() const;
  void clear_securitylist();
  static const int kSecurityListFieldNumber = 1;
  const ::Qot_Common::Security& securitylist(int index) const;
  ::Qot_Common::Security* mutable_securitylist(int index);
  ::Qot_Common::Security* add_securitylist();
  ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >*
      mutable_securitylist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >&
      securitylist() const;

  // @@protoc_insertion_point(class_scope:Qot_GetRehab.C2S)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security > securitylist_;
  friend struct ::protobuf_Qot_5fGetRehab_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetRehab_2eproto::InitDefaultsC2SImpl();
};
// -------------------------------------------------------------------

class Rehab : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetRehab.Rehab) */ {
 public:
  Rehab();
  virtual ~Rehab();

  Rehab(const Rehab& from);

  inline Rehab& operator=(const Rehab& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Rehab(Rehab&& from) noexcept
    : Rehab() {
    *this = ::std::move(from);
  }

  inline Rehab& operator=(Rehab&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Rehab& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Rehab* internal_default_instance() {
    return reinterpret_cast<const Rehab*>(
               &_Rehab_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Rehab* other);
  friend void swap(Rehab& a, Rehab& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Rehab* New() const PROTOBUF_FINAL { return New(NULL); }

  Rehab* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Rehab& from);
  void MergeFrom(const Rehab& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Rehab* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  const ::std::string& time() const;
  void set_time(const ::std::string& value);
  #if LANG_CXX11
  void set_time(::std::string&& value);
  #endif
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  ::std::string* mutable_time();
  ::std::string* release_time();
  void set_allocated_time(::std::string* time);

  // required int64 companyActFlag = 2;
  bool has_companyactflag() const;
  void clear_companyactflag();
  static const int kCompanyActFlagFieldNumber = 2;
  ::google::protobuf::int64 companyactflag() const;
  void set_companyactflag(::google::protobuf::int64 value);

  // required double fwdFactorA = 3;
  bool has_fwdfactora() const;
  void clear_fwdfactora();
  static const int kFwdFactorAFieldNumber = 3;
  double fwdfactora() const;
  void set_fwdfactora(double value);

  // required double fwdFactorB = 4;
  bool has_fwdfactorb() const;
  void clear_fwdfactorb();
  static const int kFwdFactorBFieldNumber = 4;
  double fwdfactorb() const;
  void set_fwdfactorb(double value);

  // required double bwdFactorA = 5;
  bool has_bwdfactora() const;
  void clear_bwdfactora();
  static const int kBwdFactorAFieldNumber = 5;
  double bwdfactora() const;
  void set_bwdfactora(double value);

  // required double bwdFactorB = 6;
  bool has_bwdfactorb() const;
  void clear_bwdfactorb();
  static const int kBwdFactorBFieldNumber = 6;
  double bwdfactorb() const;
  void set_bwdfactorb(double value);

  // optional int32 splitBase = 7;
  bool has_splitbase() const;
  void clear_splitbase();
  static const int kSplitBaseFieldNumber = 7;
  ::google::protobuf::int32 splitbase() const;
  void set_splitbase(::google::protobuf::int32 value);

  // optional int32 splitErt = 8;
  bool has_splitert() const;
  void clear_splitert();
  static const int kSplitErtFieldNumber = 8;
  ::google::protobuf::int32 splitert() const;
  void set_splitert(::google::protobuf::int32 value);

  // optional int32 joinBase = 9;
  bool has_joinbase() const;
  void clear_joinbase();
  static const int kJoinBaseFieldNumber = 9;
  ::google::protobuf::int32 joinbase() const;
  void set_joinbase(::google::protobuf::int32 value);

  // optional int32 joinErt = 10;
  bool has_joinert() const;
  void clear_joinert();
  static const int kJoinErtFieldNumber = 10;
  ::google::protobuf::int32 joinert() const;
  void set_joinert(::google::protobuf::int32 value);

  // optional int32 bonusBase = 11;
  bool has_bonusbase() const;
  void clear_bonusbase();
  static const int kBonusBaseFieldNumber = 11;
  ::google::protobuf::int32 bonusbase() const;
  void set_bonusbase(::google::protobuf::int32 value);

  // optional int32 bonusErt = 12;
  bool has_bonusert() const;
  void clear_bonusert();
  static const int kBonusErtFieldNumber = 12;
  ::google::protobuf::int32 bonusert() const;
  void set_bonusert(::google::protobuf::int32 value);

  // optional int32 transferBase = 13;
  bool has_transferbase() const;
  void clear_transferbase();
  static const int kTransferBaseFieldNumber = 13;
  ::google::protobuf::int32 transferbase() const;
  void set_transferbase(::google::protobuf::int32 value);

  // optional int32 transferErt = 14;
  bool has_transferert() const;
  void clear_transferert();
  static const int kTransferErtFieldNumber = 14;
  ::google::protobuf::int32 transferert() const;
  void set_transferert(::google::protobuf::int32 value);

  // optional int32 allotBase = 15;
  bool has_allotbase() const;
  void clear_allotbase();
  static const int kAllotBaseFieldNumber = 15;
  ::google::protobuf::int32 allotbase() const;
  void set_allotbase(::google::protobuf::int32 value);

  // optional int32 allotErt = 16;
  bool has_allotert() const;
  void clear_allotert();
  static const int kAllotErtFieldNumber = 16;
  ::google::protobuf::int32 allotert() const;
  void set_allotert(::google::protobuf::int32 value);

  // optional double allotPrice = 17;
  bool has_allotprice() const;
  void clear_allotprice();
  static const int kAllotPriceFieldNumber = 17;
  double allotprice() const;
  void set_allotprice(double value);

  // optional int32 addBase = 18;
  bool has_addbase() const;
  void clear_addbase();
  static const int kAddBaseFieldNumber = 18;
  ::google::protobuf::int32 addbase() const;
  void set_addbase(::google::protobuf::int32 value);

  // optional int32 addErt = 19;
  bool has_addert() const;
  void clear_addert();
  static const int kAddErtFieldNumber = 19;
  ::google::protobuf::int32 addert() const;
  void set_addert(::google::protobuf::int32 value);

  // optional double addPrice = 20;
  bool has_addprice() const;
  void clear_addprice();
  static const int kAddPriceFieldNumber = 20;
  double addprice() const;
  void set_addprice(double value);

  // optional double dividend = 21;
  bool has_dividend() const;
  void clear_dividend();
  static const int kDividendFieldNumber = 21;
  double dividend() const;
  void set_dividend(double value);

  // optional double spDividend = 22;
  bool has_spdividend() const;
  void clear_spdividend();
  static const int kSpDividendFieldNumber = 22;
  double spdividend() const;
  void set_spdividend(double value);

  // optional double timestamp = 23;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 23;
  double timestamp() const;
  void set_timestamp(double value);

  // @@protoc_insertion_point(class_scope:Qot_GetRehab.Rehab)
 private:
  void set_has_time();
  void clear_has_time();
  void set_has_companyactflag();
  void clear_has_companyactflag();
  void set_has_fwdfactora();
  void clear_has_fwdfactora();
  void set_has_fwdfactorb();
  void clear_has_fwdfactorb();
  void set_has_bwdfactora();
  void clear_has_bwdfactora();
  void set_has_bwdfactorb();
  void clear_has_bwdfactorb();
  void set_has_splitbase();
  void clear_has_splitbase();
  void set_has_splitert();
  void clear_has_splitert();
  void set_has_joinbase();
  void clear_has_joinbase();
  void set_has_joinert();
  void clear_has_joinert();
  void set_has_bonusbase();
  void clear_has_bonusbase();
  void set_has_bonusert();
  void clear_has_bonusert();
  void set_has_transferbase();
  void clear_has_transferbase();
  void set_has_transferert();
  void clear_has_transferert();
  void set_has_allotbase();
  void clear_has_allotbase();
  void set_has_allotert();
  void clear_has_allotert();
  void set_has_allotprice();
  void clear_has_allotprice();
  void set_has_addbase();
  void clear_has_addbase();
  void set_has_addert();
  void clear_has_addert();
  void set_has_addprice();
  void clear_has_addprice();
  void set_has_dividend();
  void clear_has_dividend();
  void set_has_spdividend();
  void clear_has_spdividend();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr time_;
  ::google::protobuf::int64 companyactflag_;
  double fwdfactora_;
  double fwdfactorb_;
  double bwdfactora_;
  double bwdfactorb_;
  ::google::protobuf::int32 splitbase_;
  ::google::protobuf::int32 splitert_;
  ::google::protobuf::int32 joinbase_;
  ::google::protobuf::int32 joinert_;
  ::google::protobuf::int32 bonusbase_;
  ::google::protobuf::int32 bonusert_;
  ::google::protobuf::int32 transferbase_;
  ::google::protobuf::int32 transferert_;
  ::google::protobuf::int32 allotbase_;
  ::google::protobuf::int32 allotert_;
  double allotprice_;
  ::google::protobuf::int32 addbase_;
  ::google::protobuf::int32 addert_;
  double addprice_;
  double dividend_;
  double spdividend_;
  double timestamp_;
  friend struct ::protobuf_Qot_5fGetRehab_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetRehab_2eproto::InitDefaultsRehabImpl();
};
// -------------------------------------------------------------------

class SecurityRehab : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetRehab.SecurityRehab) */ {
 public:
  SecurityRehab();
  virtual ~SecurityRehab();

  SecurityRehab(const SecurityRehab& from);

  inline SecurityRehab& operator=(const SecurityRehab& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SecurityRehab(SecurityRehab&& from) noexcept
    : SecurityRehab() {
    *this = ::std::move(from);
  }

  inline SecurityRehab& operator=(SecurityRehab&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SecurityRehab& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SecurityRehab* internal_default_instance() {
    return reinterpret_cast<const SecurityRehab*>(
               &_SecurityRehab_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SecurityRehab* other);
  friend void swap(SecurityRehab& a, SecurityRehab& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SecurityRehab* New() const PROTOBUF_FINAL { return New(NULL); }

  SecurityRehab* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SecurityRehab& from);
  void MergeFrom(const SecurityRehab& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SecurityRehab* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_GetRehab.Rehab rehabList = 2;
  int rehablist_size() const;
  void clear_rehablist();
  static const int kRehabListFieldNumber = 2;
  const ::Qot_GetRehab::Rehab& rehablist(int index) const;
  ::Qot_GetRehab::Rehab* mutable_rehablist(int index);
  ::Qot_GetRehab::Rehab* add_rehablist();
  ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::Rehab >*
      mutable_rehablist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::Rehab >&
      rehablist() const;

  // required .Qot_Common.Security security = 1;
  bool has_security() const;
  void clear_security();
  static const int kSecurityFieldNumber = 1;
  const ::Qot_Common::Security& security() const;
  ::Qot_Common::Security* release_security();
  ::Qot_Common::Security* mutable_security();
  void set_allocated_security(::Qot_Common::Security* security);

  // @@protoc_insertion_point(class_scope:Qot_GetRehab.SecurityRehab)
 private:
  void set_has_security();
  void clear_has_security();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::Rehab > rehablist_;
  ::Qot_Common::Security* security_;
  friend struct ::protobuf_Qot_5fGetRehab_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetRehab_2eproto::InitDefaultsSecurityRehabImpl();
};
// -------------------------------------------------------------------

class S2C : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetRehab.S2C) */ {
 public:
  S2C();
  virtual ~S2C();

  S2C(const S2C& from);

  inline S2C& operator=(const S2C& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2C(S2C&& from) noexcept
    : S2C() {
    *this = ::std::move(from);
  }

  inline S2C& operator=(S2C&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2C* internal_default_instance() {
    return reinterpret_cast<const S2C*>(
               &_S2C_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(S2C* other);
  friend void swap(S2C& a, S2C& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2C* New() const PROTOBUF_FINAL { return New(NULL); }

  S2C* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const S2C& from);
  void MergeFrom(const S2C& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(S2C* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Qot_GetRehab.SecurityRehab securityRehabList = 1;
  int securityrehablist_size() const;
  void clear_securityrehablist();
  static const int kSecurityRehabListFieldNumber = 1;
  const ::Qot_GetRehab::SecurityRehab& securityrehablist(int index) const;
  ::Qot_GetRehab::SecurityRehab* mutable_securityrehablist(int index);
  ::Qot_GetRehab::SecurityRehab* add_securityrehablist();
  ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::SecurityRehab >*
      mutable_securityrehablist();
  const ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::SecurityRehab >&
      securityrehablist() const;

  // @@protoc_insertion_point(class_scope:Qot_GetRehab.S2C)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::SecurityRehab > securityrehablist_;
  friend struct ::protobuf_Qot_5fGetRehab_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetRehab_2eproto::InitDefaultsS2CImpl();
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetRehab.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Qot_GetRehab.C2S c2s = 1;
  bool has_c2s() const;
  void clear_c2s();
  static const int kC2SFieldNumber = 1;
  const ::Qot_GetRehab::C2S& c2s() const;
  ::Qot_GetRehab::C2S* release_c2s();
  ::Qot_GetRehab::C2S* mutable_c2s();
  void set_allocated_c2s(::Qot_GetRehab::C2S* c2s);

  // @@protoc_insertion_point(class_scope:Qot_GetRehab.Request)
 private:
  void set_has_c2s();
  void clear_has_c2s();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Qot_GetRehab::C2S* c2s_;
  friend struct ::protobuf_Qot_5fGetRehab_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetRehab_2eproto::InitDefaultsRequestImpl();
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Qot_GetRehab.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string retMsg = 2;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 2;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // optional .Qot_GetRehab.S2C s2c = 4;
  bool has_s2c() const;
  void clear_s2c();
  static const int kS2CFieldNumber = 4;
  const ::Qot_GetRehab::S2C& s2c() const;
  ::Qot_GetRehab::S2C* release_s2c();
  ::Qot_GetRehab::S2C* mutable_s2c();
  void set_allocated_s2c(::Qot_GetRehab::S2C* s2c);

  // optional int32 errCode = 3;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 3;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // required int32 retType = 1 [default = -400];
  bool has_rettype() const;
  void clear_rettype();
  static const int kRetTypeFieldNumber = 1;
  ::google::protobuf::int32 rettype() const;
  void set_rettype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Qot_GetRehab.Response)
 private:
  void set_has_rettype();
  void clear_has_rettype();
  void set_has_retmsg();
  void clear_has_retmsg();
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_s2c();
  void clear_has_s2c();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::Qot_GetRehab::S2C* s2c_;
  ::google::protobuf::int32 errcode_;
  ::google::protobuf::int32 rettype_;
  friend struct ::protobuf_Qot_5fGetRehab_2eproto::TableStruct;
  friend void ::protobuf_Qot_5fGetRehab_2eproto::InitDefaultsResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// C2S

// repeated .Qot_Common.Security securityList = 1;
inline int C2S::securitylist_size() const {
  return securitylist_.size();
}
inline const ::Qot_Common::Security& C2S::securitylist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.C2S.securityList)
  return securitylist_.Get(index);
}
inline ::Qot_Common::Security* C2S::mutable_securitylist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_GetRehab.C2S.securityList)
  return securitylist_.Mutable(index);
}
inline ::Qot_Common::Security* C2S::add_securitylist() {
  // @@protoc_insertion_point(field_add:Qot_GetRehab.C2S.securityList)
  return securitylist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >*
C2S::mutable_securitylist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_GetRehab.C2S.securityList)
  return &securitylist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_Common::Security >&
C2S::securitylist() const {
  // @@protoc_insertion_point(field_list:Qot_GetRehab.C2S.securityList)
  return securitylist_;
}

// -------------------------------------------------------------------

// Rehab

// required string time = 1;
inline bool Rehab::has_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Rehab::set_has_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Rehab::clear_has_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Rehab::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_time();
}
inline const ::std::string& Rehab::time() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.time)
  return time_.GetNoArena();
}
inline void Rehab::set_time(const ::std::string& value) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.time)
}
#if LANG_CXX11
inline void Rehab::set_time(::std::string&& value) {
  set_has_time();
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetRehab.Rehab.time)
}
#endif
inline void Rehab::set_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetRehab.Rehab.time)
}
inline void Rehab::set_time(const char* value, size_t size) {
  set_has_time();
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetRehab.Rehab.time)
}
inline ::std::string* Rehab::mutable_time() {
  set_has_time();
  // @@protoc_insertion_point(field_mutable:Qot_GetRehab.Rehab.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Rehab::release_time() {
  // @@protoc_insertion_point(field_release:Qot_GetRehab.Rehab.time)
  clear_has_time();
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Rehab::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    set_has_time();
  } else {
    clear_has_time();
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetRehab.Rehab.time)
}

// required int64 companyActFlag = 2;
inline bool Rehab::has_companyactflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Rehab::set_has_companyactflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Rehab::clear_has_companyactflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Rehab::clear_companyactflag() {
  companyactflag_ = GOOGLE_LONGLONG(0);
  clear_has_companyactflag();
}
inline ::google::protobuf::int64 Rehab::companyactflag() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.companyActFlag)
  return companyactflag_;
}
inline void Rehab::set_companyactflag(::google::protobuf::int64 value) {
  set_has_companyactflag();
  companyactflag_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.companyActFlag)
}

// required double fwdFactorA = 3;
inline bool Rehab::has_fwdfactora() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Rehab::set_has_fwdfactora() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Rehab::clear_has_fwdfactora() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Rehab::clear_fwdfactora() {
  fwdfactora_ = 0;
  clear_has_fwdfactora();
}
inline double Rehab::fwdfactora() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.fwdFactorA)
  return fwdfactora_;
}
inline void Rehab::set_fwdfactora(double value) {
  set_has_fwdfactora();
  fwdfactora_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.fwdFactorA)
}

// required double fwdFactorB = 4;
inline bool Rehab::has_fwdfactorb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Rehab::set_has_fwdfactorb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Rehab::clear_has_fwdfactorb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Rehab::clear_fwdfactorb() {
  fwdfactorb_ = 0;
  clear_has_fwdfactorb();
}
inline double Rehab::fwdfactorb() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.fwdFactorB)
  return fwdfactorb_;
}
inline void Rehab::set_fwdfactorb(double value) {
  set_has_fwdfactorb();
  fwdfactorb_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.fwdFactorB)
}

// required double bwdFactorA = 5;
inline bool Rehab::has_bwdfactora() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Rehab::set_has_bwdfactora() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Rehab::clear_has_bwdfactora() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Rehab::clear_bwdfactora() {
  bwdfactora_ = 0;
  clear_has_bwdfactora();
}
inline double Rehab::bwdfactora() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.bwdFactorA)
  return bwdfactora_;
}
inline void Rehab::set_bwdfactora(double value) {
  set_has_bwdfactora();
  bwdfactora_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.bwdFactorA)
}

// required double bwdFactorB = 6;
inline bool Rehab::has_bwdfactorb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Rehab::set_has_bwdfactorb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Rehab::clear_has_bwdfactorb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Rehab::clear_bwdfactorb() {
  bwdfactorb_ = 0;
  clear_has_bwdfactorb();
}
inline double Rehab::bwdfactorb() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.bwdFactorB)
  return bwdfactorb_;
}
inline void Rehab::set_bwdfactorb(double value) {
  set_has_bwdfactorb();
  bwdfactorb_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.bwdFactorB)
}

// optional int32 splitBase = 7;
inline bool Rehab::has_splitbase() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Rehab::set_has_splitbase() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Rehab::clear_has_splitbase() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Rehab::clear_splitbase() {
  splitbase_ = 0;
  clear_has_splitbase();
}
inline ::google::protobuf::int32 Rehab::splitbase() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.splitBase)
  return splitbase_;
}
inline void Rehab::set_splitbase(::google::protobuf::int32 value) {
  set_has_splitbase();
  splitbase_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.splitBase)
}

// optional int32 splitErt = 8;
inline bool Rehab::has_splitert() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Rehab::set_has_splitert() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Rehab::clear_has_splitert() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Rehab::clear_splitert() {
  splitert_ = 0;
  clear_has_splitert();
}
inline ::google::protobuf::int32 Rehab::splitert() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.splitErt)
  return splitert_;
}
inline void Rehab::set_splitert(::google::protobuf::int32 value) {
  set_has_splitert();
  splitert_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.splitErt)
}

// optional int32 joinBase = 9;
inline bool Rehab::has_joinbase() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Rehab::set_has_joinbase() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Rehab::clear_has_joinbase() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Rehab::clear_joinbase() {
  joinbase_ = 0;
  clear_has_joinbase();
}
inline ::google::protobuf::int32 Rehab::joinbase() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.joinBase)
  return joinbase_;
}
inline void Rehab::set_joinbase(::google::protobuf::int32 value) {
  set_has_joinbase();
  joinbase_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.joinBase)
}

// optional int32 joinErt = 10;
inline bool Rehab::has_joinert() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Rehab::set_has_joinert() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Rehab::clear_has_joinert() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Rehab::clear_joinert() {
  joinert_ = 0;
  clear_has_joinert();
}
inline ::google::protobuf::int32 Rehab::joinert() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.joinErt)
  return joinert_;
}
inline void Rehab::set_joinert(::google::protobuf::int32 value) {
  set_has_joinert();
  joinert_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.joinErt)
}

// optional int32 bonusBase = 11;
inline bool Rehab::has_bonusbase() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Rehab::set_has_bonusbase() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Rehab::clear_has_bonusbase() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Rehab::clear_bonusbase() {
  bonusbase_ = 0;
  clear_has_bonusbase();
}
inline ::google::protobuf::int32 Rehab::bonusbase() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.bonusBase)
  return bonusbase_;
}
inline void Rehab::set_bonusbase(::google::protobuf::int32 value) {
  set_has_bonusbase();
  bonusbase_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.bonusBase)
}

// optional int32 bonusErt = 12;
inline bool Rehab::has_bonusert() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Rehab::set_has_bonusert() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Rehab::clear_has_bonusert() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Rehab::clear_bonusert() {
  bonusert_ = 0;
  clear_has_bonusert();
}
inline ::google::protobuf::int32 Rehab::bonusert() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.bonusErt)
  return bonusert_;
}
inline void Rehab::set_bonusert(::google::protobuf::int32 value) {
  set_has_bonusert();
  bonusert_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.bonusErt)
}

// optional int32 transferBase = 13;
inline bool Rehab::has_transferbase() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Rehab::set_has_transferbase() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Rehab::clear_has_transferbase() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Rehab::clear_transferbase() {
  transferbase_ = 0;
  clear_has_transferbase();
}
inline ::google::protobuf::int32 Rehab::transferbase() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.transferBase)
  return transferbase_;
}
inline void Rehab::set_transferbase(::google::protobuf::int32 value) {
  set_has_transferbase();
  transferbase_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.transferBase)
}

// optional int32 transferErt = 14;
inline bool Rehab::has_transferert() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Rehab::set_has_transferert() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Rehab::clear_has_transferert() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Rehab::clear_transferert() {
  transferert_ = 0;
  clear_has_transferert();
}
inline ::google::protobuf::int32 Rehab::transferert() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.transferErt)
  return transferert_;
}
inline void Rehab::set_transferert(::google::protobuf::int32 value) {
  set_has_transferert();
  transferert_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.transferErt)
}

// optional int32 allotBase = 15;
inline bool Rehab::has_allotbase() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Rehab::set_has_allotbase() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Rehab::clear_has_allotbase() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Rehab::clear_allotbase() {
  allotbase_ = 0;
  clear_has_allotbase();
}
inline ::google::protobuf::int32 Rehab::allotbase() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.allotBase)
  return allotbase_;
}
inline void Rehab::set_allotbase(::google::protobuf::int32 value) {
  set_has_allotbase();
  allotbase_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.allotBase)
}

// optional int32 allotErt = 16;
inline bool Rehab::has_allotert() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Rehab::set_has_allotert() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Rehab::clear_has_allotert() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Rehab::clear_allotert() {
  allotert_ = 0;
  clear_has_allotert();
}
inline ::google::protobuf::int32 Rehab::allotert() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.allotErt)
  return allotert_;
}
inline void Rehab::set_allotert(::google::protobuf::int32 value) {
  set_has_allotert();
  allotert_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.allotErt)
}

// optional double allotPrice = 17;
inline bool Rehab::has_allotprice() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Rehab::set_has_allotprice() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Rehab::clear_has_allotprice() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Rehab::clear_allotprice() {
  allotprice_ = 0;
  clear_has_allotprice();
}
inline double Rehab::allotprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.allotPrice)
  return allotprice_;
}
inline void Rehab::set_allotprice(double value) {
  set_has_allotprice();
  allotprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.allotPrice)
}

// optional int32 addBase = 18;
inline bool Rehab::has_addbase() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Rehab::set_has_addbase() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Rehab::clear_has_addbase() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Rehab::clear_addbase() {
  addbase_ = 0;
  clear_has_addbase();
}
inline ::google::protobuf::int32 Rehab::addbase() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.addBase)
  return addbase_;
}
inline void Rehab::set_addbase(::google::protobuf::int32 value) {
  set_has_addbase();
  addbase_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.addBase)
}

// optional int32 addErt = 19;
inline bool Rehab::has_addert() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Rehab::set_has_addert() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Rehab::clear_has_addert() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Rehab::clear_addert() {
  addert_ = 0;
  clear_has_addert();
}
inline ::google::protobuf::int32 Rehab::addert() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.addErt)
  return addert_;
}
inline void Rehab::set_addert(::google::protobuf::int32 value) {
  set_has_addert();
  addert_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.addErt)
}

// optional double addPrice = 20;
inline bool Rehab::has_addprice() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Rehab::set_has_addprice() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Rehab::clear_has_addprice() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Rehab::clear_addprice() {
  addprice_ = 0;
  clear_has_addprice();
}
inline double Rehab::addprice() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.addPrice)
  return addprice_;
}
inline void Rehab::set_addprice(double value) {
  set_has_addprice();
  addprice_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.addPrice)
}

// optional double dividend = 21;
inline bool Rehab::has_dividend() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Rehab::set_has_dividend() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Rehab::clear_has_dividend() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Rehab::clear_dividend() {
  dividend_ = 0;
  clear_has_dividend();
}
inline double Rehab::dividend() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.dividend)
  return dividend_;
}
inline void Rehab::set_dividend(double value) {
  set_has_dividend();
  dividend_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.dividend)
}

// optional double spDividend = 22;
inline bool Rehab::has_spdividend() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Rehab::set_has_spdividend() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Rehab::clear_has_spdividend() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Rehab::clear_spdividend() {
  spdividend_ = 0;
  clear_has_spdividend();
}
inline double Rehab::spdividend() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.spDividend)
  return spdividend_;
}
inline void Rehab::set_spdividend(double value) {
  set_has_spdividend();
  spdividend_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.spDividend)
}

// optional double timestamp = 23;
inline bool Rehab::has_timestamp() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Rehab::set_has_timestamp() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Rehab::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Rehab::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline double Rehab::timestamp() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Rehab.timestamp)
  return timestamp_;
}
inline void Rehab::set_timestamp(double value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Rehab.timestamp)
}

// -------------------------------------------------------------------

// SecurityRehab

// required .Qot_Common.Security security = 1;
inline bool SecurityRehab::has_security() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SecurityRehab::set_has_security() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SecurityRehab::clear_has_security() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::Qot_Common::Security& SecurityRehab::security() const {
  const ::Qot_Common::Security* p = security_;
  // @@protoc_insertion_point(field_get:Qot_GetRehab.SecurityRehab.security)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_Common::Security*>(
      &::Qot_Common::_Security_default_instance_);
}
inline ::Qot_Common::Security* SecurityRehab::release_security() {
  // @@protoc_insertion_point(field_release:Qot_GetRehab.SecurityRehab.security)
  clear_has_security();
  ::Qot_Common::Security* temp = security_;
  security_ = NULL;
  return temp;
}
inline ::Qot_Common::Security* SecurityRehab::mutable_security() {
  set_has_security();
  if (security_ == NULL) {
    security_ = new ::Qot_Common::Security;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetRehab.SecurityRehab.security)
  return security_;
}
inline void SecurityRehab::set_allocated_security(::Qot_Common::Security* security) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(security_);
  }
  if (security) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      security = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, security, submessage_arena);
    }
    set_has_security();
  } else {
    clear_has_security();
  }
  security_ = security;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetRehab.SecurityRehab.security)
}

// repeated .Qot_GetRehab.Rehab rehabList = 2;
inline int SecurityRehab::rehablist_size() const {
  return rehablist_.size();
}
inline void SecurityRehab::clear_rehablist() {
  rehablist_.Clear();
}
inline const ::Qot_GetRehab::Rehab& SecurityRehab::rehablist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.SecurityRehab.rehabList)
  return rehablist_.Get(index);
}
inline ::Qot_GetRehab::Rehab* SecurityRehab::mutable_rehablist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_GetRehab.SecurityRehab.rehabList)
  return rehablist_.Mutable(index);
}
inline ::Qot_GetRehab::Rehab* SecurityRehab::add_rehablist() {
  // @@protoc_insertion_point(field_add:Qot_GetRehab.SecurityRehab.rehabList)
  return rehablist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::Rehab >*
SecurityRehab::mutable_rehablist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_GetRehab.SecurityRehab.rehabList)
  return &rehablist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::Rehab >&
SecurityRehab::rehablist() const {
  // @@protoc_insertion_point(field_list:Qot_GetRehab.SecurityRehab.rehabList)
  return rehablist_;
}

// -------------------------------------------------------------------

// S2C

// repeated .Qot_GetRehab.SecurityRehab securityRehabList = 1;
inline int S2C::securityrehablist_size() const {
  return securityrehablist_.size();
}
inline void S2C::clear_securityrehablist() {
  securityrehablist_.Clear();
}
inline const ::Qot_GetRehab::SecurityRehab& S2C::securityrehablist(int index) const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.S2C.securityRehabList)
  return securityrehablist_.Get(index);
}
inline ::Qot_GetRehab::SecurityRehab* S2C::mutable_securityrehablist(int index) {
  // @@protoc_insertion_point(field_mutable:Qot_GetRehab.S2C.securityRehabList)
  return securityrehablist_.Mutable(index);
}
inline ::Qot_GetRehab::SecurityRehab* S2C::add_securityrehablist() {
  // @@protoc_insertion_point(field_add:Qot_GetRehab.S2C.securityRehabList)
  return securityrehablist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::SecurityRehab >*
S2C::mutable_securityrehablist() {
  // @@protoc_insertion_point(field_mutable_list:Qot_GetRehab.S2C.securityRehabList)
  return &securityrehablist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Qot_GetRehab::SecurityRehab >&
S2C::securityrehablist() const {
  // @@protoc_insertion_point(field_list:Qot_GetRehab.S2C.securityRehabList)
  return securityrehablist_;
}

// -------------------------------------------------------------------

// Request

// required .Qot_GetRehab.C2S c2s = 1;
inline bool Request::has_c2s() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_c2s() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_c2s() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_c2s() {
  if (c2s_ != NULL) c2s_->Clear();
  clear_has_c2s();
}
inline const ::Qot_GetRehab::C2S& Request::c2s() const {
  const ::Qot_GetRehab::C2S* p = c2s_;
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Request.c2s)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetRehab::C2S*>(
      &::Qot_GetRehab::_C2S_default_instance_);
}
inline ::Qot_GetRehab::C2S* Request::release_c2s() {
  // @@protoc_insertion_point(field_release:Qot_GetRehab.Request.c2s)
  clear_has_c2s();
  ::Qot_GetRehab::C2S* temp = c2s_;
  c2s_ = NULL;
  return temp;
}
inline ::Qot_GetRehab::C2S* Request::mutable_c2s() {
  set_has_c2s();
  if (c2s_ == NULL) {
    c2s_ = new ::Qot_GetRehab::C2S;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetRehab.Request.c2s)
  return c2s_;
}
inline void Request::set_allocated_c2s(::Qot_GetRehab::C2S* c2s) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete c2s_;
  }
  if (c2s) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      c2s = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, c2s, submessage_arena);
    }
    set_has_c2s();
  } else {
    clear_has_c2s();
  }
  c2s_ = c2s;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetRehab.Request.c2s)
}

// -------------------------------------------------------------------

// Response

// required int32 retType = 1 [default = -400];
inline bool Response::has_rettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_rettype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_rettype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_rettype() {
  rettype_ = -400;
  clear_has_rettype();
}
inline ::google::protobuf::int32 Response::rettype() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Response.retType)
  return rettype_;
}
inline void Response::set_rettype(::google::protobuf::int32 value) {
  set_has_rettype();
  rettype_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Response.retType)
}

// optional string retMsg = 2;
inline bool Response::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& Response::retmsg() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Response.retMsg)
  return retmsg_.GetNoArena();
}
inline void Response::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Response.retMsg)
}
#if LANG_CXX11
inline void Response::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Qot_GetRehab.Response.retMsg)
}
#endif
inline void Response::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Qot_GetRehab.Response.retMsg)
}
inline void Response::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Qot_GetRehab.Response.retMsg)
}
inline ::std::string* Response::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:Qot_GetRehab.Response.retMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_retmsg() {
  // @@protoc_insertion_point(field_release:Qot_GetRehab.Response.retMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:Qot_GetRehab.Response.retMsg)
}

// optional int32 errCode = 3;
inline bool Response::has_errcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_errcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 Response::errcode() const {
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Response.errCode)
  return errcode_;
}
inline void Response::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:Qot_GetRehab.Response.errCode)
}

// optional .Qot_GetRehab.S2C s2c = 4;
inline bool Response::has_s2c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_s2c() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_s2c() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_s2c() {
  if (s2c_ != NULL) s2c_->Clear();
  clear_has_s2c();
}
inline const ::Qot_GetRehab::S2C& Response::s2c() const {
  const ::Qot_GetRehab::S2C* p = s2c_;
  // @@protoc_insertion_point(field_get:Qot_GetRehab.Response.s2c)
  return p != NULL ? *p : *reinterpret_cast<const ::Qot_GetRehab::S2C*>(
      &::Qot_GetRehab::_S2C_default_instance_);
}
inline ::Qot_GetRehab::S2C* Response::release_s2c() {
  // @@protoc_insertion_point(field_release:Qot_GetRehab.Response.s2c)
  clear_has_s2c();
  ::Qot_GetRehab::S2C* temp = s2c_;
  s2c_ = NULL;
  return temp;
}
inline ::Qot_GetRehab::S2C* Response::mutable_s2c() {
  set_has_s2c();
  if (s2c_ == NULL) {
    s2c_ = new ::Qot_GetRehab::S2C;
  }
  // @@protoc_insertion_point(field_mutable:Qot_GetRehab.Response.s2c)
  return s2c_;
}
inline void Response::set_allocated_s2c(::Qot_GetRehab::S2C* s2c) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete s2c_;
  }
  if (s2c) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      s2c = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, s2c, submessage_arena);
    }
    set_has_s2c();
  } else {
    clear_has_s2c();
  }
  s2c_ = s2c;
  // @@protoc_insertion_point(field_set_allocated:Qot_GetRehab.Response.s2c)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Qot_GetRehab

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Qot_GetRehab::CompanyAct> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Qot_GetRehab::CompanyAct>() {
  return ::Qot_GetRehab::CompanyAct_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Qot_5fGetRehab_2eproto__INCLUDED
