// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Qot_Common.proto

#include "Qot_Common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace Qot_Common {
class SecurityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Security>
      _instance;
} _Security_default_instance_;
class KLineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KLine>
      _instance;
} _KLine_default_instance_;
class OptionBasicQotExDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionBasicQotExData>
      _instance;
} _OptionBasicQotExData_default_instance_;
class BasicQotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BasicQot>
      _instance;
} _BasicQot_default_instance_;
class TimeShareDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeShare>
      _instance;
} _TimeShare_default_instance_;
class SecurityStaticBasicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SecurityStaticBasic>
      _instance;
} _SecurityStaticBasic_default_instance_;
class WarrantStaticExDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WarrantStaticExData>
      _instance;
} _WarrantStaticExData_default_instance_;
class OptionStaticExDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OptionStaticExData>
      _instance;
} _OptionStaticExData_default_instance_;
class SecurityStaticInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SecurityStaticInfo>
      _instance;
} _SecurityStaticInfo_default_instance_;
class BrokerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Broker>
      _instance;
} _Broker_default_instance_;
class TickerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ticker>
      _instance;
} _Ticker_default_instance_;
class OrderBookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderBook>
      _instance;
} _OrderBook_default_instance_;
class OrderDetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderDetail>
      _instance;
} _OrderDetail_default_instance_;
class ShareHoldingChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShareHoldingChange>
      _instance;
} _ShareHoldingChange_default_instance_;
class SubInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubInfo>
      _instance;
} _SubInfo_default_instance_;
class ConnSubInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConnSubInfo>
      _instance;
} _ConnSubInfo_default_instance_;
class PlateInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlateInfo>
      _instance;
} _PlateInfo_default_instance_;
}  // namespace Qot_Common
namespace protobuf_Qot_5fCommon_2eproto {
void InitDefaultsSecurityImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_Common::_Security_default_instance_;
    new (ptr) ::Qot_Common::Security();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::Security::InitAsDefaultInstance();
}

void InitDefaultsSecurity() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSecurityImpl);
}

void InitDefaultsKLineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_Common::_KLine_default_instance_;
    new (ptr) ::Qot_Common::KLine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::KLine::InitAsDefaultInstance();
}

void InitDefaultsKLine() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKLineImpl);
}

void InitDefaultsOptionBasicQotExDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_Common::_OptionBasicQotExData_default_instance_;
    new (ptr) ::Qot_Common::OptionBasicQotExData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::OptionBasicQotExData::InitAsDefaultInstance();
}

void InitDefaultsOptionBasicQotExData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOptionBasicQotExDataImpl);
}

void InitDefaultsBasicQotImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  protobuf_Qot_5fCommon_2eproto::InitDefaultsOptionBasicQotExData();
  {
    void* ptr = &::Qot_Common::_BasicQot_default_instance_;
    new (ptr) ::Qot_Common::BasicQot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::BasicQot::InitAsDefaultInstance();
}

void InitDefaultsBasicQot() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBasicQotImpl);
}

void InitDefaultsTimeShareImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_Common::_TimeShare_default_instance_;
    new (ptr) ::Qot_Common::TimeShare();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::TimeShare::InitAsDefaultInstance();
}

void InitDefaultsTimeShare() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeShareImpl);
}

void InitDefaultsSecurityStaticBasicImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  {
    void* ptr = &::Qot_Common::_SecurityStaticBasic_default_instance_;
    new (ptr) ::Qot_Common::SecurityStaticBasic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::SecurityStaticBasic::InitAsDefaultInstance();
}

void InitDefaultsSecurityStaticBasic() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSecurityStaticBasicImpl);
}

void InitDefaultsWarrantStaticExDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  {
    void* ptr = &::Qot_Common::_WarrantStaticExData_default_instance_;
    new (ptr) ::Qot_Common::WarrantStaticExData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::WarrantStaticExData::InitAsDefaultInstance();
}

void InitDefaultsWarrantStaticExData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWarrantStaticExDataImpl);
}

void InitDefaultsOptionStaticExDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  {
    void* ptr = &::Qot_Common::_OptionStaticExData_default_instance_;
    new (ptr) ::Qot_Common::OptionStaticExData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::OptionStaticExData::InitAsDefaultInstance();
}

void InitDefaultsOptionStaticExData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOptionStaticExDataImpl);
}

void InitDefaultsSecurityStaticInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurityStaticBasic();
  protobuf_Qot_5fCommon_2eproto::InitDefaultsWarrantStaticExData();
  protobuf_Qot_5fCommon_2eproto::InitDefaultsOptionStaticExData();
  {
    void* ptr = &::Qot_Common::_SecurityStaticInfo_default_instance_;
    new (ptr) ::Qot_Common::SecurityStaticInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::SecurityStaticInfo::InitAsDefaultInstance();
}

void InitDefaultsSecurityStaticInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSecurityStaticInfoImpl);
}

void InitDefaultsBrokerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_Common::_Broker_default_instance_;
    new (ptr) ::Qot_Common::Broker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::Broker::InitAsDefaultInstance();
}

void InitDefaultsBroker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBrokerImpl);
}

void InitDefaultsTickerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_Common::_Ticker_default_instance_;
    new (ptr) ::Qot_Common::Ticker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::Ticker::InitAsDefaultInstance();
}

void InitDefaultsTicker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTickerImpl);
}

void InitDefaultsOrderBookImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_Common::_OrderBook_default_instance_;
    new (ptr) ::Qot_Common::OrderBook();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::OrderBook::InitAsDefaultInstance();
}

void InitDefaultsOrderBook() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrderBookImpl);
}

void InitDefaultsOrderDetailImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_Common::_OrderDetail_default_instance_;
    new (ptr) ::Qot_Common::OrderDetail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::OrderDetail::InitAsDefaultInstance();
}

void InitDefaultsOrderDetail() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrderDetailImpl);
}

void InitDefaultsShareHoldingChangeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::Qot_Common::_ShareHoldingChange_default_instance_;
    new (ptr) ::Qot_Common::ShareHoldingChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::ShareHoldingChange::InitAsDefaultInstance();
}

void InitDefaultsShareHoldingChange() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsShareHoldingChangeImpl);
}

void InitDefaultsSubInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  {
    void* ptr = &::Qot_Common::_SubInfo_default_instance_;
    new (ptr) ::Qot_Common::SubInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::SubInfo::InitAsDefaultInstance();
}

void InitDefaultsSubInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubInfoImpl);
}

void InitDefaultsConnSubInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSubInfo();
  {
    void* ptr = &::Qot_Common::_ConnSubInfo_default_instance_;
    new (ptr) ::Qot_Common::ConnSubInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::ConnSubInfo::InitAsDefaultInstance();
}

void InitDefaultsConnSubInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConnSubInfoImpl);
}

void InitDefaultsPlateInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  {
    void* ptr = &::Qot_Common::_PlateInfo_default_instance_;
    new (ptr) ::Qot_Common::PlateInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Qot_Common::PlateInfo::InitAsDefaultInstance();
}

void InitDefaultsPlateInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlateInfoImpl);
}

::google::protobuf::Metadata file_level_metadata[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[21];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Security, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Security, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Security, market_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Security, code_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, isblank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, highprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, openprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, lowprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, closeprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, lastcloseprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, turnoverrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, pe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, changerate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::KLine, timestamp_),
  0,
  12,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, strikeprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, contractsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, openinterest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, impliedvolatility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, premium_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, gamma_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, vega_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, theta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionBasicQotExData, rho_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, security_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, issuspended_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, listtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, pricespread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, updatetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, highprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, openprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, lowprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, curprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, lastcloseprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, turnoverrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, amplitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, darkstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, listtimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, updatetimestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::BasicQot, optionexdata_),
  2,
  8,
  0,
  4,
  1,
  5,
  6,
  7,
  10,
  11,
  12,
  13,
  14,
  15,
  9,
  16,
  17,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, minute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, isblank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, lastcloseprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, avgprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::TimeShare, timestamp_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, security_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, lotsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, sectype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, listtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, delisting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticBasic, listtimestamp_),
  2,
  3,
  4,
  5,
  0,
  1,
  7,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::WarrantStaticExData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::WarrantStaticExData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::WarrantStaticExData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::WarrantStaticExData, owner_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionStaticExData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionStaticExData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionStaticExData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionStaticExData, owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionStaticExData, striketime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionStaticExData, strikeprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionStaticExData, suspend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionStaticExData, market_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OptionStaticExData, striketimestamp_),
  3,
  2,
  0,
  5,
  4,
  1,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticInfo, basic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticInfo, warrantexdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SecurityStaticInfo, optionexdata_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Broker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Broker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Broker, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Broker, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Broker, pos_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, turnover_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, recvtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, typesign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, pushdatatype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::Ticker, timestamp_),
  0,
  1,
  4,
  2,
  3,
  6,
  7,
  5,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OrderBook, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OrderBook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OrderBook, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OrderBook, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OrderBook, oredercount_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OrderDetail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OrderDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OrderDetail, ordercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::OrderDetail, ordervol_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ShareHoldingChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ShareHoldingChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ShareHoldingChange, holdername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ShareHoldingChange, holdingqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ShareHoldingChange, holdingratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ShareHoldingChange, changeqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ShareHoldingChange, changeratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ShareHoldingChange, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ShareHoldingChange, timestamp_),
  0,
  2,
  3,
  4,
  5,
  1,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SubInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SubInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SubInfo, subtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::SubInfo, securitylist_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ConnSubInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ConnSubInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ConnSubInfo, subinfolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ConnSubInfo, usedquota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::ConnSubInfo, isownconndata_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::PlateInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::PlateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::PlateInfo, plate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::PlateInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Qot_Common::PlateInfo, platetype_),
  1,
  0,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::Qot_Common::Security)},
  { 9, 27, sizeof(::Qot_Common::KLine)},
  { 40, 55, sizeof(::Qot_Common::OptionBasicQotExData)},
  { 65, 88, sizeof(::Qot_Common::BasicQot)},
  { 106, 120, sizeof(::Qot_Common::TimeShare)},
  { 129, 142, sizeof(::Qot_Common::SecurityStaticBasic)},
  { 150, 157, sizeof(::Qot_Common::WarrantStaticExData)},
  { 159, 171, sizeof(::Qot_Common::OptionStaticExData)},
  { 178, 186, sizeof(::Qot_Common::SecurityStaticInfo)},
  { 189, 197, sizeof(::Qot_Common::Broker)},
  { 200, 216, sizeof(::Qot_Common::Ticker)},
  { 227, 235, sizeof(::Qot_Common::OrderBook)},
  { 238, 245, sizeof(::Qot_Common::OrderDetail)},
  { 247, 259, sizeof(::Qot_Common::ShareHoldingChange)},
  { 266, 273, sizeof(::Qot_Common::SubInfo)},
  { 275, 283, sizeof(::Qot_Common::ConnSubInfo)},
  { 286, 294, sizeof(::Qot_Common::PlateInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_Security_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_KLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_OptionBasicQotExData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_BasicQot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_TimeShare_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_SecurityStaticBasic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_WarrantStaticExData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_OptionStaticExData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_SecurityStaticInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_Broker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_Ticker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_OrderBook_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_OrderDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_ShareHoldingChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_SubInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_ConnSubInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::Qot_Common::_PlateInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Qot_Common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 17);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020Qot_Common.proto\022\nQot_Common\032\014Common.p"
      "roto\"(\n\010Security\022\016\n\006market\030\001 \002(\005\022\014\n\004code"
      "\030\002 \002(\t\"\365\001\n\005KLine\022\014\n\004time\030\001 \002(\t\022\017\n\007isBlan"
      "k\030\002 \002(\010\022\021\n\thighPrice\030\003 \001(\001\022\021\n\topenPrice\030"
      "\004 \001(\001\022\020\n\010lowPrice\030\005 \001(\001\022\022\n\nclosePrice\030\006 "
      "\001(\001\022\026\n\016lastClosePrice\030\007 \001(\001\022\016\n\006volume\030\010 "
      "\001(\003\022\020\n\010turnover\030\t \001(\001\022\024\n\014turnoverRate\030\n "
      "\001(\001\022\n\n\002pe\030\013 \001(\001\022\022\n\nchangeRate\030\014 \001(\001\022\021\n\tt"
      "imestamp\030\r \001(\001\"\313\001\n\024OptionBasicQotExData\022"
      "\023\n\013strikePrice\030\001 \002(\001\022\024\n\014contractSize\030\002 \002"
      "(\005\022\024\n\014openInterest\030\003 \002(\005\022\031\n\021impliedVolat"
      "ility\030\004 \002(\001\022\017\n\007premium\030\005 \002(\001\022\r\n\005delta\030\006 "
      "\002(\001\022\r\n\005gamma\030\007 \002(\001\022\014\n\004vega\030\010 \002(\001\022\r\n\005thet"
      "a\030\t \002(\001\022\013\n\003rho\030\n \002(\001\"\253\003\n\010BasicQot\022&\n\010sec"
      "urity\030\001 \002(\0132\024.Qot_Common.Security\022\023\n\013isS"
      "uspended\030\002 \002(\010\022\020\n\010listTime\030\003 \002(\t\022\023\n\013pric"
      "eSpread\030\004 \002(\001\022\022\n\nupdateTime\030\005 \002(\t\022\021\n\thig"
      "hPrice\030\006 \002(\001\022\021\n\topenPrice\030\007 \002(\001\022\020\n\010lowPr"
      "ice\030\010 \002(\001\022\020\n\010curPrice\030\t \002(\001\022\026\n\016lastClose"
      "Price\030\n \002(\001\022\016\n\006volume\030\013 \002(\003\022\020\n\010turnover\030"
      "\014 \002(\001\022\024\n\014turnoverRate\030\r \002(\001\022\021\n\tamplitude"
      "\030\016 \002(\001\022\022\n\ndarkStatus\030\017 \001(\005\022\025\n\rlistTimest"
      "amp\030\021 \001(\001\022\027\n\017updateTimestamp\030\022 \001(\001\0226\n\014op"
      "tionExData\030\020 \001(\0132 .Qot_Common.OptionBasi"
      "cQotExData\"\250\001\n\tTimeShare\022\014\n\004time\030\001 \002(\t\022\016"
      "\n\006minute\030\002 \002(\005\022\017\n\007isBlank\030\003 \002(\010\022\r\n\005price"
      "\030\004 \001(\001\022\026\n\016lastClosePrice\030\005 \001(\001\022\020\n\010avgPri"
      "ce\030\006 \001(\001\022\016\n\006volume\030\007 \001(\003\022\020\n\010turnover\030\010 \001"
      "(\001\022\021\n\ttimestamp\030\t \001(\001\"\265\001\n\023SecurityStatic"
      "Basic\022&\n\010security\030\001 \002(\0132\024.Qot_Common.Sec"
      "urity\022\n\n\002id\030\002 \002(\003\022\017\n\007lotSize\030\003 \002(\005\022\017\n\007se"
      "cType\030\004 \002(\005\022\014\n\004name\030\005 \002(\t\022\020\n\010listTime\030\006 "
      "\002(\t\022\021\n\tdelisting\030\007 \001(\010\022\025\n\rlistTimestamp\030"
      "\010 \001(\001\"H\n\023WarrantStaticExData\022\014\n\004type\030\001 \002"
      "(\005\022#\n\005owner\030\002 \002(\0132\024.Qot_Common.Security\""
      "\252\001\n\022OptionStaticExData\022\014\n\004type\030\001 \002(\005\022#\n\005"
      "owner\030\002 \002(\0132\024.Qot_Common.Security\022\022\n\nstr"
      "ikeTime\030\003 \002(\t\022\023\n\013strikePrice\030\004 \002(\001\022\017\n\007su"
      "spend\030\005 \002(\010\022\016\n\006market\030\006 \002(\t\022\027\n\017strikeTim"
      "estamp\030\007 \001(\001\"\262\001\n\022SecurityStaticInfo\022.\n\005b"
      "asic\030\001 \002(\0132\037.Qot_Common.SecurityStaticBa"
      "sic\0226\n\rwarrantExData\030\002 \001(\0132\037.Qot_Common."
      "WarrantStaticExData\0224\n\014optionExData\030\003 \001("
      "\0132\036.Qot_Common.OptionStaticExData\"/\n\006Bro"
      "ker\022\n\n\002id\030\001 \002(\003\022\014\n\004name\030\002 \002(\t\022\013\n\003pos\030\003 \002"
      "(\005\"\301\001\n\006Ticker\022\014\n\004time\030\001 \002(\t\022\020\n\010sequence\030"
      "\002 \002(\003\022\013\n\003dir\030\003 \002(\005\022\r\n\005price\030\004 \002(\001\022\016\n\006vol"
      "ume\030\005 \002(\003\022\020\n\010turnover\030\006 \002(\001\022\020\n\010recvTime\030"
      "\007 \001(\001\022\014\n\004type\030\010 \001(\005\022\020\n\010typeSign\030\t \001(\005\022\024\n"
      "\014pushDataType\030\n \001(\005\022\021\n\ttimestamp\030\013 \001(\001\"\?"
      "\n\tOrderBook\022\r\n\005price\030\001 \002(\001\022\016\n\006volume\030\002 \002"
      "(\003\022\023\n\013orederCount\030\003 \002(\005\"3\n\013OrderDetail\022\022"
      "\n\norderCount\030\001 \002(\005\022\020\n\010orderVol\030\002 \003(\001\"\233\001\n"
      "\022ShareHoldingChange\022\022\n\nholderName\030\001 \002(\t\022"
      "\022\n\nholdingQty\030\002 \002(\001\022\024\n\014holdingRatio\030\003 \002("
      "\001\022\021\n\tchangeQty\030\004 \002(\001\022\023\n\013changeRatio\030\005 \002("
      "\001\022\014\n\004time\030\006 \002(\t\022\021\n\ttimestamp\030\007 \001(\001\"F\n\007Su"
      "bInfo\022\017\n\007subType\030\001 \002(\005\022*\n\014securityList\030\002"
      " \003(\0132\024.Qot_Common.Security\"a\n\013ConnSubInf"
      "o\022(\n\013subInfoList\030\001 \003(\0132\023.Qot_Common.SubI"
      "nfo\022\021\n\tusedQuota\030\002 \002(\005\022\025\n\risOwnConnData\030"
      "\003 \002(\010\"Q\n\tPlateInfo\022#\n\005plate\030\001 \002(\0132\024.Qot_"
      "Common.Security\022\014\n\004name\030\002 \002(\t\022\021\n\tplateTy"
      "pe\030\003 \001(\005*\253\001\n\tQotMarket\022\025\n\021QotMarket_Unkn"
      "own\020\000\022\031\n\025QotMarket_HK_Security\020\001\022\027\n\023QotM"
      "arket_HK_Future\020\002\022\031\n\025QotMarket_US_Securi"
      "ty\020\013\022\033\n\027QotMarket_CNSH_Security\020\025\022\033\n\027Qot"
      "Market_CNSZ_Security\020\026*\201\002\n\014SecurityType\022"
      "\030\n\024SecurityType_Unknown\020\000\022\025\n\021SecurityTyp"
      "e_Bond\020\001\022\025\n\021SecurityType_Bwrt\020\002\022\025\n\021Secur"
      "ityType_Eqty\020\003\022\026\n\022SecurityType_Trust\020\004\022\030"
      "\n\024SecurityType_Warrant\020\005\022\026\n\022SecurityType"
      "_Index\020\006\022\026\n\022SecurityType_Plate\020\007\022\025\n\021Secu"
      "rityType_Drvt\020\010\022\031\n\025SecurityType_PlateSet"
      "\020\t*\212\001\n\014PlateSetType\022\024\n\020PlateSetType_All\020"
      "\000\022\031\n\025PlateSetType_Industry\020\001\022\027\n\023PlateSet"
      "Type_Region\020\002\022\030\n\024PlateSetType_Concept\020\003\022"
      "\026\n\022PlateSetType_Other\020\004*}\n\013WarrantType\022\027"
      "\n\023WarrantType_Unknown\020\000\022\023\n\017WarrantType_B"
      "uy\020\001\022\024\n\020WarrantType_Sell\020\002\022\024\n\020WarrantTyp"
      "e_Bull\020\003\022\024\n\020WarrantType_Bear\020\004*M\n\nOption"
      "Type\022\026\n\022OptionType_Unknown\020\000\022\023\n\017OptionTy"
      "pe_Call\020\001\022\022\n\016OptionType_Put\020\002*\303\004\n\016QotMar"
      "ketState\022\027\n\023QotMarketState_None\020\000\022\032\n\026Qot"
      "MarketState_Auction\020\001\022\036\n\032QotMarketState_"
      "WaitingOpen\020\002\022\032\n\026QotMarketState_Morning\020"
      "\003\022\027\n\023QotMarketState_Rest\020\004\022\034\n\030QotMarketS"
      "tate_Afternoon\020\005\022\031\n\025QotMarketState_Close"
      "d\020\006\022!\n\035QotMarketState_PreMarketBegin\020\010\022\037"
      "\n\033QotMarketState_PreMarketEnd\020\t\022\"\n\036QotMa"
      "rketState_AfterHoursBegin\020\n\022 \n\034QotMarket"
      "State_AfterHoursEnd\020\013\022\034\n\030QotMarketState_"
      "NightOpen\020\r\022\033\n\027QotMarketState_NightEnd\020\016"
      "\022 \n\034QotMarketState_FutureDayOpen\020\017\022!\n\035Qo"
      "tMarketState_FutureDayBreak\020\020\022!\n\035QotMark"
      "etState_FutureDayClose\020\021\022\'\n#QotMarketSta"
      "te_FutureDayWaitForOpen\020\022\022\030\n\024QotMarketSt"
      "ate_HkCas\020\023*`\n\rTradeDateType\022\027\n\023TradeDat"
      "eType_Whole\020\000\022\031\n\025TradeDateType_Morning\020\001"
      "\022\033\n\027TradeDateType_Afternoon\020\002*N\n\tRehabTy"
      "pe\022\022\n\016RehabType_None\020\000\022\025\n\021RehabType_Forw"
      "ard\020\001\022\026\n\022RehabType_Backward\020\002*\335\001\n\006KLType"
      "\022\022\n\016KLType_Unknown\020\000\022\017\n\013KLType_1Min\020\001\022\016\n"
      "\nKLType_Day\020\002\022\017\n\013KLType_Week\020\003\022\020\n\014KLType"
      "_Month\020\004\022\017\n\013KLType_Year\020\005\022\017\n\013KLType_5Min"
      "\020\006\022\020\n\014KLType_15Min\020\007\022\020\n\014KLType_30Min\020\010\022\020"
      "\n\014KLType_60Min\020\t\022\017\n\013KLType_3Min\020\n\022\022\n\016KLT"
      "ype_Quarter\020\013*\365\001\n\010KLFields\022\021\n\rKLFields_N"
      "one\020\000\022\021\n\rKLFields_High\020\001\022\021\n\rKLFields_Ope"
      "n\020\002\022\020\n\014KLFields_Low\020\004\022\022\n\016KLFields_Close\020"
      "\010\022\026\n\022KLFields_LastClose\020\020\022\023\n\017KLFields_Vo"
      "lume\020 \022\025\n\021KLFields_Turnover\020@\022\032\n\025KLField"
      "s_TurnoverRate\020\200\001\022\020\n\013KLFields_PE\020\200\002\022\030\n\023K"
      "LFields_ChangeRate\020\200\004*\203\003\n\007SubType\022\020\n\014Sub"
      "Type_None\020\000\022\021\n\rSubType_Basic\020\001\022\025\n\021SubTyp"
      "e_OrderBook\020\002\022\022\n\016SubType_Ticker\020\004\022\016\n\nSub"
      "Type_RT\020\005\022\022\n\016SubType_KL_Day\020\006\022\023\n\017SubType"
      "_KL_5Min\020\007\022\024\n\020SubType_KL_15Min\020\010\022\024\n\020SubT"
      "ype_KL_30Min\020\t\022\024\n\020SubType_KL_60Min\020\n\022\023\n\017"
      "SubType_KL_1Min\020\013\022\023\n\017SubType_KL_Week\020\014\022\024"
      "\n\020SubType_KL_Month\020\r\022\022\n\016SubType_Broker\020\016"
      "\022\026\n\022SubType_KL_Qurater\020\017\022\023\n\017SubType_KL_Y"
      "ear\020\020\022\023\n\017SubType_KL_3Min\020\021\022\027\n\023SubType_Or"
      "derDetail\020\022*}\n\017TickerDirection\022\033\n\027Ticker"
      "Direction_Unknown\020\000\022\027\n\023TickerDirection_B"
      "id\020\001\022\027\n\023TickerDirection_Ask\020\002\022\033\n\027TickerD"
      "irection_Neutral\020\003*\207\007\n\nTickerType\022\026\n\022Tic"
      "kerType_Unknown\020\000\022\030\n\024TickerType_Automatc"
      "h\020\001\022\023\n\017TickerType_Late\020\002\022\034\n\030TickerType_N"
      "oneAutomatch\020\003\022\035\n\031TickerType_InterAutoma"
      "tch\020\004\022!\n\035TickerType_InterNoneAutomatch\020\005"
      "\022\025\n\021TickerType_OddLot\020\006\022\026\n\022TickerType_Au"
      "ction\020\007\022\023\n\017TickerType_Bulk\020\010\022\024\n\020TickerTy"
      "pe_Crash\020\t\022\032\n\026TickerType_CrossMarket\020\n\022\027"
      "\n\023TickerType_BulkSold\020\013\022\032\n\026TickerType_Fr"
      "eeOnBoard\020\014\022\033\n\027TickerType_Rule127Or155\020\r"
      "\022\024\n\020TickerType_Delay\020\016\022%\n!TickerType_Mar"
      "ketCenterClosePrice\020\017\022\026\n\022TickerType_Next"
      "Day\020\020\022\"\n\036TickerType_MarketCenterOpening\020"
      "\021\022\"\n\036TickerType_PriorReferencePrice\020\022\022$\n"
      " TickerType_MarketCenterOpenPrice\020\023\022\025\n\021T"
      "ickerType_Seller\020\024\022\020\n\014TickerType_T\020\025\022#\n\037"
      "TickerType_ExtendedTradingHours\020\026\022\031\n\025Tic"
      "kerType_Contingent\020\027\022\033\n\027TickerType_Avera"
      "gePrice\020\030\022\026\n\022TickerType_OTCSold\020\031\022 \n\034Tic"
      "kerType_OddLotCrossMarket\020\032\022!\n\035TickerTyp"
      "e_DerivativelyPriced\020\033\022\036\n\032TickerType_ReO"
      "peningPriced\020\034\022\034\n\030TickerType_ClosingPric"
      "ed\020\035\022&\n\"TickerType_ComprehensiveDelayPri"
      "ce\020\036*M\n\nDarkStatus\022\023\n\017DarkStatus_None\020\000\022"
      "\026\n\022DarkStatus_Trading\020\001\022\022\n\016DarkStatus_En"
      "d\020\002*\201\001\n\016HolderCategory\022\031\n\025HolderCategory"
      "_Unknow\020\000\022\031\n\025HolderCategory_Agency\020\001\022\027\n\023"
      "HolderCategory_Fund\020\002\022 \n\034HolderCategory_"
      "SeniorManager\020\003*v\n\014PushDataType\022\027\n\023PushD"
      "ataType_Unknow\020\000\022\031\n\025PushDataType_Realtim"
      "e\020\001\022\032\n\026PushDataType_ByDisConn\020\002\022\026\n\022PushD"
      "ataType_Cache\020\003*\363\006\n\tSortField\022\024\n\020SortFie"
      "ld_Unknow\020\000\022\022\n\016SortField_Code\020\001\022\026\n\022SortF"
      "ield_CurPrice\020\002\022\034\n\030SortField_PriceChange"
      "Val\020\003\022\030\n\024SortField_ChangeRate\020\004\022\024\n\020SortF"
      "ield_Status\020\005\022\026\n\022SortField_BidPrice\020\006\022\026\n"
      "\022SortField_AskPrice\020\007\022\024\n\020SortField_BidVo"
      "l\020\010\022\024\n\020SortField_AskVol\020\t\022\024\n\020SortField_V"
      "olume\020\n\022\026\n\022SortField_Turnover\020\013\022\023\n\017SortF"
      "ield_Score\020\014\022\025\n\021SortField_Premium\020\r\022\037\n\033S"
      "ortField_EffectiveLeverage\020\016\022\023\n\017SortFiel"
      "d_Delta\020\017\022\037\n\033SortField_ImpliedVolatility"
      "\020\020\022\022\n\016SortField_Type\020\021\022\031\n\025SortField_Stri"
      "kePrice\020\022\022\034\n\030SortField_BreakEvenPoint\020\023\022"
      "\032\n\026SortField_MaturityTime\020\024\022\026\n\022SortField"
      "_ListTime\020\025\022\033\n\027SortField_LastTradeTime\020\026"
      "\022\026\n\022SortField_Leverage\020\027\022\030\n\024SortField_In"
      "OutMoney\020\030\022\033\n\027SortField_RecoveryPrice\020\031\022"
      "\031\n\025SortField_ChangePrice\020\032\022\024\n\020SortField_"
      "Change\020\033\022\030\n\024SortField_StreetRate\020\034\022\027\n\023So"
      "rtField_StreetVol\020\035\022\027\n\023SortField_Amplitu"
      "de\020\036\022\031\n\025SortField_WarrantName\020\037\022\024\n\020SortF"
      "ield_Issuer\020 \022\025\n\021SortField_LotSize\020!\022\027\n\023"
      "SortField_IssueSize\020\"*\345\002\n\006Issuer\022\021\n\rIssu"
      "er_Unknow\020\000\022\r\n\tIssuer_SG\020\001\022\r\n\tIssuer_BP\020"
      "\002\022\r\n\tIssuer_CS\020\003\022\r\n\tIssuer_CT\020\004\022\r\n\tIssue"
      "r_EA\020\005\022\r\n\tIssuer_GS\020\006\022\r\n\tIssuer_HS\020\007\022\r\n\t"
      "Issuer_JP\020\010\022\r\n\tIssuer_MB\020\t\022\r\n\tIssuer_SC\020"
      "\n\022\r\n\tIssuer_UB\020\013\022\r\n\tIssuer_BI\020\014\022\r\n\tIssue"
      "r_DB\020\r\022\r\n\tIssuer_DC\020\016\022\r\n\tIssuer_ML\020\017\022\r\n\t"
      "Issuer_NM\020\020\022\r\n\tIssuer_RB\020\021\022\r\n\tIssuer_RS\020"
      "\022\022\r\n\tIssuer_BC\020\023\022\r\n\tIssuer_HT\020\024\022\r\n\tIssue"
      "r_VT\020\025\022\r\n\tIssuer_KC\020\026*\227\001\n\tIpoPeriod\022\024\n\020I"
      "poPeriod_Unknow\020\000\022\023\n\017IpoPeriod_Today\020\001\022\026"
      "\n\022IpoPeriod_Tomorrow\020\002\022\026\n\022IpoPeriod_Next"
      "week\020\003\022\026\n\022IpoPeriod_Lastweek\020\004\022\027\n\023IpoPer"
      "iod_Lastmonth\020\005*N\n\tPriceType\022\024\n\020PriceTyp"
      "e_Unknow\020\000\022\025\n\021PriceType_Outside\020\001\022\024\n\020Pri"
      "ceType_WithIn\020\002*\235\001\n\rWarrantStatus\022\030\n\024War"
      "rantStatus_Unknow\020\000\022\030\n\024WarrantStatus_Nor"
      "mal\020\001\022\031\n\025WarrantStatus_Suspend\020\002\022\033\n\027Warr"
      "antStatus_StopTrade\020\003\022 \n\034WarrantStatus_P"
      "endingListing\020\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7935);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Qot_Common.proto", &protobuf_RegisterTypes);
  ::protobuf_Common_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Qot_5fCommon_2eproto
namespace Qot_Common {
const ::google::protobuf::EnumDescriptor* QotMarket_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[0];
}
bool QotMarket_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 11:
    case 21:
    case 22:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SecurityType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[1];
}
bool SecurityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlateSetType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[2];
}
bool PlateSetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WarrantType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[3];
}
bool WarrantType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* OptionType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[4];
}
bool OptionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* QotMarketState_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[5];
}
bool QotMarketState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TradeDateType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[6];
}
bool TradeDateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RehabType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[7];
}
bool RehabType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* KLType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[8];
}
bool KLType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* KLFields_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[9];
}
bool KLFields_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SubType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[10];
}
bool SubType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TickerDirection_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[11];
}
bool TickerDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TickerType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[12];
}
bool TickerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DarkStatus_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[13];
}
bool DarkStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HolderCategory_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[14];
}
bool HolderCategory_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PushDataType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[15];
}
bool PushDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SortField_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[16];
}
bool SortField_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Issuer_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[17];
}
bool Issuer_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* IpoPeriod_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[18];
}
bool IpoPeriod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PriceType_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[19];
}
bool PriceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* WarrantStatus_descriptor() {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Qot_5fCommon_2eproto::file_level_enum_descriptors[20];
}
bool WarrantStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Security::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Security::kMarketFieldNumber;
const int Security::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Security::Security()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.Security)
}
Security::Security(const Security& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  market_ = from.market_;
  // @@protoc_insertion_point(copy_constructor:Qot_Common.Security)
}

void Security::SharedCtor() {
  _cached_size_ = 0;
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_ = 0;
}

Security::~Security() {
  // @@protoc_insertion_point(destructor:Qot_Common.Security)
  SharedDtor();
}

void Security::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Security::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Security::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Security& Security::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurity();
  return *internal_default_instance();
}

Security* Security::New(::google::protobuf::Arena* arena) const {
  Security* n = new Security;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Security::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.Security)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*code_.UnsafeRawStringPointer())->clear();
  }
  market_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Security::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.Security)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 market = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_market();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.Security.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.Security)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.Security)
  return false;
#undef DO_
}

void Security::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.Security)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 market = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->market(), output);
  }

  // required string code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.Security.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.Security)
}

::google::protobuf::uint8* Security::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.Security)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 market = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->market(), target);
  }

  // required string code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.Security.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.Security)
  return target;
}

size_t Security::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.Security)
  size_t total_size = 0;

  if (has_code()) {
    // required string code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  if (has_market()) {
    // required int32 market = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->market());
  }

  return total_size;
}
size_t Security::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.Security)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());

    // required int32 market = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->market());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Security::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.Security)
  GOOGLE_DCHECK_NE(&from, this);
  const Security* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Security>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.Security)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.Security)
    MergeFrom(*source);
  }
}

void Security::MergeFrom(const Security& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.Security)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000002u) {
      market_ = from.market_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Security::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.Security)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Security::CopyFrom(const Security& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.Security)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Security::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Security::Swap(Security* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Security::InternalSwap(Security* other) {
  using std::swap;
  code_.Swap(&other->code_);
  swap(market_, other->market_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Security::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KLine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KLine::kTimeFieldNumber;
const int KLine::kIsBlankFieldNumber;
const int KLine::kHighPriceFieldNumber;
const int KLine::kOpenPriceFieldNumber;
const int KLine::kLowPriceFieldNumber;
const int KLine::kClosePriceFieldNumber;
const int KLine::kLastClosePriceFieldNumber;
const int KLine::kVolumeFieldNumber;
const int KLine::kTurnoverFieldNumber;
const int KLine::kTurnoverRateFieldNumber;
const int KLine::kPeFieldNumber;
const int KLine::kChangeRateFieldNumber;
const int KLine::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KLine::KLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsKLine();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.KLine)
}
KLine::KLine(const KLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  ::memcpy(&highprice_, &from.highprice_,
    static_cast<size_t>(reinterpret_cast<char*>(&isblank_) -
    reinterpret_cast<char*>(&highprice_)) + sizeof(isblank_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.KLine)
}

void KLine::SharedCtor() {
  _cached_size_ = 0;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&highprice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isblank_) -
      reinterpret_cast<char*>(&highprice_)) + sizeof(isblank_));
}

KLine::~KLine() {
  // @@protoc_insertion_point(destructor:Qot_Common.KLine)
  SharedDtor();
}

void KLine::SharedDtor() {
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KLine::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KLine& KLine::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsKLine();
  return *internal_default_instance();
}

KLine* KLine::New(::google::protobuf::Arena* arena) const {
  KLine* n = new KLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KLine::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.KLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*time_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&highprice_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&turnover_) -
        reinterpret_cast<char*>(&highprice_)) + sizeof(turnover_));
  }
  if (cached_has_bits & 7936u) {
    ::memset(&turnoverrate_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isblank_) -
        reinterpret_cast<char*>(&turnoverrate_)) + sizeof(isblank_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.KLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.KLine.time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isBlank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_isblank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isblank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double highPrice = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_highprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double openPrice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_openprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lowPrice = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_lowprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double closePrice = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_closeprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &closeprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lastClosePrice = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_lastcloseprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastcloseprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 volume = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_volume();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double turnover = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_turnover();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double turnoverRate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_turnoverrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnoverrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pe = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_pe();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double changeRate = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_changerate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &changerate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double timestamp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.KLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.KLine)
  return false;
#undef DO_
}

void KLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.KLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.KLine.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->time(), output);
  }

  // required bool isBlank = 2;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isblank(), output);
  }

  // optional double highPrice = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->highprice(), output);
  }

  // optional double openPrice = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->openprice(), output);
  }

  // optional double lowPrice = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lowprice(), output);
  }

  // optional double closePrice = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->closeprice(), output);
  }

  // optional double lastClosePrice = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->lastcloseprice(), output);
  }

  // optional int64 volume = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->volume(), output);
  }

  // optional double turnover = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->turnover(), output);
  }

  // optional double turnoverRate = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->turnoverrate(), output);
  }

  // optional double pe = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->pe(), output);
  }

  // optional double changeRate = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->changerate(), output);
  }

  // optional double timestamp = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.KLine)
}

::google::protobuf::uint8* KLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.KLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.KLine.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->time(), target);
  }

  // required bool isBlank = 2;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isblank(), target);
  }

  // optional double highPrice = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->highprice(), target);
  }

  // optional double openPrice = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->openprice(), target);
  }

  // optional double lowPrice = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lowprice(), target);
  }

  // optional double closePrice = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->closeprice(), target);
  }

  // optional double lastClosePrice = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->lastcloseprice(), target);
  }

  // optional int64 volume = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->volume(), target);
  }

  // optional double turnover = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->turnover(), target);
  }

  // optional double turnoverRate = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->turnoverrate(), target);
  }

  // optional double pe = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->pe(), target);
  }

  // optional double changeRate = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->changerate(), target);
  }

  // optional double timestamp = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.KLine)
  return target;
}

size_t KLine::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.KLine)
  size_t total_size = 0;

  if (has_time()) {
    // required string time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  if (has_isblank()) {
    // required bool isBlank = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t KLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.KLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001001) ^ 0x00001001) == 0) {  // All required fields are present.
    // required string time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());

    // required bool isBlank = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 254u) {
    // optional double highPrice = 3;
    if (has_highprice()) {
      total_size += 1 + 8;
    }

    // optional double openPrice = 4;
    if (has_openprice()) {
      total_size += 1 + 8;
    }

    // optional double lowPrice = 5;
    if (has_lowprice()) {
      total_size += 1 + 8;
    }

    // optional double closePrice = 6;
    if (has_closeprice()) {
      total_size += 1 + 8;
    }

    // optional double lastClosePrice = 7;
    if (has_lastcloseprice()) {
      total_size += 1 + 8;
    }

    // optional int64 volume = 8;
    if (has_volume()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->volume());
    }

    // optional double turnover = 9;
    if (has_turnover()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional double turnoverRate = 10;
    if (has_turnoverrate()) {
      total_size += 1 + 8;
    }

    // optional double pe = 11;
    if (has_pe()) {
      total_size += 1 + 8;
    }

    // optional double changeRate = 12;
    if (has_changerate()) {
      total_size += 1 + 8;
    }

    // optional double timestamp = 13;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.KLine)
  GOOGLE_DCHECK_NE(&from, this);
  const KLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.KLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.KLine)
    MergeFrom(*source);
  }
}

void KLine::MergeFrom(const KLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.KLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_time();
      time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (cached_has_bits & 0x00000002u) {
      highprice_ = from.highprice_;
    }
    if (cached_has_bits & 0x00000004u) {
      openprice_ = from.openprice_;
    }
    if (cached_has_bits & 0x00000008u) {
      lowprice_ = from.lowprice_;
    }
    if (cached_has_bits & 0x00000010u) {
      closeprice_ = from.closeprice_;
    }
    if (cached_has_bits & 0x00000020u) {
      lastcloseprice_ = from.lastcloseprice_;
    }
    if (cached_has_bits & 0x00000040u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00000080u) {
      turnover_ = from.turnover_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      turnoverrate_ = from.turnoverrate_;
    }
    if (cached_has_bits & 0x00000200u) {
      pe_ = from.pe_;
    }
    if (cached_has_bits & 0x00000400u) {
      changerate_ = from.changerate_;
    }
    if (cached_has_bits & 0x00000800u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00001000u) {
      isblank_ = from.isblank_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void KLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.KLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KLine::CopyFrom(const KLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.KLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KLine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001001) != 0x00001001) return false;
  return true;
}

void KLine::Swap(KLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KLine::InternalSwap(KLine* other) {
  using std::swap;
  time_.Swap(&other->time_);
  swap(highprice_, other->highprice_);
  swap(openprice_, other->openprice_);
  swap(lowprice_, other->lowprice_);
  swap(closeprice_, other->closeprice_);
  swap(lastcloseprice_, other->lastcloseprice_);
  swap(volume_, other->volume_);
  swap(turnover_, other->turnover_);
  swap(turnoverrate_, other->turnoverrate_);
  swap(pe_, other->pe_);
  swap(changerate_, other->changerate_);
  swap(timestamp_, other->timestamp_);
  swap(isblank_, other->isblank_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KLine::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionBasicQotExData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionBasicQotExData::kStrikePriceFieldNumber;
const int OptionBasicQotExData::kContractSizeFieldNumber;
const int OptionBasicQotExData::kOpenInterestFieldNumber;
const int OptionBasicQotExData::kImpliedVolatilityFieldNumber;
const int OptionBasicQotExData::kPremiumFieldNumber;
const int OptionBasicQotExData::kDeltaFieldNumber;
const int OptionBasicQotExData::kGammaFieldNumber;
const int OptionBasicQotExData::kVegaFieldNumber;
const int OptionBasicQotExData::kThetaFieldNumber;
const int OptionBasicQotExData::kRhoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionBasicQotExData::OptionBasicQotExData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsOptionBasicQotExData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.OptionBasicQotExData)
}
OptionBasicQotExData::OptionBasicQotExData(const OptionBasicQotExData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&strikeprice_, &from.strikeprice_,
    static_cast<size_t>(reinterpret_cast<char*>(&rho_) -
    reinterpret_cast<char*>(&strikeprice_)) + sizeof(rho_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.OptionBasicQotExData)
}

void OptionBasicQotExData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&strikeprice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rho_) -
      reinterpret_cast<char*>(&strikeprice_)) + sizeof(rho_));
}

OptionBasicQotExData::~OptionBasicQotExData() {
  // @@protoc_insertion_point(destructor:Qot_Common.OptionBasicQotExData)
  SharedDtor();
}

void OptionBasicQotExData::SharedDtor() {
}

void OptionBasicQotExData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptionBasicQotExData::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionBasicQotExData& OptionBasicQotExData::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsOptionBasicQotExData();
  return *internal_default_instance();
}

OptionBasicQotExData* OptionBasicQotExData::New(::google::protobuf::Arena* arena) const {
  OptionBasicQotExData* n = new OptionBasicQotExData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptionBasicQotExData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.OptionBasicQotExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&strikeprice_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vega_) -
        reinterpret_cast<char*>(&strikeprice_)) + sizeof(vega_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&theta_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rho_) -
        reinterpret_cast<char*>(&theta_)) + sizeof(rho_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OptionBasicQotExData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.OptionBasicQotExData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double strikePrice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_strikeprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strikeprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 contractSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_contractsize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contractsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 openInterest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_openinterest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &openinterest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double impliedVolatility = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_impliedvolatility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &impliedvolatility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double premium = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_premium();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &premium_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double delta = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double gamma = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_gamma();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gamma_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double vega = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_vega();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vega_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double theta = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_theta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &theta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double rho = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_rho();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rho_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.OptionBasicQotExData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.OptionBasicQotExData)
  return false;
#undef DO_
}

void OptionBasicQotExData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.OptionBasicQotExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double strikePrice = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->strikeprice(), output);
  }

  // required int32 contractSize = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->contractsize(), output);
  }

  // required int32 openInterest = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->openinterest(), output);
  }

  // required double impliedVolatility = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->impliedvolatility(), output);
  }

  // required double premium = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->premium(), output);
  }

  // required double delta = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->delta(), output);
  }

  // required double gamma = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->gamma(), output);
  }

  // required double vega = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->vega(), output);
  }

  // required double theta = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->theta(), output);
  }

  // required double rho = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->rho(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.OptionBasicQotExData)
}

::google::protobuf::uint8* OptionBasicQotExData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.OptionBasicQotExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double strikePrice = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->strikeprice(), target);
  }

  // required int32 contractSize = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->contractsize(), target);
  }

  // required int32 openInterest = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->openinterest(), target);
  }

  // required double impliedVolatility = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->impliedvolatility(), target);
  }

  // required double premium = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->premium(), target);
  }

  // required double delta = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->delta(), target);
  }

  // required double gamma = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->gamma(), target);
  }

  // required double vega = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->vega(), target);
  }

  // required double theta = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->theta(), target);
  }

  // required double rho = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->rho(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.OptionBasicQotExData)
  return target;
}

size_t OptionBasicQotExData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.OptionBasicQotExData)
  size_t total_size = 0;

  if (has_strikeprice()) {
    // required double strikePrice = 1;
    total_size += 1 + 8;
  }

  if (has_contractsize()) {
    // required int32 contractSize = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contractsize());
  }

  if (has_openinterest()) {
    // required int32 openInterest = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openinterest());
  }

  if (has_impliedvolatility()) {
    // required double impliedVolatility = 4;
    total_size += 1 + 8;
  }

  if (has_premium()) {
    // required double premium = 5;
    total_size += 1 + 8;
  }

  if (has_delta()) {
    // required double delta = 6;
    total_size += 1 + 8;
  }

  if (has_gamma()) {
    // required double gamma = 7;
    total_size += 1 + 8;
  }

  if (has_vega()) {
    // required double vega = 8;
    total_size += 1 + 8;
  }

  if (has_theta()) {
    // required double theta = 9;
    total_size += 1 + 8;
  }

  if (has_rho()) {
    // required double rho = 10;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t OptionBasicQotExData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.OptionBasicQotExData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required double strikePrice = 1;
    total_size += 1 + 8;

    // required int32 contractSize = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->contractsize());

    // required int32 openInterest = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->openinterest());

    // required double impliedVolatility = 4;
    total_size += 1 + 8;

    // required double premium = 5;
    total_size += 1 + 8;

    // required double delta = 6;
    total_size += 1 + 8;

    // required double gamma = 7;
    total_size += 1 + 8;

    // required double vega = 8;
    total_size += 1 + 8;

    // required double theta = 9;
    total_size += 1 + 8;

    // required double rho = 10;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptionBasicQotExData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.OptionBasicQotExData)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionBasicQotExData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionBasicQotExData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.OptionBasicQotExData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.OptionBasicQotExData)
    MergeFrom(*source);
  }
}

void OptionBasicQotExData::MergeFrom(const OptionBasicQotExData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.OptionBasicQotExData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      strikeprice_ = from.strikeprice_;
    }
    if (cached_has_bits & 0x00000002u) {
      contractsize_ = from.contractsize_;
    }
    if (cached_has_bits & 0x00000004u) {
      openinterest_ = from.openinterest_;
    }
    if (cached_has_bits & 0x00000008u) {
      impliedvolatility_ = from.impliedvolatility_;
    }
    if (cached_has_bits & 0x00000010u) {
      premium_ = from.premium_;
    }
    if (cached_has_bits & 0x00000020u) {
      delta_ = from.delta_;
    }
    if (cached_has_bits & 0x00000040u) {
      gamma_ = from.gamma_;
    }
    if (cached_has_bits & 0x00000080u) {
      vega_ = from.vega_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      theta_ = from.theta_;
    }
    if (cached_has_bits & 0x00000200u) {
      rho_ = from.rho_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OptionBasicQotExData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.OptionBasicQotExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionBasicQotExData::CopyFrom(const OptionBasicQotExData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.OptionBasicQotExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionBasicQotExData::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;
  return true;
}

void OptionBasicQotExData::Swap(OptionBasicQotExData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionBasicQotExData::InternalSwap(OptionBasicQotExData* other) {
  using std::swap;
  swap(strikeprice_, other->strikeprice_);
  swap(contractsize_, other->contractsize_);
  swap(openinterest_, other->openinterest_);
  swap(impliedvolatility_, other->impliedvolatility_);
  swap(premium_, other->premium_);
  swap(delta_, other->delta_);
  swap(gamma_, other->gamma_);
  swap(vega_, other->vega_);
  swap(theta_, other->theta_);
  swap(rho_, other->rho_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptionBasicQotExData::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BasicQot::InitAsDefaultInstance() {
  ::Qot_Common::_BasicQot_default_instance_._instance.get_mutable()->security_ = const_cast< ::Qot_Common::Security*>(
      ::Qot_Common::Security::internal_default_instance());
  ::Qot_Common::_BasicQot_default_instance_._instance.get_mutable()->optionexdata_ = const_cast< ::Qot_Common::OptionBasicQotExData*>(
      ::Qot_Common::OptionBasicQotExData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BasicQot::kSecurityFieldNumber;
const int BasicQot::kIsSuspendedFieldNumber;
const int BasicQot::kListTimeFieldNumber;
const int BasicQot::kPriceSpreadFieldNumber;
const int BasicQot::kUpdateTimeFieldNumber;
const int BasicQot::kHighPriceFieldNumber;
const int BasicQot::kOpenPriceFieldNumber;
const int BasicQot::kLowPriceFieldNumber;
const int BasicQot::kCurPriceFieldNumber;
const int BasicQot::kLastClosePriceFieldNumber;
const int BasicQot::kVolumeFieldNumber;
const int BasicQot::kTurnoverFieldNumber;
const int BasicQot::kTurnoverRateFieldNumber;
const int BasicQot::kAmplitudeFieldNumber;
const int BasicQot::kDarkStatusFieldNumber;
const int BasicQot::kListTimestampFieldNumber;
const int BasicQot::kUpdateTimestampFieldNumber;
const int BasicQot::kOptionExDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BasicQot::BasicQot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsBasicQot();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.BasicQot)
}
BasicQot::BasicQot(const BasicQot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  listtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_listtime()) {
    listtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listtime_);
  }
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_updatetime()) {
    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  if (from.has_security()) {
    security_ = new ::Qot_Common::Security(*from.security_);
  } else {
    security_ = NULL;
  }
  if (from.has_optionexdata()) {
    optionexdata_ = new ::Qot_Common::OptionBasicQotExData(*from.optionexdata_);
  } else {
    optionexdata_ = NULL;
  }
  ::memcpy(&pricespread_, &from.pricespread_,
    static_cast<size_t>(reinterpret_cast<char*>(&updatetimestamp_) -
    reinterpret_cast<char*>(&pricespread_)) + sizeof(updatetimestamp_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.BasicQot)
}

void BasicQot::SharedCtor() {
  _cached_size_ = 0;
  listtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&security_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updatetimestamp_) -
      reinterpret_cast<char*>(&security_)) + sizeof(updatetimestamp_));
}

BasicQot::~BasicQot() {
  // @@protoc_insertion_point(destructor:Qot_Common.BasicQot)
  SharedDtor();
}

void BasicQot::SharedDtor() {
  listtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete security_;
  if (this != internal_default_instance()) delete optionexdata_;
}

void BasicQot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BasicQot::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BasicQot& BasicQot::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsBasicQot();
  return *internal_default_instance();
}

BasicQot* BasicQot::New(::google::protobuf::Arena* arena) const {
  BasicQot* n = new BasicQot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BasicQot::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.BasicQot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!listtime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*listtime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!updatetime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*updatetime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(security_ != NULL);
      security_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(optionexdata_ != NULL);
      optionexdata_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&pricespread_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lowprice_) -
        reinterpret_cast<char*>(&pricespread_)) + sizeof(lowprice_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&issuspended_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&amplitude_) -
        reinterpret_cast<char*>(&issuspended_)) + sizeof(amplitude_));
  }
  if (cached_has_bits & 196608u) {
    ::memset(&listtimestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&updatetimestamp_) -
        reinterpret_cast<char*>(&listtimestamp_)) + sizeof(updatetimestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BasicQot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.BasicQot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_Common.Security security = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_security()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isSuspended = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_issuspended();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuspended_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string listTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->listtime().data(), static_cast<int>(this->listtime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.BasicQot.listTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double priceSpread = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_pricespread();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pricespread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string updateTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->updatetime().data(), static_cast<int>(this->updatetime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.BasicQot.updateTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double highPrice = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_highprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &highprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double openPrice = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_openprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &openprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lowPrice = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_lowprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lowprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double curPrice = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_curprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &curprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double lastClosePrice = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_lastcloseprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastcloseprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 volume = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_volume();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double turnover = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_turnover();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double turnoverRate = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_turnoverrate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnoverrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double amplitude = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_amplitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &amplitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 darkStatus = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_darkstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &darkstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_Common.OptionBasicQotExData optionExData = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optionexdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double listTimestamp = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {
          set_has_listtimestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &listtimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double updateTimestamp = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {
          set_has_updatetimestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &updatetimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.BasicQot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.BasicQot)
  return false;
#undef DO_
}

void BasicQot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.BasicQot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security security = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->security_, output);
  }

  // required bool isSuspended = 2;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->issuspended(), output);
  }

  // required string listTime = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listtime().data(), static_cast<int>(this->listtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.BasicQot.listTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->listtime(), output);
  }

  // required double priceSpread = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->pricespread(), output);
  }

  // required string updateTime = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.BasicQot.updateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->updatetime(), output);
  }

  // required double highPrice = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->highprice(), output);
  }

  // required double openPrice = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->openprice(), output);
  }

  // required double lowPrice = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->lowprice(), output);
  }

  // required double curPrice = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->curprice(), output);
  }

  // required double lastClosePrice = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->lastcloseprice(), output);
  }

  // required int64 volume = 11;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->volume(), output);
  }

  // required double turnover = 12;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->turnover(), output);
  }

  // required double turnoverRate = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->turnoverrate(), output);
  }

  // required double amplitude = 14;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->amplitude(), output);
  }

  // optional int32 darkStatus = 15;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->darkstatus(), output);
  }

  // optional .Qot_Common.OptionBasicQotExData optionExData = 16;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->optionexdata_, output);
  }

  // optional double listTimestamp = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->listtimestamp(), output);
  }

  // optional double updateTimestamp = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->updatetimestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.BasicQot)
}

::google::protobuf::uint8* BasicQot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.BasicQot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security security = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->security_, deterministic, target);
  }

  // required bool isSuspended = 2;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->issuspended(), target);
  }

  // required string listTime = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listtime().data(), static_cast<int>(this->listtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.BasicQot.listTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->listtime(), target);
  }

  // required double priceSpread = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->pricespread(), target);
  }

  // required string updateTime = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.BasicQot.updateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->updatetime(), target);
  }

  // required double highPrice = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->highprice(), target);
  }

  // required double openPrice = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->openprice(), target);
  }

  // required double lowPrice = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->lowprice(), target);
  }

  // required double curPrice = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->curprice(), target);
  }

  // required double lastClosePrice = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->lastcloseprice(), target);
  }

  // required int64 volume = 11;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->volume(), target);
  }

  // required double turnover = 12;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->turnover(), target);
  }

  // required double turnoverRate = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->turnoverrate(), target);
  }

  // required double amplitude = 14;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->amplitude(), target);
  }

  // optional int32 darkStatus = 15;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->darkstatus(), target);
  }

  // optional .Qot_Common.OptionBasicQotExData optionExData = 16;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, *this->optionexdata_, deterministic, target);
  }

  // optional double listTimestamp = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->listtimestamp(), target);
  }

  // optional double updateTimestamp = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->updatetimestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.BasicQot)
  return target;
}

size_t BasicQot::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.BasicQot)
  size_t total_size = 0;

  if (has_listtime()) {
    // required string listTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listtime());
  }

  if (has_updatetime()) {
    // required string updateTime = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());
  }

  if (has_security()) {
    // required .Qot_Common.Security security = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_);
  }

  if (has_pricespread()) {
    // required double priceSpread = 4;
    total_size += 1 + 8;
  }

  if (has_highprice()) {
    // required double highPrice = 6;
    total_size += 1 + 8;
  }

  if (has_openprice()) {
    // required double openPrice = 7;
    total_size += 1 + 8;
  }

  if (has_lowprice()) {
    // required double lowPrice = 8;
    total_size += 1 + 8;
  }

  if (has_issuspended()) {
    // required bool isSuspended = 2;
    total_size += 1 + 1;
  }

  if (has_curprice()) {
    // required double curPrice = 9;
    total_size += 1 + 8;
  }

  if (has_lastcloseprice()) {
    // required double lastClosePrice = 10;
    total_size += 1 + 8;
  }

  if (has_volume()) {
    // required int64 volume = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());
  }

  if (has_turnover()) {
    // required double turnover = 12;
    total_size += 1 + 8;
  }

  if (has_turnoverrate()) {
    // required double turnoverRate = 13;
    total_size += 1 + 8;
  }

  if (has_amplitude()) {
    // required double amplitude = 14;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t BasicQot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.BasicQot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000fdf7) ^ 0x0000fdf7) == 0) {  // All required fields are present.
    // required string listTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listtime());

    // required string updateTime = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());

    // required .Qot_Common.Security security = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_);

    // required double priceSpread = 4;
    total_size += 1 + 8;

    // required double highPrice = 6;
    total_size += 1 + 8;

    // required double openPrice = 7;
    total_size += 1 + 8;

    // required double lowPrice = 8;
    total_size += 1 + 8;

    // required bool isSuspended = 2;
    total_size += 1 + 1;

    // required double curPrice = 9;
    total_size += 1 + 8;

    // required double lastClosePrice = 10;
    total_size += 1 + 8;

    // required int64 volume = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());

    // required double turnover = 12;
    total_size += 1 + 8;

    // required double turnoverRate = 13;
    total_size += 1 + 8;

    // required double amplitude = 14;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .Qot_Common.OptionBasicQotExData optionExData = 16;
  if (has_optionexdata()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->optionexdata_);
  }

  // optional int32 darkStatus = 15;
  if (has_darkstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->darkstatus());
  }

  if (_has_bits_[16 / 32] & 196608u) {
    // optional double listTimestamp = 17;
    if (has_listtimestamp()) {
      total_size += 2 + 8;
    }

    // optional double updateTimestamp = 18;
    if (has_updatetimestamp()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BasicQot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.BasicQot)
  GOOGLE_DCHECK_NE(&from, this);
  const BasicQot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BasicQot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.BasicQot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.BasicQot)
    MergeFrom(*source);
  }
}

void BasicQot::MergeFrom(const BasicQot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.BasicQot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_listtime();
      listtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listtime_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_updatetime();
      updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_security()->::Qot_Common::Security::MergeFrom(from.security());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_optionexdata()->::Qot_Common::OptionBasicQotExData::MergeFrom(from.optionexdata());
    }
    if (cached_has_bits & 0x00000010u) {
      pricespread_ = from.pricespread_;
    }
    if (cached_has_bits & 0x00000020u) {
      highprice_ = from.highprice_;
    }
    if (cached_has_bits & 0x00000040u) {
      openprice_ = from.openprice_;
    }
    if (cached_has_bits & 0x00000080u) {
      lowprice_ = from.lowprice_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      issuspended_ = from.issuspended_;
    }
    if (cached_has_bits & 0x00000200u) {
      darkstatus_ = from.darkstatus_;
    }
    if (cached_has_bits & 0x00000400u) {
      curprice_ = from.curprice_;
    }
    if (cached_has_bits & 0x00000800u) {
      lastcloseprice_ = from.lastcloseprice_;
    }
    if (cached_has_bits & 0x00001000u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00002000u) {
      turnover_ = from.turnover_;
    }
    if (cached_has_bits & 0x00004000u) {
      turnoverrate_ = from.turnoverrate_;
    }
    if (cached_has_bits & 0x00008000u) {
      amplitude_ = from.amplitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      listtimestamp_ = from.listtimestamp_;
    }
    if (cached_has_bits & 0x00020000u) {
      updatetimestamp_ = from.updatetimestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BasicQot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.BasicQot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BasicQot::CopyFrom(const BasicQot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.BasicQot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasicQot::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000fdf7) != 0x0000fdf7) return false;
  if (has_security()) {
    if (!this->security_->IsInitialized()) return false;
  }
  if (has_optionexdata()) {
    if (!this->optionexdata_->IsInitialized()) return false;
  }
  return true;
}

void BasicQot::Swap(BasicQot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BasicQot::InternalSwap(BasicQot* other) {
  using std::swap;
  listtime_.Swap(&other->listtime_);
  updatetime_.Swap(&other->updatetime_);
  swap(security_, other->security_);
  swap(optionexdata_, other->optionexdata_);
  swap(pricespread_, other->pricespread_);
  swap(highprice_, other->highprice_);
  swap(openprice_, other->openprice_);
  swap(lowprice_, other->lowprice_);
  swap(issuspended_, other->issuspended_);
  swap(darkstatus_, other->darkstatus_);
  swap(curprice_, other->curprice_);
  swap(lastcloseprice_, other->lastcloseprice_);
  swap(volume_, other->volume_);
  swap(turnover_, other->turnover_);
  swap(turnoverrate_, other->turnoverrate_);
  swap(amplitude_, other->amplitude_);
  swap(listtimestamp_, other->listtimestamp_);
  swap(updatetimestamp_, other->updatetimestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BasicQot::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeShare::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimeShare::kTimeFieldNumber;
const int TimeShare::kMinuteFieldNumber;
const int TimeShare::kIsBlankFieldNumber;
const int TimeShare::kPriceFieldNumber;
const int TimeShare::kLastClosePriceFieldNumber;
const int TimeShare::kAvgPriceFieldNumber;
const int TimeShare::kVolumeFieldNumber;
const int TimeShare::kTurnoverFieldNumber;
const int TimeShare::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeShare::TimeShare()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsTimeShare();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.TimeShare)
}
TimeShare::TimeShare(const TimeShare& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  ::memcpy(&minute_, &from.minute_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&minute_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.TimeShare)
}

void TimeShare::SharedCtor() {
  _cached_size_ = 0;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&minute_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&minute_)) + sizeof(timestamp_));
}

TimeShare::~TimeShare() {
  // @@protoc_insertion_point(destructor:Qot_Common.TimeShare)
  SharedDtor();
}

void TimeShare::SharedDtor() {
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TimeShare::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeShare::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeShare& TimeShare::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsTimeShare();
  return *internal_default_instance();
}

TimeShare* TimeShare::New(::google::protobuf::Arena* arena) const {
  TimeShare* n = new TimeShare;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimeShare::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.TimeShare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*time_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&minute_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&turnover_) -
        reinterpret_cast<char*>(&minute_)) + sizeof(turnover_));
  }
  timestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TimeShare::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.TimeShare)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.TimeShare.time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 minute = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_minute();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minute_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isBlank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_isblank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isblank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double lastClosePrice = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_lastcloseprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &lastcloseprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double avgPrice = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_avgprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avgprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 volume = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_volume();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double turnover = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_turnover();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double timestamp = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.TimeShare)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.TimeShare)
  return false;
#undef DO_
}

void TimeShare::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.TimeShare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.TimeShare.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->time(), output);
  }

  // required int32 minute = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->minute(), output);
  }

  // required bool isBlank = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isblank(), output);
  }

  // optional double price = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->price(), output);
  }

  // optional double lastClosePrice = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->lastcloseprice(), output);
  }

  // optional double avgPrice = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->avgprice(), output);
  }

  // optional int64 volume = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->volume(), output);
  }

  // optional double turnover = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->turnover(), output);
  }

  // optional double timestamp = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.TimeShare)
}

::google::protobuf::uint8* TimeShare::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.TimeShare)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.TimeShare.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->time(), target);
  }

  // required int32 minute = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->minute(), target);
  }

  // required bool isBlank = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isblank(), target);
  }

  // optional double price = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->price(), target);
  }

  // optional double lastClosePrice = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->lastcloseprice(), target);
  }

  // optional double avgPrice = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->avgprice(), target);
  }

  // optional int64 volume = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->volume(), target);
  }

  // optional double turnover = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->turnover(), target);
  }

  // optional double timestamp = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.TimeShare)
  return target;
}

size_t TimeShare::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.TimeShare)
  size_t total_size = 0;

  if (has_time()) {
    // required string time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  if (has_minute()) {
    // required int32 minute = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minute());
  }

  if (has_isblank()) {
    // required bool isBlank = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t TimeShare::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.TimeShare)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());

    // required int32 minute = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minute());

    // required bool isBlank = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 248u) {
    // optional double price = 4;
    if (has_price()) {
      total_size += 1 + 8;
    }

    // optional double lastClosePrice = 5;
    if (has_lastcloseprice()) {
      total_size += 1 + 8;
    }

    // optional double avgPrice = 6;
    if (has_avgprice()) {
      total_size += 1 + 8;
    }

    // optional int64 volume = 7;
    if (has_volume()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->volume());
    }

    // optional double turnover = 8;
    if (has_turnover()) {
      total_size += 1 + 8;
    }

  }
  // optional double timestamp = 9;
  if (has_timestamp()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeShare::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.TimeShare)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeShare* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeShare>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.TimeShare)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.TimeShare)
    MergeFrom(*source);
  }
}

void TimeShare::MergeFrom(const TimeShare& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.TimeShare)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_time();
      time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (cached_has_bits & 0x00000002u) {
      minute_ = from.minute_;
    }
    if (cached_has_bits & 0x00000004u) {
      isblank_ = from.isblank_;
    }
    if (cached_has_bits & 0x00000008u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000010u) {
      lastcloseprice_ = from.lastcloseprice_;
    }
    if (cached_has_bits & 0x00000020u) {
      avgprice_ = from.avgprice_;
    }
    if (cached_has_bits & 0x00000040u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00000080u) {
      turnover_ = from.turnover_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_timestamp(from.timestamp());
  }
}

void TimeShare::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.TimeShare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeShare::CopyFrom(const TimeShare& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.TimeShare)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeShare::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void TimeShare::Swap(TimeShare* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeShare::InternalSwap(TimeShare* other) {
  using std::swap;
  time_.Swap(&other->time_);
  swap(minute_, other->minute_);
  swap(isblank_, other->isblank_);
  swap(price_, other->price_);
  swap(lastcloseprice_, other->lastcloseprice_);
  swap(avgprice_, other->avgprice_);
  swap(volume_, other->volume_);
  swap(turnover_, other->turnover_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeShare::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SecurityStaticBasic::InitAsDefaultInstance() {
  ::Qot_Common::_SecurityStaticBasic_default_instance_._instance.get_mutable()->security_ = const_cast< ::Qot_Common::Security*>(
      ::Qot_Common::Security::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SecurityStaticBasic::kSecurityFieldNumber;
const int SecurityStaticBasic::kIdFieldNumber;
const int SecurityStaticBasic::kLotSizeFieldNumber;
const int SecurityStaticBasic::kSecTypeFieldNumber;
const int SecurityStaticBasic::kNameFieldNumber;
const int SecurityStaticBasic::kListTimeFieldNumber;
const int SecurityStaticBasic::kDelistingFieldNumber;
const int SecurityStaticBasic::kListTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SecurityStaticBasic::SecurityStaticBasic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurityStaticBasic();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.SecurityStaticBasic)
}
SecurityStaticBasic::SecurityStaticBasic(const SecurityStaticBasic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  listtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_listtime()) {
    listtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listtime_);
  }
  if (from.has_security()) {
    security_ = new ::Qot_Common::Security(*from.security_);
  } else {
    security_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&delisting_) -
    reinterpret_cast<char*>(&id_)) + sizeof(delisting_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.SecurityStaticBasic)
}

void SecurityStaticBasic::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&security_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delisting_) -
      reinterpret_cast<char*>(&security_)) + sizeof(delisting_));
}

SecurityStaticBasic::~SecurityStaticBasic() {
  // @@protoc_insertion_point(destructor:Qot_Common.SecurityStaticBasic)
  SharedDtor();
}

void SecurityStaticBasic::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete security_;
}

void SecurityStaticBasic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SecurityStaticBasic::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SecurityStaticBasic& SecurityStaticBasic::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurityStaticBasic();
  return *internal_default_instance();
}

SecurityStaticBasic* SecurityStaticBasic::New(::google::protobuf::Arena* arena) const {
  SecurityStaticBasic* n = new SecurityStaticBasic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SecurityStaticBasic::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.SecurityStaticBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!listtime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*listtime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(security_ != NULL);
      security_->Clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&delisting_) -
        reinterpret_cast<char*>(&id_)) + sizeof(delisting_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SecurityStaticBasic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.SecurityStaticBasic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_Common.Security security = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_security()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 lotSize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_lotsize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lotsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 secType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_sectype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sectype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.SecurityStaticBasic.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string listTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_listtime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->listtime().data(), static_cast<int>(this->listtime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.SecurityStaticBasic.listTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool delisting = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_delisting();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delisting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double listTimestamp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_listtimestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &listtimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.SecurityStaticBasic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.SecurityStaticBasic)
  return false;
#undef DO_
}

void SecurityStaticBasic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.SecurityStaticBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security security = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->security_, output);
  }

  // required int64 id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }

  // required int32 lotSize = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lotsize(), output);
  }

  // required int32 secType = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sectype(), output);
  }

  // required string name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.SecurityStaticBasic.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // required string listTime = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listtime().data(), static_cast<int>(this->listtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.SecurityStaticBasic.listTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->listtime(), output);
  }

  // optional bool delisting = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->delisting(), output);
  }

  // optional double listTimestamp = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->listtimestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.SecurityStaticBasic)
}

::google::protobuf::uint8* SecurityStaticBasic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.SecurityStaticBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security security = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->security_, deterministic, target);
  }

  // required int64 id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }

  // required int32 lotSize = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lotsize(), target);
  }

  // required int32 secType = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sectype(), target);
  }

  // required string name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.SecurityStaticBasic.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // required string listTime = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->listtime().data(), static_cast<int>(this->listtime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.SecurityStaticBasic.listTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->listtime(), target);
  }

  // optional bool delisting = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->delisting(), target);
  }

  // optional double listTimestamp = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->listtimestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.SecurityStaticBasic)
  return target;
}

size_t SecurityStaticBasic::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.SecurityStaticBasic)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_listtime()) {
    // required string listTime = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listtime());
  }

  if (has_security()) {
    // required .Qot_Common.Security security = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_);
  }

  if (has_id()) {
    // required int64 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_lotsize()) {
    // required int32 lotSize = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lotsize());
  }

  if (has_sectype()) {
    // required int32 secType = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sectype());
  }

  return total_size;
}
size_t SecurityStaticBasic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.SecurityStaticBasic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string name = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string listTime = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->listtime());

    // required .Qot_Common.Security security = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->security_);

    // required int64 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 lotSize = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->lotsize());

    // required int32 secType = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sectype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional double listTimestamp = 8;
    if (has_listtimestamp()) {
      total_size += 1 + 8;
    }

    // optional bool delisting = 7;
    if (has_delisting()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SecurityStaticBasic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.SecurityStaticBasic)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityStaticBasic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SecurityStaticBasic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.SecurityStaticBasic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.SecurityStaticBasic)
    MergeFrom(*source);
  }
}

void SecurityStaticBasic::MergeFrom(const SecurityStaticBasic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.SecurityStaticBasic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_listtime();
      listtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listtime_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_security()->::Qot_Common::Security::MergeFrom(from.security());
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      lotsize_ = from.lotsize_;
    }
    if (cached_has_bits & 0x00000020u) {
      sectype_ = from.sectype_;
    }
    if (cached_has_bits & 0x00000040u) {
      listtimestamp_ = from.listtimestamp_;
    }
    if (cached_has_bits & 0x00000080u) {
      delisting_ = from.delisting_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SecurityStaticBasic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.SecurityStaticBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityStaticBasic::CopyFrom(const SecurityStaticBasic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.SecurityStaticBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityStaticBasic::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_security()) {
    if (!this->security_->IsInitialized()) return false;
  }
  return true;
}

void SecurityStaticBasic::Swap(SecurityStaticBasic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SecurityStaticBasic::InternalSwap(SecurityStaticBasic* other) {
  using std::swap;
  name_.Swap(&other->name_);
  listtime_.Swap(&other->listtime_);
  swap(security_, other->security_);
  swap(id_, other->id_);
  swap(lotsize_, other->lotsize_);
  swap(sectype_, other->sectype_);
  swap(listtimestamp_, other->listtimestamp_);
  swap(delisting_, other->delisting_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SecurityStaticBasic::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WarrantStaticExData::InitAsDefaultInstance() {
  ::Qot_Common::_WarrantStaticExData_default_instance_._instance.get_mutable()->owner_ = const_cast< ::Qot_Common::Security*>(
      ::Qot_Common::Security::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WarrantStaticExData::kTypeFieldNumber;
const int WarrantStaticExData::kOwnerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WarrantStaticExData::WarrantStaticExData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsWarrantStaticExData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.WarrantStaticExData)
}
WarrantStaticExData::WarrantStaticExData(const WarrantStaticExData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_owner()) {
    owner_ = new ::Qot_Common::Security(*from.owner_);
  } else {
    owner_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:Qot_Common.WarrantStaticExData)
}

void WarrantStaticExData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&owner_)) + sizeof(type_));
}

WarrantStaticExData::~WarrantStaticExData() {
  // @@protoc_insertion_point(destructor:Qot_Common.WarrantStaticExData)
  SharedDtor();
}

void WarrantStaticExData::SharedDtor() {
  if (this != internal_default_instance()) delete owner_;
}

void WarrantStaticExData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WarrantStaticExData::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WarrantStaticExData& WarrantStaticExData::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsWarrantStaticExData();
  return *internal_default_instance();
}

WarrantStaticExData* WarrantStaticExData::New(::google::protobuf::Arena* arena) const {
  WarrantStaticExData* n = new WarrantStaticExData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WarrantStaticExData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.WarrantStaticExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(owner_ != NULL);
    owner_->Clear();
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WarrantStaticExData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.WarrantStaticExData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Qot_Common.Security owner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.WarrantStaticExData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.WarrantStaticExData)
  return false;
#undef DO_
}

void WarrantStaticExData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.WarrantStaticExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required .Qot_Common.Security owner = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->owner_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.WarrantStaticExData)
}

::google::protobuf::uint8* WarrantStaticExData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.WarrantStaticExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required .Qot_Common.Security owner = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->owner_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.WarrantStaticExData)
  return target;
}

size_t WarrantStaticExData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.WarrantStaticExData)
  size_t total_size = 0;

  if (has_owner()) {
    // required .Qot_Common.Security owner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->owner_);
  }

  if (has_type()) {
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  return total_size;
}
size_t WarrantStaticExData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.WarrantStaticExData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .Qot_Common.Security owner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->owner_);

    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WarrantStaticExData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.WarrantStaticExData)
  GOOGLE_DCHECK_NE(&from, this);
  const WarrantStaticExData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WarrantStaticExData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.WarrantStaticExData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.WarrantStaticExData)
    MergeFrom(*source);
  }
}

void WarrantStaticExData::MergeFrom(const WarrantStaticExData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.WarrantStaticExData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_owner()->::Qot_Common::Security::MergeFrom(from.owner());
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WarrantStaticExData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.WarrantStaticExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WarrantStaticExData::CopyFrom(const WarrantStaticExData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.WarrantStaticExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WarrantStaticExData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_owner()) {
    if (!this->owner_->IsInitialized()) return false;
  }
  return true;
}

void WarrantStaticExData::Swap(WarrantStaticExData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WarrantStaticExData::InternalSwap(WarrantStaticExData* other) {
  using std::swap;
  swap(owner_, other->owner_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WarrantStaticExData::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OptionStaticExData::InitAsDefaultInstance() {
  ::Qot_Common::_OptionStaticExData_default_instance_._instance.get_mutable()->owner_ = const_cast< ::Qot_Common::Security*>(
      ::Qot_Common::Security::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OptionStaticExData::kTypeFieldNumber;
const int OptionStaticExData::kOwnerFieldNumber;
const int OptionStaticExData::kStrikeTimeFieldNumber;
const int OptionStaticExData::kStrikePriceFieldNumber;
const int OptionStaticExData::kSuspendFieldNumber;
const int OptionStaticExData::kMarketFieldNumber;
const int OptionStaticExData::kStrikeTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OptionStaticExData::OptionStaticExData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsOptionStaticExData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.OptionStaticExData)
}
OptionStaticExData::OptionStaticExData(const OptionStaticExData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  striketime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_striketime()) {
    striketime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.striketime_);
  }
  market_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_market()) {
    market_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_);
  }
  if (from.has_owner()) {
    owner_ = new ::Qot_Common::Security(*from.owner_);
  } else {
    owner_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&striketimestamp_) -
    reinterpret_cast<char*>(&type_)) + sizeof(striketimestamp_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.OptionStaticExData)
}

void OptionStaticExData::SharedCtor() {
  _cached_size_ = 0;
  striketime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&owner_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&striketimestamp_) -
      reinterpret_cast<char*>(&owner_)) + sizeof(striketimestamp_));
}

OptionStaticExData::~OptionStaticExData() {
  // @@protoc_insertion_point(destructor:Qot_Common.OptionStaticExData)
  SharedDtor();
}

void OptionStaticExData::SharedDtor() {
  striketime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  market_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete owner_;
}

void OptionStaticExData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OptionStaticExData::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OptionStaticExData& OptionStaticExData::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsOptionStaticExData();
  return *internal_default_instance();
}

OptionStaticExData* OptionStaticExData::New(::google::protobuf::Arena* arena) const {
  OptionStaticExData* n = new OptionStaticExData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OptionStaticExData::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.OptionStaticExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!striketime_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*striketime_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!market_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*market_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(owner_ != NULL);
      owner_->Clear();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&striketimestamp_) -
        reinterpret_cast<char*>(&type_)) + sizeof(striketimestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OptionStaticExData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.OptionStaticExData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .Qot_Common.Security owner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_owner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string strikeTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_striketime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->striketime().data(), static_cast<int>(this->striketime().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.OptionStaticExData.strikeTime");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double strikePrice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_strikeprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &strikeprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool suspend = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_suspend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &suspend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string market = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_market()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->market().data(), static_cast<int>(this->market().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.OptionStaticExData.market");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double strikeTimestamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_striketimestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &striketimestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.OptionStaticExData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.OptionStaticExData)
  return false;
#undef DO_
}

void OptionStaticExData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.OptionStaticExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // required .Qot_Common.Security owner = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->owner_, output);
  }

  // required string strikeTime = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->striketime().data(), static_cast<int>(this->striketime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.OptionStaticExData.strikeTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->striketime(), output);
  }

  // required double strikePrice = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->strikeprice(), output);
  }

  // required bool suspend = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->suspend(), output);
  }

  // required string market = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market().data(), static_cast<int>(this->market().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.OptionStaticExData.market");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->market(), output);
  }

  // optional double strikeTimestamp = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->striketimestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.OptionStaticExData)
}

::google::protobuf::uint8* OptionStaticExData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.OptionStaticExData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // required .Qot_Common.Security owner = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->owner_, deterministic, target);
  }

  // required string strikeTime = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->striketime().data(), static_cast<int>(this->striketime().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.OptionStaticExData.strikeTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->striketime(), target);
  }

  // required double strikePrice = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->strikeprice(), target);
  }

  // required bool suspend = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->suspend(), target);
  }

  // required string market = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->market().data(), static_cast<int>(this->market().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.OptionStaticExData.market");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->market(), target);
  }

  // optional double strikeTimestamp = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->striketimestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.OptionStaticExData)
  return target;
}

size_t OptionStaticExData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.OptionStaticExData)
  size_t total_size = 0;

  if (has_striketime()) {
    // required string strikeTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->striketime());
  }

  if (has_market()) {
    // required string market = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->market());
  }

  if (has_owner()) {
    // required .Qot_Common.Security owner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->owner_);
  }

  if (has_type()) {
    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  if (has_suspend()) {
    // required bool suspend = 5;
    total_size += 1 + 1;
  }

  if (has_strikeprice()) {
    // required double strikePrice = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t OptionStaticExData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.OptionStaticExData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string strikeTime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->striketime());

    // required string market = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->market());

    // required .Qot_Common.Security owner = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->owner_);

    // required int32 type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());

    // required bool suspend = 5;
    total_size += 1 + 1;

    // required double strikePrice = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional double strikeTimestamp = 7;
  if (has_striketimestamp()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OptionStaticExData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.OptionStaticExData)
  GOOGLE_DCHECK_NE(&from, this);
  const OptionStaticExData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OptionStaticExData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.OptionStaticExData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.OptionStaticExData)
    MergeFrom(*source);
  }
}

void OptionStaticExData::MergeFrom(const OptionStaticExData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.OptionStaticExData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_striketime();
      striketime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.striketime_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_market();
      market_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.market_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_owner()->::Qot_Common::Security::MergeFrom(from.owner());
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      suspend_ = from.suspend_;
    }
    if (cached_has_bits & 0x00000020u) {
      strikeprice_ = from.strikeprice_;
    }
    if (cached_has_bits & 0x00000040u) {
      striketimestamp_ = from.striketimestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OptionStaticExData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.OptionStaticExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OptionStaticExData::CopyFrom(const OptionStaticExData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.OptionStaticExData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OptionStaticExData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_owner()) {
    if (!this->owner_->IsInitialized()) return false;
  }
  return true;
}

void OptionStaticExData::Swap(OptionStaticExData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OptionStaticExData::InternalSwap(OptionStaticExData* other) {
  using std::swap;
  striketime_.Swap(&other->striketime_);
  market_.Swap(&other->market_);
  swap(owner_, other->owner_);
  swap(type_, other->type_);
  swap(suspend_, other->suspend_);
  swap(strikeprice_, other->strikeprice_);
  swap(striketimestamp_, other->striketimestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OptionStaticExData::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SecurityStaticInfo::InitAsDefaultInstance() {
  ::Qot_Common::_SecurityStaticInfo_default_instance_._instance.get_mutable()->basic_ = const_cast< ::Qot_Common::SecurityStaticBasic*>(
      ::Qot_Common::SecurityStaticBasic::internal_default_instance());
  ::Qot_Common::_SecurityStaticInfo_default_instance_._instance.get_mutable()->warrantexdata_ = const_cast< ::Qot_Common::WarrantStaticExData*>(
      ::Qot_Common::WarrantStaticExData::internal_default_instance());
  ::Qot_Common::_SecurityStaticInfo_default_instance_._instance.get_mutable()->optionexdata_ = const_cast< ::Qot_Common::OptionStaticExData*>(
      ::Qot_Common::OptionStaticExData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SecurityStaticInfo::kBasicFieldNumber;
const int SecurityStaticInfo::kWarrantExDataFieldNumber;
const int SecurityStaticInfo::kOptionExDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SecurityStaticInfo::SecurityStaticInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurityStaticInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.SecurityStaticInfo)
}
SecurityStaticInfo::SecurityStaticInfo(const SecurityStaticInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic()) {
    basic_ = new ::Qot_Common::SecurityStaticBasic(*from.basic_);
  } else {
    basic_ = NULL;
  }
  if (from.has_warrantexdata()) {
    warrantexdata_ = new ::Qot_Common::WarrantStaticExData(*from.warrantexdata_);
  } else {
    warrantexdata_ = NULL;
  }
  if (from.has_optionexdata()) {
    optionexdata_ = new ::Qot_Common::OptionStaticExData(*from.optionexdata_);
  } else {
    optionexdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Qot_Common.SecurityStaticInfo)
}

void SecurityStaticInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&basic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&optionexdata_) -
      reinterpret_cast<char*>(&basic_)) + sizeof(optionexdata_));
}

SecurityStaticInfo::~SecurityStaticInfo() {
  // @@protoc_insertion_point(destructor:Qot_Common.SecurityStaticInfo)
  SharedDtor();
}

void SecurityStaticInfo::SharedDtor() {
  if (this != internal_default_instance()) delete basic_;
  if (this != internal_default_instance()) delete warrantexdata_;
  if (this != internal_default_instance()) delete optionexdata_;
}

void SecurityStaticInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SecurityStaticInfo::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SecurityStaticInfo& SecurityStaticInfo::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsSecurityStaticInfo();
  return *internal_default_instance();
}

SecurityStaticInfo* SecurityStaticInfo::New(::google::protobuf::Arena* arena) const {
  SecurityStaticInfo* n = new SecurityStaticInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SecurityStaticInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.SecurityStaticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(basic_ != NULL);
      basic_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(warrantexdata_ != NULL);
      warrantexdata_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(optionexdata_ != NULL);
      optionexdata_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SecurityStaticInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.SecurityStaticInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_Common.SecurityStaticBasic basic = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_Common.WarrantStaticExData warrantExData = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_warrantexdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .Qot_Common.OptionStaticExData optionExData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optionexdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.SecurityStaticInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.SecurityStaticInfo)
  return false;
#undef DO_
}

void SecurityStaticInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.SecurityStaticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.SecurityStaticBasic basic = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_, output);
  }

  // optional .Qot_Common.WarrantStaticExData warrantExData = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->warrantexdata_, output);
  }

  // optional .Qot_Common.OptionStaticExData optionExData = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->optionexdata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.SecurityStaticInfo)
}

::google::protobuf::uint8* SecurityStaticInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.SecurityStaticInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.SecurityStaticBasic basic = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->basic_, deterministic, target);
  }

  // optional .Qot_Common.WarrantStaticExData warrantExData = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->warrantexdata_, deterministic, target);
  }

  // optional .Qot_Common.OptionStaticExData optionExData = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->optionexdata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.SecurityStaticInfo)
  return target;
}

size_t SecurityStaticInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.SecurityStaticInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .Qot_Common.SecurityStaticBasic basic = 1;
  if (has_basic()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->basic_);
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional .Qot_Common.WarrantStaticExData warrantExData = 2;
    if (has_warrantexdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->warrantexdata_);
    }

    // optional .Qot_Common.OptionStaticExData optionExData = 3;
    if (has_optionexdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->optionexdata_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SecurityStaticInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.SecurityStaticInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SecurityStaticInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SecurityStaticInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.SecurityStaticInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.SecurityStaticInfo)
    MergeFrom(*source);
  }
}

void SecurityStaticInfo::MergeFrom(const SecurityStaticInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.SecurityStaticInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_basic()->::Qot_Common::SecurityStaticBasic::MergeFrom(from.basic());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_warrantexdata()->::Qot_Common::WarrantStaticExData::MergeFrom(from.warrantexdata());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_optionexdata()->::Qot_Common::OptionStaticExData::MergeFrom(from.optionexdata());
    }
  }
}

void SecurityStaticInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.SecurityStaticInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecurityStaticInfo::CopyFrom(const SecurityStaticInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.SecurityStaticInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecurityStaticInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_basic()) {
    if (!this->basic_->IsInitialized()) return false;
  }
  if (has_warrantexdata()) {
    if (!this->warrantexdata_->IsInitialized()) return false;
  }
  if (has_optionexdata()) {
    if (!this->optionexdata_->IsInitialized()) return false;
  }
  return true;
}

void SecurityStaticInfo::Swap(SecurityStaticInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SecurityStaticInfo::InternalSwap(SecurityStaticInfo* other) {
  using std::swap;
  swap(basic_, other->basic_);
  swap(warrantexdata_, other->warrantexdata_);
  swap(optionexdata_, other->optionexdata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SecurityStaticInfo::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Broker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Broker::kIdFieldNumber;
const int Broker::kNameFieldNumber;
const int Broker::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Broker::Broker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsBroker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.Broker)
}
Broker::Broker(const Broker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&id_)) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.Broker)
}

void Broker::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&id_)) + sizeof(pos_));
}

Broker::~Broker() {
  // @@protoc_insertion_point(destructor:Qot_Common.Broker)
  SharedDtor();
}

void Broker::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Broker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Broker::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Broker& Broker::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsBroker();
  return *internal_default_instance();
}

Broker* Broker::New(::google::protobuf::Arena* arena) const {
  Broker* n = new Broker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Broker::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.Broker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pos_) -
        reinterpret_cast<char*>(&id_)) + sizeof(pos_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Broker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.Broker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.Broker.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.Broker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.Broker)
  return false;
#undef DO_
}

void Broker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.Broker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.Broker.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required int32 pos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.Broker)
}

::google::protobuf::uint8* Broker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.Broker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.Broker.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required int32 pos = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.Broker)
  return target;
}

size_t Broker::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.Broker)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_pos()) {
    // required int32 pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos());
  }

  return total_size;
}
size_t Broker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.Broker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required int32 pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pos());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Broker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.Broker)
  GOOGLE_DCHECK_NE(&from, this);
  const Broker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Broker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.Broker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.Broker)
    MergeFrom(*source);
  }
}

void Broker::MergeFrom(const Broker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.Broker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000004u) {
      pos_ = from.pos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Broker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.Broker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Broker::CopyFrom(const Broker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.Broker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Broker::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Broker::Swap(Broker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Broker::InternalSwap(Broker* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  swap(pos_, other->pos_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Broker::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ticker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ticker::kTimeFieldNumber;
const int Ticker::kSequenceFieldNumber;
const int Ticker::kDirFieldNumber;
const int Ticker::kPriceFieldNumber;
const int Ticker::kVolumeFieldNumber;
const int Ticker::kTurnoverFieldNumber;
const int Ticker::kRecvTimeFieldNumber;
const int Ticker::kTypeFieldNumber;
const int Ticker::kTypeSignFieldNumber;
const int Ticker::kPushDataTypeFieldNumber;
const int Ticker::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ticker::Ticker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsTicker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.Ticker)
}
Ticker::Ticker(const Ticker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  ::memcpy(&sequence_, &from.sequence_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&sequence_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.Ticker)
}

void Ticker::SharedCtor() {
  _cached_size_ = 0;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&sequence_)) + sizeof(timestamp_));
}

Ticker::~Ticker() {
  // @@protoc_insertion_point(destructor:Qot_Common.Ticker)
  SharedDtor();
}

void Ticker::SharedDtor() {
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Ticker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ticker::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ticker& Ticker::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsTicker();
  return *internal_default_instance();
}

Ticker* Ticker::New(::google::protobuf::Arena* arena) const {
  Ticker* n = new Ticker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ticker::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.Ticker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*time_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&sequence_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&recvtime_) -
        reinterpret_cast<char*>(&sequence_)) + sizeof(recvtime_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&typesign_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&typesign_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Ticker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.Ticker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.Ticker.time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 sequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_sequence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 dir = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_dir();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 volume = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_volume();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double turnover = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_turnover();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &turnover_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double recvTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_recvtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &recvtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 typeSign = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_typesign();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typesign_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 pushDataType = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_pushdatatype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pushdatatype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double timestamp = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.Ticker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.Ticker)
  return false;
#undef DO_
}

void Ticker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.Ticker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.Ticker.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->time(), output);
  }

  // required int64 sequence = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->sequence(), output);
  }

  // required int32 dir = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dir(), output);
  }

  // required double price = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->price(), output);
  }

  // required int64 volume = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->volume(), output);
  }

  // required double turnover = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->turnover(), output);
  }

  // optional double recvTime = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->recvtime(), output);
  }

  // optional int32 type = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->type(), output);
  }

  // optional int32 typeSign = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->typesign(), output);
  }

  // optional int32 pushDataType = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->pushdatatype(), output);
  }

  // optional double timestamp = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.Ticker)
}

::google::protobuf::uint8* Ticker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.Ticker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string time = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.Ticker.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->time(), target);
  }

  // required int64 sequence = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->sequence(), target);
  }

  // required int32 dir = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dir(), target);
  }

  // required double price = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->price(), target);
  }

  // required int64 volume = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->volume(), target);
  }

  // required double turnover = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->turnover(), target);
  }

  // optional double recvTime = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->recvtime(), target);
  }

  // optional int32 type = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->type(), target);
  }

  // optional int32 typeSign = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->typesign(), target);
  }

  // optional int32 pushDataType = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->pushdatatype(), target);
  }

  // optional double timestamp = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.Ticker)
  return target;
}

size_t Ticker::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.Ticker)
  size_t total_size = 0;

  if (has_time()) {
    // required string time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  if (has_sequence()) {
    // required int64 sequence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sequence());
  }

  if (has_price()) {
    // required double price = 4;
    total_size += 1 + 8;
  }

  if (has_volume()) {
    // required int64 volume = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());
  }

  if (has_dir()) {
    // required int32 dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dir());
  }

  if (has_turnover()) {
    // required double turnover = 6;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t Ticker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.Ticker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000005f) ^ 0x0000005f) == 0) {  // All required fields are present.
    // required string time = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());

    // required int64 sequence = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->sequence());

    // required double price = 4;
    total_size += 1 + 8;

    // required int64 volume = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());

    // required int32 dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dir());

    // required double turnover = 6;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 type = 8;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // optional double recvTime = 7;
  if (has_recvtime()) {
    total_size += 1 + 8;
  }

  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 typeSign = 9;
    if (has_typesign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->typesign());
    }

    // optional int32 pushDataType = 10;
    if (has_pushdatatype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pushdatatype());
    }

    // optional double timestamp = 11;
    if (has_timestamp()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ticker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.Ticker)
  GOOGLE_DCHECK_NE(&from, this);
  const Ticker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ticker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.Ticker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.Ticker)
    MergeFrom(*source);
  }
}

void Ticker::MergeFrom(const Ticker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.Ticker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_time();
      time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (cached_has_bits & 0x00000002u) {
      sequence_ = from.sequence_;
    }
    if (cached_has_bits & 0x00000004u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000008u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00000010u) {
      dir_ = from.dir_;
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000040u) {
      turnover_ = from.turnover_;
    }
    if (cached_has_bits & 0x00000080u) {
      recvtime_ = from.recvtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      typesign_ = from.typesign_;
    }
    if (cached_has_bits & 0x00000200u) {
      pushdatatype_ = from.pushdatatype_;
    }
    if (cached_has_bits & 0x00000400u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ticker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.Ticker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ticker::CopyFrom(const Ticker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.Ticker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ticker::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000005f) != 0x0000005f) return false;
  return true;
}

void Ticker::Swap(Ticker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ticker::InternalSwap(Ticker* other) {
  using std::swap;
  time_.Swap(&other->time_);
  swap(sequence_, other->sequence_);
  swap(price_, other->price_);
  swap(volume_, other->volume_);
  swap(dir_, other->dir_);
  swap(type_, other->type_);
  swap(turnover_, other->turnover_);
  swap(recvtime_, other->recvtime_);
  swap(typesign_, other->typesign_);
  swap(pushdatatype_, other->pushdatatype_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ticker::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderBook::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderBook::kPriceFieldNumber;
const int OrderBook::kVolumeFieldNumber;
const int OrderBook::kOrederCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderBook::OrderBook()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsOrderBook();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.OrderBook)
}
OrderBook::OrderBook(const OrderBook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&oredercount_) -
    reinterpret_cast<char*>(&price_)) + sizeof(oredercount_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.OrderBook)
}

void OrderBook::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oredercount_) -
      reinterpret_cast<char*>(&price_)) + sizeof(oredercount_));
}

OrderBook::~OrderBook() {
  // @@protoc_insertion_point(destructor:Qot_Common.OrderBook)
  SharedDtor();
}

void OrderBook::SharedDtor() {
}

void OrderBook::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderBook::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderBook& OrderBook::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsOrderBook();
  return *internal_default_instance();
}

OrderBook* OrderBook::New(::google::protobuf::Arena* arena) const {
  OrderBook* n = new OrderBook;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderBook::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&price_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&oredercount_) -
        reinterpret_cast<char*>(&price_)) + sizeof(oredercount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderBook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.OrderBook)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 volume = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_volume();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 orederCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_oredercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oredercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.OrderBook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.OrderBook)
  return false;
#undef DO_
}

void OrderBook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double price = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->price(), output);
  }

  // required int64 volume = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->volume(), output);
  }

  // required int32 orederCount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->oredercount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.OrderBook)
}

::google::protobuf::uint8* OrderBook::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.OrderBook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double price = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->price(), target);
  }

  // required int64 volume = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->volume(), target);
  }

  // required int32 orederCount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->oredercount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.OrderBook)
  return target;
}

size_t OrderBook::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.OrderBook)
  size_t total_size = 0;

  if (has_price()) {
    // required double price = 1;
    total_size += 1 + 8;
  }

  if (has_volume()) {
    // required int64 volume = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());
  }

  if (has_oredercount()) {
    // required int32 orederCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->oredercount());
  }

  return total_size;
}
size_t OrderBook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.OrderBook)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required double price = 1;
    total_size += 1 + 8;

    // required int64 volume = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->volume());

    // required int32 orederCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->oredercount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderBook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.OrderBook)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderBook* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderBook>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.OrderBook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.OrderBook)
    MergeFrom(*source);
  }
}

void OrderBook::MergeFrom(const OrderBook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.OrderBook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000002u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00000004u) {
      oredercount_ = from.oredercount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OrderBook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderBook::CopyFrom(const OrderBook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.OrderBook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderBook::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void OrderBook::Swap(OrderBook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderBook::InternalSwap(OrderBook* other) {
  using std::swap;
  swap(price_, other->price_);
  swap(volume_, other->volume_);
  swap(oredercount_, other->oredercount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderBook::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderDetail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderDetail::kOrderCountFieldNumber;
const int OrderDetail::kOrderVolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderDetail::OrderDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsOrderDetail();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.OrderDetail)
}
OrderDetail::OrderDetail(const OrderDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      ordervol_(from.ordervol_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ordercount_ = from.ordercount_;
  // @@protoc_insertion_point(copy_constructor:Qot_Common.OrderDetail)
}

void OrderDetail::SharedCtor() {
  _cached_size_ = 0;
  ordercount_ = 0;
}

OrderDetail::~OrderDetail() {
  // @@protoc_insertion_point(destructor:Qot_Common.OrderDetail)
  SharedDtor();
}

void OrderDetail::SharedDtor() {
}

void OrderDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderDetail::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderDetail& OrderDetail::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsOrderDetail();
  return *internal_default_instance();
}

OrderDetail* OrderDetail::New(::google::protobuf::Arena* arena) const {
  OrderDetail* n = new OrderDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.OrderDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ordervol_.Clear();
  ordercount_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.OrderDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 orderCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_ordercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ordercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double orderVol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 17u, input, this->mutable_ordervol())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_ordervol())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.OrderDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.OrderDetail)
  return false;
#undef DO_
}

void OrderDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.OrderDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 orderCount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ordercount(), output);
  }

  // repeated double orderVol = 2;
  for (int i = 0, n = this->ordervol_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      2, this->ordervol(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.OrderDetail)
}

::google::protobuf::uint8* OrderDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.OrderDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 orderCount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ordercount(), target);
  }

  // repeated double orderVol = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(2, this->ordervol_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.OrderDetail)
  return target;
}

size_t OrderDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.OrderDetail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 orderCount = 1;
  if (has_ordercount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ordercount());
  }
  // repeated double orderVol = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ordervol_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ordervol_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.OrderDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.OrderDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.OrderDetail)
    MergeFrom(*source);
  }
}

void OrderDetail::MergeFrom(const OrderDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.OrderDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ordervol_.MergeFrom(from.ordervol_);
  if (from.has_ordercount()) {
    set_ordercount(from.ordercount());
  }
}

void OrderDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.OrderDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderDetail::CopyFrom(const OrderDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.OrderDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void OrderDetail::Swap(OrderDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderDetail::InternalSwap(OrderDetail* other) {
  using std::swap;
  ordervol_.InternalSwap(&other->ordervol_);
  swap(ordercount_, other->ordercount_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderDetail::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShareHoldingChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShareHoldingChange::kHolderNameFieldNumber;
const int ShareHoldingChange::kHoldingQtyFieldNumber;
const int ShareHoldingChange::kHoldingRatioFieldNumber;
const int ShareHoldingChange::kChangeQtyFieldNumber;
const int ShareHoldingChange::kChangeRatioFieldNumber;
const int ShareHoldingChange::kTimeFieldNumber;
const int ShareHoldingChange::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareHoldingChange::ShareHoldingChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsShareHoldingChange();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.ShareHoldingChange)
}
ShareHoldingChange::ShareHoldingChange(const ShareHoldingChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  holdername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_holdername()) {
    holdername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.holdername_);
  }
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_time()) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  ::memcpy(&holdingqty_, &from.holdingqty_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&holdingqty_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.ShareHoldingChange)
}

void ShareHoldingChange::SharedCtor() {
  _cached_size_ = 0;
  holdername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&holdingqty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&holdingqty_)) + sizeof(timestamp_));
}

ShareHoldingChange::~ShareHoldingChange() {
  // @@protoc_insertion_point(destructor:Qot_Common.ShareHoldingChange)
  SharedDtor();
}

void ShareHoldingChange::SharedDtor() {
  holdername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShareHoldingChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareHoldingChange::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShareHoldingChange& ShareHoldingChange::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsShareHoldingChange();
  return *internal_default_instance();
}

ShareHoldingChange* ShareHoldingChange::New(::google::protobuf::Arena* arena) const {
  ShareHoldingChange* n = new ShareHoldingChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShareHoldingChange::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.ShareHoldingChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!holdername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*holdername_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!time_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*time_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&holdingqty_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&holdingqty_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShareHoldingChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.ShareHoldingChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string holderName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_holdername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->holdername().data(), static_cast<int>(this->holdername().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.ShareHoldingChange.holderName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double holdingQty = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_holdingqty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &holdingqty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double holdingRatio = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_holdingratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &holdingratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double changeQty = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_changeqty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &changeqty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double changeRatio = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_changeratio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &changeratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.ShareHoldingChange.time");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double timestamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.ShareHoldingChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.ShareHoldingChange)
  return false;
#undef DO_
}

void ShareHoldingChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.ShareHoldingChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string holderName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->holdername().data(), static_cast<int>(this->holdername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.ShareHoldingChange.holderName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->holdername(), output);
  }

  // required double holdingQty = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->holdingqty(), output);
  }

  // required double holdingRatio = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->holdingratio(), output);
  }

  // required double changeQty = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->changeqty(), output);
  }

  // required double changeRatio = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->changeratio(), output);
  }

  // required string time = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.ShareHoldingChange.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->time(), output);
  }

  // optional double timestamp = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.ShareHoldingChange)
}

::google::protobuf::uint8* ShareHoldingChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.ShareHoldingChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string holderName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->holdername().data(), static_cast<int>(this->holdername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.ShareHoldingChange.holderName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->holdername(), target);
  }

  // required double holdingQty = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->holdingqty(), target);
  }

  // required double holdingRatio = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->holdingratio(), target);
  }

  // required double changeQty = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->changeqty(), target);
  }

  // required double changeRatio = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->changeratio(), target);
  }

  // required string time = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.ShareHoldingChange.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->time(), target);
  }

  // optional double timestamp = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.ShareHoldingChange)
  return target;
}

size_t ShareHoldingChange::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.ShareHoldingChange)
  size_t total_size = 0;

  if (has_holdername()) {
    // required string holderName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->holdername());
  }

  if (has_time()) {
    // required string time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  if (has_holdingqty()) {
    // required double holdingQty = 2;
    total_size += 1 + 8;
  }

  if (has_holdingratio()) {
    // required double holdingRatio = 3;
    total_size += 1 + 8;
  }

  if (has_changeqty()) {
    // required double changeQty = 4;
    total_size += 1 + 8;
  }

  if (has_changeratio()) {
    // required double changeRatio = 5;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t ShareHoldingChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.ShareHoldingChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string holderName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->holdername());

    // required string time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());

    // required double holdingQty = 2;
    total_size += 1 + 8;

    // required double holdingRatio = 3;
    total_size += 1 + 8;

    // required double changeQty = 4;
    total_size += 1 + 8;

    // required double changeRatio = 5;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional double timestamp = 7;
  if (has_timestamp()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareHoldingChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.ShareHoldingChange)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareHoldingChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareHoldingChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.ShareHoldingChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.ShareHoldingChange)
    MergeFrom(*source);
  }
}

void ShareHoldingChange::MergeFrom(const ShareHoldingChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.ShareHoldingChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_holdername();
      holdername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.holdername_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_time();
      time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
    }
    if (cached_has_bits & 0x00000004u) {
      holdingqty_ = from.holdingqty_;
    }
    if (cached_has_bits & 0x00000008u) {
      holdingratio_ = from.holdingratio_;
    }
    if (cached_has_bits & 0x00000010u) {
      changeqty_ = from.changeqty_;
    }
    if (cached_has_bits & 0x00000020u) {
      changeratio_ = from.changeratio_;
    }
    if (cached_has_bits & 0x00000040u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShareHoldingChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.ShareHoldingChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareHoldingChange::CopyFrom(const ShareHoldingChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.ShareHoldingChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareHoldingChange::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void ShareHoldingChange::Swap(ShareHoldingChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareHoldingChange::InternalSwap(ShareHoldingChange* other) {
  using std::swap;
  holdername_.Swap(&other->holdername_);
  time_.Swap(&other->time_);
  swap(holdingqty_, other->holdingqty_);
  swap(holdingratio_, other->holdingratio_);
  swap(changeqty_, other->changeqty_);
  swap(changeratio_, other->changeratio_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShareHoldingChange::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubInfo::kSubTypeFieldNumber;
const int SubInfo::kSecurityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubInfo::SubInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsSubInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.SubInfo)
}
SubInfo::SubInfo(const SubInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      securitylist_(from.securitylist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subtype_ = from.subtype_;
  // @@protoc_insertion_point(copy_constructor:Qot_Common.SubInfo)
}

void SubInfo::SharedCtor() {
  _cached_size_ = 0;
  subtype_ = 0;
}

SubInfo::~SubInfo() {
  // @@protoc_insertion_point(destructor:Qot_Common.SubInfo)
  SharedDtor();
}

void SubInfo::SharedDtor() {
}

void SubInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubInfo::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubInfo& SubInfo::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsSubInfo();
  return *internal_default_instance();
}

SubInfo* SubInfo::New(::google::protobuf::Arena* arena) const {
  SubInfo* n = new SubInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.SubInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  securitylist_.Clear();
  subtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.SubInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 subType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_subtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &subtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Qot_Common.Security securityList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_securitylist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.SubInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.SubInfo)
  return false;
#undef DO_
}

void SubInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.SubInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 subType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->subtype(), output);
  }

  // repeated .Qot_Common.Security securityList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->securitylist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->securitylist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.SubInfo)
}

::google::protobuf::uint8* SubInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.SubInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 subType = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->subtype(), target);
  }

  // repeated .Qot_Common.Security securityList = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->securitylist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->securitylist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.SubInfo)
  return target;
}

size_t SubInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.SubInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required int32 subType = 1;
  if (has_subtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->subtype());
  }
  // repeated .Qot_Common.Security securityList = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->securitylist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->securitylist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.SubInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SubInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.SubInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.SubInfo)
    MergeFrom(*source);
  }
}

void SubInfo::MergeFrom(const SubInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.SubInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  securitylist_.MergeFrom(from.securitylist_);
  if (from.has_subtype()) {
    set_subtype(from.subtype());
  }
}

void SubInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.SubInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubInfo::CopyFrom(const SubInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.SubInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->securitylist())) return false;
  return true;
}

void SubInfo::Swap(SubInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubInfo::InternalSwap(SubInfo* other) {
  using std::swap;
  securitylist_.InternalSwap(&other->securitylist_);
  swap(subtype_, other->subtype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubInfo::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConnSubInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnSubInfo::kSubInfoListFieldNumber;
const int ConnSubInfo::kUsedQuotaFieldNumber;
const int ConnSubInfo::kIsOwnConnDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnSubInfo::ConnSubInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsConnSubInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.ConnSubInfo)
}
ConnSubInfo::ConnSubInfo(const ConnSubInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      subinfolist_(from.subinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&usedquota_, &from.usedquota_,
    static_cast<size_t>(reinterpret_cast<char*>(&isownconndata_) -
    reinterpret_cast<char*>(&usedquota_)) + sizeof(isownconndata_));
  // @@protoc_insertion_point(copy_constructor:Qot_Common.ConnSubInfo)
}

void ConnSubInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&usedquota_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isownconndata_) -
      reinterpret_cast<char*>(&usedquota_)) + sizeof(isownconndata_));
}

ConnSubInfo::~ConnSubInfo() {
  // @@protoc_insertion_point(destructor:Qot_Common.ConnSubInfo)
  SharedDtor();
}

void ConnSubInfo::SharedDtor() {
}

void ConnSubInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnSubInfo::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnSubInfo& ConnSubInfo::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsConnSubInfo();
  return *internal_default_instance();
}

ConnSubInfo* ConnSubInfo::New(::google::protobuf::Arena* arena) const {
  ConnSubInfo* n = new ConnSubInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnSubInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.ConnSubInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subinfolist_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&usedquota_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isownconndata_) -
        reinterpret_cast<char*>(&usedquota_)) + sizeof(isownconndata_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ConnSubInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.ConnSubInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Qot_Common.SubInfo subInfoList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_subinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 usedQuota = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_usedquota();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &usedquota_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool isOwnConnData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_isownconndata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isownconndata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.ConnSubInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.ConnSubInfo)
  return false;
#undef DO_
}

void ConnSubInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.ConnSubInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Qot_Common.SubInfo subInfoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subinfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->subinfolist(static_cast<int>(i)), output);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 usedQuota = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->usedquota(), output);
  }

  // required bool isOwnConnData = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isownconndata(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.ConnSubInfo)
}

::google::protobuf::uint8* ConnSubInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.ConnSubInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Qot_Common.SubInfo subInfoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subinfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->subinfolist(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required int32 usedQuota = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->usedquota(), target);
  }

  // required bool isOwnConnData = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isownconndata(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.ConnSubInfo)
  return target;
}

size_t ConnSubInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.ConnSubInfo)
  size_t total_size = 0;

  if (has_usedquota()) {
    // required int32 usedQuota = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usedquota());
  }

  if (has_isownconndata()) {
    // required bool isOwnConnData = 3;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ConnSubInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.ConnSubInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 usedQuota = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->usedquota());

    // required bool isOwnConnData = 3;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .Qot_Common.SubInfo subInfoList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->subinfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subinfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnSubInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.ConnSubInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnSubInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnSubInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.ConnSubInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.ConnSubInfo)
    MergeFrom(*source);
  }
}

void ConnSubInfo::MergeFrom(const ConnSubInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.ConnSubInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subinfolist_.MergeFrom(from.subinfolist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      usedquota_ = from.usedquota_;
    }
    if (cached_has_bits & 0x00000002u) {
      isownconndata_ = from.isownconndata_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ConnSubInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.ConnSubInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnSubInfo::CopyFrom(const ConnSubInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.ConnSubInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnSubInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->subinfolist())) return false;
  return true;
}

void ConnSubInfo::Swap(ConnSubInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnSubInfo::InternalSwap(ConnSubInfo* other) {
  using std::swap;
  subinfolist_.InternalSwap(&other->subinfolist_);
  swap(usedquota_, other->usedquota_);
  swap(isownconndata_, other->isownconndata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnSubInfo::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlateInfo::InitAsDefaultInstance() {
  ::Qot_Common::_PlateInfo_default_instance_._instance.get_mutable()->plate_ = const_cast< ::Qot_Common::Security*>(
      ::Qot_Common::Security::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlateInfo::kPlateFieldNumber;
const int PlateInfo::kNameFieldNumber;
const int PlateInfo::kPlateTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlateInfo::PlateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Qot_5fCommon_2eproto::InitDefaultsPlateInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Qot_Common.PlateInfo)
}
PlateInfo::PlateInfo(const PlateInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_plate()) {
    plate_ = new ::Qot_Common::Security(*from.plate_);
  } else {
    plate_ = NULL;
  }
  platetype_ = from.platetype_;
  // @@protoc_insertion_point(copy_constructor:Qot_Common.PlateInfo)
}

void PlateInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&plate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platetype_) -
      reinterpret_cast<char*>(&plate_)) + sizeof(platetype_));
}

PlateInfo::~PlateInfo() {
  // @@protoc_insertion_point(destructor:Qot_Common.PlateInfo)
  SharedDtor();
}

void PlateInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete plate_;
}

void PlateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlateInfo::descriptor() {
  ::protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlateInfo& PlateInfo::default_instance() {
  ::protobuf_Qot_5fCommon_2eproto::InitDefaultsPlateInfo();
  return *internal_default_instance();
}

PlateInfo* PlateInfo::New(::google::protobuf::Arena* arena) const {
  PlateInfo* n = new PlateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Qot_Common.PlateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(plate_ != NULL);
      plate_->Clear();
    }
  }
  platetype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Qot_Common.PlateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Qot_Common.Security plate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Qot_Common.PlateInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 plateType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_platetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &platetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Qot_Common.PlateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Qot_Common.PlateInfo)
  return false;
#undef DO_
}

void PlateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Qot_Common.PlateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security plate = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->plate_, output);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.PlateInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 plateType = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->platetype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Qot_Common.PlateInfo)
}

::google::protobuf::uint8* PlateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Qot_Common.PlateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .Qot_Common.Security plate = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->plate_, deterministic, target);
  }

  // required string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Qot_Common.PlateInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 plateType = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->platetype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Qot_Common.PlateInfo)
  return target;
}

size_t PlateInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Qot_Common.PlateInfo)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_plate()) {
    // required .Qot_Common.Security plate = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->plate_);
  }

  return total_size;
}
size_t PlateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Qot_Common.PlateInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .Qot_Common.Security plate = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->plate_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 plateType = 3;
  if (has_platetype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->platetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Qot_Common.PlateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlateInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Qot_Common.PlateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Qot_Common.PlateInfo)
    MergeFrom(*source);
  }
}

void PlateInfo::MergeFrom(const PlateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Qot_Common.PlateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_plate()->::Qot_Common::Security::MergeFrom(from.plate());
    }
    if (cached_has_bits & 0x00000004u) {
      platetype_ = from.platetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Qot_Common.PlateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlateInfo::CopyFrom(const PlateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Qot_Common.PlateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlateInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_plate()) {
    if (!this->plate_->IsInitialized()) return false;
  }
  return true;
}

void PlateInfo::Swap(PlateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlateInfo::InternalSwap(PlateInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(plate_, other->plate_);
  swap(platetype_, other->platetype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlateInfo::GetMetadata() const {
  protobuf_Qot_5fCommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Qot_5fCommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Qot_Common

// @@protoc_insertion_point(global_scope)
